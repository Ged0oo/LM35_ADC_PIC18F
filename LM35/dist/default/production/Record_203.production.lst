

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Feb 04 15:59:58 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,inline
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,inline
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,inline
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=3
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=3
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    92                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    93  0000                     
    94                           ; Version 2.20
    95                           ; Generated 12/02/2020 GMT
    96                           ; 
    97                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC18F4620 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128  0000                     
   129                           	psect	idataBANK0
   130  003AE4                     __pidataBANK0:
   131                           	callstack 0
   132                           
   133                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3070
   134  003AE4  68                 	db	104
   135                           
   136                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3068
   137  003AE5  5A                 	db	90
   138                           
   139                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3066
   140  003AE6  62                 	db	98
   141                           
   142                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3064
   143  003AE7  2A                 	db	42
   144                           
   145                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3059
   146  003AE8  1A                 	db	26
   147                           
   148                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3057
   149  003AE9  62                 	db	98
   150                           
   151                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3055
   152  003AEA  2A                 	db	42
   153                           
   154                           ;initializer for _RB7_Flag
   155  003AEB  01                 	db	1
   156                           
   157                           ;initializer for _RB6_Flag
   158  003AEC  01                 	db	1
   159                           
   160                           ;initializer for _RB5_Flag
   161  003AED  01                 	db	1
   162                           
   163                           ;initializer for _RB4_Flag
   164  003AEE  01                 	db	1
   165                           
   166                           ;initializer for _lcd_1
   167  003AEF  12                 	db	18
   168  003AF0  1A                 	db	26
   169  003AF1  22                 	db	34
   170  003AF2  2A                 	db	42
   171  003AF3  32                 	db	50
   172  003AF4  3A                 	db	58
   173                           
   174                           ;initializer for _motor_2
   175  003AF5  13                 	db	19
   176  003AF6  1B                 	db	27
   177                           
   178                           ;initializer for _motor_1
   179  003AF7  03                 	db	3
   180  003AF8  0B                 	db	11
   181                           
   182                           	psect	idataBANK1
   183  003A56                     __pidataBANK1:
   184                           	callstack 0
   185                           
   186                           ;initializer for _port_registers
   187  003A56  80                 	db	128
   188  003A57  0F                 	db	15
   189  003A58  81                 	db	129
   190  003A59  0F                 	db	15
   191  003A5A  82                 	db	130
   192  003A5B  0F                 	db	15
   193  003A5C  83                 	db	131
   194  003A5D  0F                 	db	15
   195  003A5E  84                 	db	132
   196  003A5F  0F                 	db	15
   197                           
   198                           ;initializer for _lat_registers
   199  003A60  89                 	db	137
   200  003A61  0F                 	db	15
   201  003A62  8A                 	db	138
   202  003A63  0F                 	db	15
   203  003A64  8B                 	db	139
   204  003A65  0F                 	db	15
   205  003A66  8C                 	db	140
   206  003A67  0F                 	db	15
   207  003A68  8D                 	db	141
   208  003A69  0F                 	db	15
   209                           
   210                           ;initializer for _tris_registers
   211  003A6A  92                 	db	146
   212  003A6B  0F                 	db	15
   213  003A6C  93                 	db	147
   214  003A6D  0F                 	db	15
   215  003A6E  94                 	db	148
   216  003A6F  0F                 	db	15
   217  003A70  95                 	db	149
   218  003A71  0F                 	db	15
   219  003A72  96                 	db	150
   220  003A73  0F                 	db	15
   221                           
   222                           ;initializer for _adc_1
   223  003A74  7E                 	db	low _adcInterruptHandeler
   224  003A75  27                 	db	high _adcInterruptHandeler
   225  003A76  00                 	db	0
   226  003A77  05                 	db	5
   227  003A78  05                 	db	5
   228  003A79  00                 	db	0
   229  003A7A  02                 	db	2
   230                           
   231                           	psect	smallconst
   232  001000                     __psmallconst:
   233                           	callstack 0
   234  001000  00                 	db	0
   235  001001  37                 	db	55
   236  001002  38                 	db	56
   237  001003  39                 	db	57
   238  001004  2F                 	db	47
   239  001005  34                 	db	52
   240  001006  35                 	db	53
   241  001007  36                 	db	54
   242  001008  2A                 	db	42
   243  001009  31                 	db	49
   244  00100A  32                 	db	50
   245  00100B  33                 	db	51
   246  00100C  2D                 	db	45
   247  00100D  23                 	db	35
   248  00100E  30                 	db	48
   249  00100F  3D                 	db	61
   250  001010  2B                 	db	43
   251  001011                     __end_of_btn_values:
   252                           	callstack 0
   253  0000                     _SPBRGH	set	4016
   254  0000                     _SPBRG	set	4015
   255  0000                     _TXREG	set	4013
   256  0000                     _TXSTAbits	set	4012
   257  0000                     _RCREG	set	4014
   258  0000                     _RCSTAbits	set	4011
   259  0000                     _TMR3L	set	4018
   260  0000                     _TMR3H	set	4019
   261  0000                     _TMR2	set	4044
   262  0000                     _T2CONbits	set	4042
   263  0000                     _TMR1L	set	4046
   264  0000                     _TMR1H	set	4047
   265  0000                     _T1CONbits	set	4045
   266  0000                     _TMR0L	set	4054
   267  0000                     _TMR0H	set	4055
   268  0000                     _T0CONbits	set	4053
   269  0000                     _INTCON2bits	set	4081
   270  0000                     _INTCON3bits	set	4080
   271  0000                     _SSPBUF	set	4041
   272  0000                     _SSPSTATbits	set	4039
   273  0000                     _SSPADD	set	4040
   274  0000                     _SSPCON2bits	set	4037
   275  0000                     _SSPCON1bits	set	4038
   276  0000                     _EECON2	set	4007
   277  0000                     _ADCON1bits	set	4033
   278  0000                     _ADRESL	set	4035
   279  0000                     _ADRESH	set	4036
   280  0000                     _INTCONbits	set	4082
   281  0000                     _TRISD	set	3989
   282  0000                     _TRISC	set	3988
   283  0000                     _PR2	set	4043
   284  0000                     _TRISB	set	3987
   285  0000                     _TRISE	set	3990
   286  001011                     STR_4:
   287  001011  54                 	db	84	;'T'
   288  001012  65                 	db	101	;'e'
   289  001013  6D                 	db	109	;'m'
   290  001014  70                 	db	112	;'p'
   291  001015  65                 	db	101	;'e'
   292  001016  72                 	db	114	;'r'
   293  001017  61                 	db	97	;'a'
   294  001018  74                 	db	116	;'t'
   295  001019  75                 	db	117	;'u'
   296  00101A  72                 	db	114	;'r'
   297  00101B  65                 	db	101	;'e'
   298  00101C  20                 	db	32
   299  00101D  69                 	db	105	;'i'
   300  00101E  73                 	db	115	;'s'
   301  00101F  20                 	db	32
   302  001020  3A                 	db	58	;':'
   303  001021  20                 	db	32
   304  001022  00                 	db	0
   305  001023                     STR_5:
   306  001023  57                 	db	87	;'W'
   307  001024  65                 	db	101	;'e'
   308  001025  6C                 	db	108	;'l'
   309  001026  63                 	db	99	;'c'
   310  001027  6F                 	db	111	;'o'
   311  001028  6D                 	db	109	;'m'
   312  001029  65                 	db	101	;'e'
   313  00102A  2E                 	db	46
   314  00102B  00                 	db	0
   315  00102C                     STR_1:
   316  00102C  25                 	db	37
   317  00102D  69                 	db	105	;'i'
   318  00102E  00                 	db	0
   319  00102F  00                 	db	0	; dummy byte at the end
   320  0000                     
   321                           	psect	nvBANK0
   322  0000F1                     __pnvBANK0:
   323                           	callstack 0
   324  0000F1                     _ret:
   325                           	callstack 0
   326  0000F1                     	ds	1
   327  0000                     _PORTBbits	set	3969
   328  0000                     _TRISCbits	set	3988
   329  0000                     _PIE1bits	set	3997
   330  0000                     _ADCON2bits	set	4032
   331  0000                     _ADCON0bits	set	4034
   332  0000                     _PORTE	set	3972
   333  0000                     _PORTD	set	3971
   334  0000                     _PORTC	set	3970
   335  0000                     _PORTB	set	3969
   336  0000                     _PORTA	set	3968
   337  0000                     _LATA	set	3977
   338  0000                     _TRISA	set	3986
   339  0000                     _PIE2bits	set	4000
   340  0000                     _CCP2CONbits	set	4026
   341  0000                     _CCP1CONbits	set	4029
   342  0000                     _PIR1bits	set	3998
   343  0000                     _CCPR1L	set	4030
   344  0000                     _CCPR2L	set	4027
   345  0000                     _EECON1bits	set	4006
   346  0000                     _EEDATA	set	4008
   347  0000                     _EEADR	set	4009
   348  0000                     _EEADRH	set	4010
   349  0000                     _T3CONbits	set	4017
   350  0000                     _PIR2bits	set	4001
   351  0000                     _LATE	set	3981
   352  0000                     _LATD	set	3980
   353  0000                     _LATC	set	3979
   354  0000                     _LATB	set	3978
   355  0000                     _BAUDCONbits	set	4024
   356                           
   357                           ; #config settings
   358                           
   359                           	psect	cinit
   360  0034DA                     __pcinit:
   361                           	callstack 0
   362  0034DA                     start_initialization:
   363                           	callstack 0
   364  0034DA                     __initialization:
   365                           	callstack 0
   366                           
   367                           ; Initialize objects allocated to BANK1 (37 bytes)
   368                           ; load TBLPTR registers with __pidataBANK1
   369  0034DA  0E56               	movlw	low __pidataBANK1
   370  0034DC  6EF6               	movwf	tblptrl,c
   371  0034DE  0E3A               	movlw	high __pidataBANK1
   372  0034E0  6EF7               	movwf	tblptrh,c
   373  0034E2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   374  0034E4  6EF8               	movwf	tblptru,c
   375  0034E6  EE01  F02D         	lfsr	0,__pdataBANK1
   376  0034EA  EE10 F025          	lfsr	1,37
   377  0034EE                     copy_data0:
   378  0034EE  0009               	tblrd		*+
   379  0034F0  CFF5 FFEE          	movff	tablat,postinc0
   380  0034F4  50E5               	movf	postdec1,w,c
   381  0034F6  50E1               	movf	fsr1l,w,c
   382  0034F8  E1FA               	bnz	copy_data0
   383                           
   384                           ; Initialize objects allocated to BANK0 (21 bytes)
   385                           ; load TBLPTR registers with __pidataBANK0
   386  0034FA  0EE4               	movlw	low __pidataBANK0
   387  0034FC  6EF6               	movwf	tblptrl,c
   388  0034FE  0E3A               	movlw	high __pidataBANK0
   389  003500  6EF7               	movwf	tblptrh,c
   390  003502  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   391  003504  6EF8               	movwf	tblptru,c
   392  003506  EE00  F0C8         	lfsr	0,__pdataBANK0
   393  00350A  EE10 F015          	lfsr	1,21
   394  00350E                     copy_data1:
   395  00350E  0009               	tblrd		*+
   396  003510  CFF5 FFEE          	movff	tablat,postinc0
   397  003514  50E5               	movf	postdec1,w,c
   398  003516  50E1               	movf	fsr1l,w,c
   399  003518  E1FA               	bnz	copy_data1
   400                           
   401                           ; Clear objects allocated to BANK1 (45 bytes)
   402  00351A  EE01  F000         	lfsr	0,__pbssBANK1
   403  00351E  0E2D               	movlw	45
   404  003520                     clear_0:
   405  003520  6AEE               	clrf	postinc0,c
   406  003522  06E8               	decf	wreg,f,c
   407  003524  E1FD               	bnz	clear_0
   408                           
   409                           ; Clear objects allocated to BANK0 (72 bytes)
   410  003526  EE00  F080         	lfsr	0,__pbssBANK0
   411  00352A  0E48               	movlw	72
   412  00352C                     clear_1:
   413  00352C  6AEE               	clrf	postinc0,c
   414  00352E  06E8               	decf	wreg,f,c
   415  003530  E1FD               	bnz	clear_1
   416                           
   417                           ; Clear objects allocated to COMRAM (2 bytes)
   418  003532  6A72               	clrf	(__pbssCOMRAM+1)& (0+255),c
   419  003534  6A71               	clrf	__pbssCOMRAM& (0+255),c
   420  003536                     end_of_initialization:
   421                           	callstack 0
   422  003536                     __end_of__initialization:
   423                           	callstack 0
   424  003536  9073               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   425  003538  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   426  00353A  0100               	movlb	0
   427  00353C  EF6D  F01C         	goto	_main	;jump to C main() function
   428                           
   429                           	psect	bssCOMRAM
   430  000071                     __pbssCOMRAM:
   431                           	callstack 0
   432  000071                     _LM35:
   433                           	callstack 0
   434  000071                     	ds	2
   435                           
   436                           	psect	bssBANK0
   437  000080                     __pbssBANK0:
   438                           	callstack 0
   439  000080                     _nout:
   440                           	callstack 0
   441  000080                     	ds	2
   442  000082                     _width:
   443                           	callstack 0
   444  000082                     	ds	2
   445  000084                     _prec:
   446                           	callstack 0
   447  000084                     	ds	2
   448  000086                     _flags:
   449                           	callstack 0
   450  000086                     	ds	2
   451  000088                     _EUSART_OverrunErrorHandler:
   452                           	callstack 0
   453  000088                     	ds	2
   454  00008A                     _EUSART_FramingErrorHandler:
   455                           	callstack 0
   456  00008A                     	ds	2
   457  00008C                     _EUSART_RxInterruptHandler:
   458                           	callstack 0
   459  00008C                     	ds	2
   460  00008E                     _EUSART_TxInterruptHandler:
   461                           	callstack 0
   462  00008E                     	ds	2
   463  000090                     _timer3_preload:
   464                           	callstack 0
   465  000090                     	ds	2
   466  000092                     _TMR3_InterruptHandler:
   467                           	callstack 0
   468  000092                     	ds	2
   469  000094                     _TMR2_InterruptHandler:
   470                           	callstack 0
   471  000094                     	ds	2
   472  000096                     _timer1_preload:
   473                           	callstack 0
   474  000096                     	ds	2
   475  000098                     _TMR1_InterruptHandler:
   476                           	callstack 0
   477  000098                     	ds	2
   478  00009A                     _timer0_preload:
   479                           	callstack 0
   480  00009A                     	ds	2
   481  00009C                     _TMR0_InterruptHandler:
   482                           	callstack 0
   483  00009C                     	ds	2
   484  00009E                     _RB7_InterruptHandler_LOW:
   485                           	callstack 0
   486  00009E                     	ds	2
   487  0000A0                     _RB7_InterruptHandler_HIGH:
   488                           	callstack 0
   489  0000A0                     	ds	2
   490  0000A2                     _RB6_InterruptHandler_LOW:
   491                           	callstack 0
   492  0000A2                     	ds	2
   493  0000A4                     _RB6_InterruptHandler_HIGH:
   494                           	callstack 0
   495  0000A4                     	ds	2
   496  0000A6                     _RB5_InterruptHandler_LOW:
   497                           	callstack 0
   498  0000A6                     	ds	2
   499  0000A8                     _RB5_InterruptHandler_HIGH:
   500                           	callstack 0
   501  0000A8                     	ds	2
   502  0000AA                     _RB4_InterruptHandler_LOW:
   503                           	callstack 0
   504  0000AA                     	ds	2
   505  0000AC                     _RB4_InterruptHandler_HIGH:
   506                           	callstack 0
   507  0000AC                     	ds	2
   508  0000AE                     _INT2_InterruptHandler:
   509                           	callstack 0
   510  0000AE                     	ds	2
   511  0000B0                     _INT1_InterruptHandler:
   512                           	callstack 0
   513  0000B0                     	ds	2
   514  0000B2                     _INT0_InterruptHandler:
   515                           	callstack 0
   516  0000B2                     	ds	2
   517  0000B4                     _I2C_Report_Receive_Overflow_InterruptHandle:
   518                           	callstack 0
   519  0000B4                     	ds	2
   520  0000B6                     _I2C_DefaultInterruptHandle:
   521                           	callstack 0
   522  0000B6                     	ds	2
   523  0000B8                     _I2C_Report_Write_Collision_InterruptHandler:
   524                           	callstack 0
   525  0000B8                     	ds	2
   526  0000BA                     _CCP2_InterruptHandler:
   527                           	callstack 0
   528  0000BA                     	ds	2
   529  0000BC                     _CCP1_InterruptHandler:
   530                           	callstack 0
   531  0000BC                     	ds	2
   532  0000BE                     _ADC_InterruptHandler:
   533                           	callstack 0
   534  0000BE                     	ds	2
   535  0000C0                     _timer2_preload:
   536                           	callstack 0
   537  0000C0                     	ds	1
   538  0000C1                     relay_turn_off@F3017:
   539                           	callstack 0
   540  0000C1                     	ds	1
   541  0000C2                     relay_turn_on@F3012:
   542                           	callstack 0
   543  0000C2                     	ds	1
   544  0000C3                     relay_initialize@F3007:
   545                           	callstack 0
   546  0000C3                     	ds	1
   547  0000C4                     led_turn_toggle@F3028:
   548                           	callstack 0
   549  0000C4                     	ds	1
   550  0000C5                     led_turn_off@F3023:
   551                           	callstack 0
   552  0000C5                     	ds	1
   553  0000C6                     led_turn_on@F3018:
   554                           	callstack 0
   555  0000C6                     	ds	1
   556  0000C7                     led_initialize@F3013:
   557                           	callstack 0
   558  0000C7                     	ds	1
   559                           
   560                           	psect	dataBANK0
   561  0000C8                     __pdataBANK0:
   562                           	callstack 0
   563  0000C8                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3070:
   564                           	callstack 0
   565  0000C8                     	ds	1
   566  0000C9                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3068:
   567                           	callstack 0
   568  0000C9                     	ds	1
   569  0000CA                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3066:
   570                           	callstack 0
   571  0000CA                     	ds	1
   572  0000CB                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3064:
   573                           	callstack 0
   574  0000CB                     	ds	1
   575  0000CC                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3059:
   576                           	callstack 0
   577  0000CC                     	ds	1
   578  0000CD                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3057:
   579                           	callstack 0
   580  0000CD                     	ds	1
   581  0000CE                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3055:
   582                           	callstack 0
   583  0000CE                     	ds	1
   584  0000CF                     _RB7_Flag:
   585                           	callstack 0
   586  0000CF                     	ds	1
   587  0000D0                     _RB6_Flag:
   588                           	callstack 0
   589  0000D0                     	ds	1
   590  0000D1                     _RB5_Flag:
   591                           	callstack 0
   592  0000D1                     	ds	1
   593  0000D2                     _RB4_Flag:
   594                           	callstack 0
   595  0000D2                     	ds	1
   596  0000D3                     _lcd_1:
   597                           	callstack 0
   598  0000D3                     	ds	6
   599  0000D9                     _motor_2:
   600                           	callstack 0
   601  0000D9                     	ds	2
   602  0000DB                     _motor_1:
   603                           	callstack 0
   604  0000DB                     	ds	2
   605                           
   606                           	psect	bssBANK1
   607  000100                     __pbssBANK1:
   608                           	callstack 0
   609  000100                     	ds	6
   610  000106                     _dbuf:
   611                           	callstack 0
   612  000106                     	ds	32
   613  000126                     _adcArray:
   614                           	callstack 0
   615  000126                     	ds	7
   616                           
   617                           	psect	dataBANK1
   618  00012D                     __pdataBANK1:
   619                           	callstack 0
   620  00012D                     _port_registers:
   621                           	callstack 0
   622  00012D                     	ds	10
   623  000137                     _lat_registers:
   624                           	callstack 0
   625  000137                     	ds	10
   626  000141                     _tris_registers:
   627                           	callstack 0
   628  000141                     	ds	10
   629  00014B                     _adc_1:
   630                           	callstack 0
   631  00014B                     	ds	7
   632                           
   633                           	psect	cstackBANK1
   634  000152                     __pcstackBANK1:
   635                           	callstack 0
   636  000152                     ??_gpio_pin_write_logic:
   637  000152                     ??_gpio_pin_direction_intialize:
   638  000152                     ADC_Init@ret:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x0
   642  000152                     	ds	6
   643  000158                     ??_gpio_pin_intialize:
   644  000158                     lcd_4bit_send_enable_signal@ret:
   645                           	callstack 0
   646  000158                     lcd_send_4bits@lcd:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x6
   650  000158                     	ds	1
   651  000159                     gpio_pin_intialize@ret:
   652                           	callstack 0
   653                           
   654                           ; 1 bytes @ 0x7
   655  000159                     	ds	1
   656  00015A                     lcd_send_4bits@_data_command:
   657                           	callstack 0
   658  00015A                     dc_motor_initialize@_dc_motor:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x8
   662  00015A                     	ds	1
   663  00015B                     lcd_4bit_send_command@lcd:
   664                           	callstack 0
   665  00015B                     lcd_4bit_send_char_data@lcd:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x9
   669  00015B                     	ds	1
   670  00015C                     dc_motor_initialize@ret:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0xA
   674  00015C                     	ds	1
   675  00015D                     lcd_4bit_send_command@command:
   676                           	callstack 0
   677  00015D                     lcd_4bit_send_char_data@data:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0xB
   681  00015D                     	ds	1
   682  00015E                     lcd_4bit_send_command@ret:
   683                           	callstack 0
   684  00015E                     lcd_4bit_send_char_data@ret:
   685                           	callstack 0
   686                           
   687                           ; 1 bytes @ 0xC
   688  00015E                     	ds	1
   689  00015F                     lcd_4bit_intialize@lcd:
   690                           	callstack 0
   691  00015F                     lcd_4bit_set_cursor@lcd:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0xD
   695  00015F                     	ds	2
   696  000161                     ??_lcd_4bit_intialize:
   697  000161                     lcd_4bit_set_cursor@row:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0xF
   701  000161                     	ds	1
   702  000162                     lcd_4bit_set_cursor@coulmn:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x10
   706  000162                     	ds	1
   707  000163                     ??_lcd_4bit_set_cursor:
   708  000163                     lcd_4bit_intialize@l_data_pins_counter:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x11
   712  000163                     	ds	1
   713  000164                     lcd_4bit_intialize@ret:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x12
   717  000164                     	ds	1
   718  000165                     lcd_4bit_set_cursor@ret:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0x13
   722  000165                     	ds	1
   723  000166                     lcd_4bit_send_string_pos@lcd:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x14
   727  000166                     	ds	2
   728  000168                     lcd_4bit_send_string_pos@row:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x16
   732  000168                     	ds	1
   733  000169                     lcd_4bit_send_string_pos@column:
   734                           	callstack 0
   735                           
   736                           ; 1 bytes @ 0x17
   737  000169                     	ds	1
   738  00016A                     lcd_4bit_send_string_pos@str:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x18
   742  00016A                     	ds	2
   743  00016C                     lcd_4bit_send_string_pos@ret:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0x1A
   747  00016C                     	ds	1
   748  00016D                     ??_WelcomingMessage:
   749                           
   750                           ; 1 bytes @ 0x1B
   751  00016D                     	ds	2
   752                           
   753                           	psect	cstackBANK0
   754  0000DD                     __pcstackBANK0:
   755                           	callstack 0
   756  0000DD                     ??_InterruptManager:
   757                           
   758                           ; 1 bytes @ 0x0
   759  0000DD                     	ds	14
   760  0000EB                     ??_adc_input_channel_port_configure:
   761  0000EB                     ADC_StartConversion@_adc:
   762                           	callstack 0
   763  0000EB                     select_result_format@_adc:
   764                           	callstack 0
   765  0000EB                     configure_voltage_reference@_adc:
   766                           	callstack 0
   767  0000EB                     gpio_pin_direction_intialize@_pin_config:
   768                           	callstack 0
   769  0000EB                     gpio_pin_write_logic@_pin_config:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0xE
   773  0000EB                     	ds	2
   774  0000ED                     ADC_StartConversion@ret:
   775                           	callstack 0
   776  0000ED                     adc_input_channel_port_configure@channel:
   777                           	callstack 0
   778  0000ED                     gpio_pin_direction_intialize@ret:
   779                           	callstack 0
   780  0000ED                     gpio_pin_write_logic@logic:
   781                           	callstack 0
   782                           
   783                           ; 1 bytes @ 0x10
   784  0000ED                     	ds	1
   785  0000EE                     gpio_pin_write_logic@ret:
   786                           	callstack 0
   787  0000EE                     ADC_Init@_adc:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x11
   791  0000EE                     	ds	1
   792  0000EF                     lcd_send_4bits@ret:
   793                           	callstack 0
   794  0000EF                     lcd_4bit_send_enable_signal@lcd:
   795                           	callstack 0
   796  0000EF                     gpio_pin_intialize@_pin_config:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x12
   800  0000EF                     	ds	1
   801  0000F0                     ??_ADC_Init:
   802                           
   803                           ; 1 bytes @ 0x13
   804  0000F0                     	ds	1
   805  0000F1                     
   806                           ; 1 bytes @ 0x14
   807                           
   808                           	psect	cstackCOMRAM
   809  000001                     __pcstackCOMRAM:
   810                           	callstack 0
   811  000001                     ?_strlen:
   812                           	callstack 0
   813  000001                     ?___xxtofl:
   814                           	callstack 0
   815  000001                     ?___aodiv:
   816                           	callstack 0
   817  000001                     ?___aomod:
   818                           	callstack 0
   819  000001                     RB4_ISR@RB4_Source:
   820                           	callstack 0
   821  000001                     RB5_ISR@RB5_Source:
   822                           	callstack 0
   823  000001                     RB6_ISR@RB6_Source:
   824                           	callstack 0
   825  000001                     RB7_ISR@RB7_Source:
   826                           	callstack 0
   827  000001                     ADC_GetConversionResult@_adc:
   828                           	callstack 0
   829  000001                     memset@dest:
   830                           	callstack 0
   831  000001                     fputc@c:
   832                           	callstack 0
   833  000001                     strlen@s:
   834                           	callstack 0
   835  000001                     i2gpio_pin_write_logic@_pin_config:
   836                           	callstack 0
   837  000001                     ___xxtofl@val:
   838                           	callstack 0
   839  000001                     ___aodiv@dividend:
   840                           	callstack 0
   841  000001                     ___aomod@dividend:
   842                           	callstack 0
   843                           
   844                           ; 8 bytes @ 0x0
   845  000001                     	ds	2
   846  000003                     i2gpio_pin_write_logic@logic:
   847                           	callstack 0
   848  000003                     ADC_GetConversionResult@conversion_result:
   849                           	callstack 0
   850  000003                     memset@c:
   851                           	callstack 0
   852  000003                     fputc@fp:
   853                           	callstack 0
   854  000003                     strlen@a:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0x2
   858  000003                     	ds	1
   859  000004                     ??i2_gpio_pin_write_logic:
   860                           
   861                           ; 1 bytes @ 0x3
   862  000004                     	ds	1
   863  000005                     ??_fputc:
   864  000005                     ??_ADC_GetConversionResult:
   865  000005                     ??___xxtofl:
   866  000005                     memset@n:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x4
   870  000005                     	ds	2
   871  000007                     ??_memset:
   872                           
   873                           ; 1 bytes @ 0x6
   874  000007                     	ds	1
   875  000008                     ADC_GetConversionResult@ret:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0x7
   879  000008                     	ds	1
   880  000009                     ___xxtofl@sign:
   881                           	callstack 0
   882  000009                     memset@k:
   883                           	callstack 0
   884  000009                     ___aodiv@divisor:
   885                           	callstack 0
   886  000009                     ___aomod@divisor:
   887                           	callstack 0
   888                           
   889                           ; 8 bytes @ 0x8
   890  000009                     	ds	1
   891  00000A                     ___xxtofl@exp:
   892                           	callstack 0
   893  00000A                     i2gpio_pin_write_logic@ret:
   894                           	callstack 0
   895  00000A                     fputs@s:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x9
   899  00000A                     	ds	1
   900  00000B                     dc_motor_move_right@_dc_motor:
   901                           	callstack 0
   902  00000B                     dc_motor_move_left@_dc_motor:
   903                           	callstack 0
   904  00000B                     dc_motor_stop@_dc_motor:
   905                           	callstack 0
   906  00000B                     memset@s:
   907                           	callstack 0
   908  00000B                     i2lcd_send_4bits@lcd:
   909                           	callstack 0
   910  00000B                     i2lcd_4bit_send_enable_signal@lcd:
   911                           	callstack 0
   912  00000B                     ___xxtofl@arg:
   913                           	callstack 0
   914                           
   915                           ; 4 bytes @ 0xA
   916  00000B                     	ds	1
   917  00000C                     fputs@fp:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0xB
   921  00000C                     	ds	1
   922  00000D                     dc_motor_move_right@ret:
   923                           	callstack 0
   924  00000D                     dc_motor_move_left@ret:
   925                           	callstack 0
   926  00000D                     dc_motor_stop@ret:
   927                           	callstack 0
   928  00000D                     i2lcd_send_4bits@_data_command:
   929                           	callstack 0
   930  00000D                     i2lcd_4bit_send_enable_signal@ret:
   931                           	callstack 0
   932                           
   933                           ; 1 bytes @ 0xC
   934  00000D                     	ds	1
   935  00000E                     fputs@c:
   936                           	callstack 0
   937  00000E                     i2lcd_send_4bits@ret:
   938                           	callstack 0
   939                           
   940                           ; 1 bytes @ 0xD
   941  00000E                     	ds	1
   942  00000F                     ?___flmul:
   943                           	callstack 0
   944  00000F                     fputs@i:
   945                           	callstack 0
   946  00000F                     i2lcd_4bit_send_command@lcd:
   947                           	callstack 0
   948  00000F                     i2lcd_4bit_send_char_data@lcd:
   949                           	callstack 0
   950  00000F                     ___flmul@b:
   951                           	callstack 0
   952                           
   953                           ; 4 bytes @ 0xE
   954  00000F                     	ds	2
   955  000011                     ?_pad:
   956                           	callstack 0
   957  000011                     ___aodiv@counter:
   958                           	callstack 0
   959  000011                     ___aomod@counter:
   960                           	callstack 0
   961  000011                     i2lcd_4bit_send_command@command:
   962                           	callstack 0
   963  000011                     i2lcd_4bit_send_char_data@data:
   964                           	callstack 0
   965  000011                     pad@fp:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x10
   969  000011                     	ds	1
   970  000012                     ___aodiv@sign:
   971                           	callstack 0
   972  000012                     ___aomod@sign:
   973                           	callstack 0
   974  000012                     i2lcd_4bit_send_command@ret:
   975                           	callstack 0
   976  000012                     i2lcd_4bit_send_char_data@ret:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x11
   980  000012                     	ds	1
   981  000013                     ?_abs:
   982                           	callstack 0
   983  000013                     pad@buf:
   984                           	callstack 0
   985  000013                     abs@a:
   986                           	callstack 0
   987  000013                     i2lcd_4bit_set_cursor@lcd:
   988                           	callstack 0
   989  000013                     ___flmul@a:
   990                           	callstack 0
   991  000013                     ___aodiv@quotient:
   992                           	callstack 0
   993                           
   994                           ; 8 bytes @ 0x12
   995  000013                     	ds	2
   996  000015                     ??_abs:
   997  000015                     i2lcd_4bit_set_cursor@row:
   998                           	callstack 0
   999  000015                     pad@p:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x14
  1003  000015                     	ds	1
  1004  000016                     i2lcd_4bit_set_cursor@coulmn:
  1005                           	callstack 0
  1006                           
  1007                           ; 1 bytes @ 0x15
  1008  000016                     	ds	1
  1009  000017                     ??___flmul:
  1010  000017                     ??_pad:
  1011  000017                     ??i2_lcd_4bit_set_cursor:
  1012                           
  1013                           ; 1 bytes @ 0x16
  1014  000017                     	ds	1
  1015  000018                     pad@i:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x17
  1019  000018                     	ds	1
  1020  000019                     i2lcd_4bit_set_cursor@ret:
  1021                           	callstack 0
  1022                           
  1023                           ; 1 bytes @ 0x18
  1024  000019                     	ds	1
  1025  00001A                     pad@w:
  1026                           	callstack 0
  1027  00001A                     i2lcd_4bit_send_string_pos@lcd:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x19
  1031  00001A                     	ds	1
  1032  00001B                     ___flmul@sign:
  1033                           	callstack 0
  1034                           
  1035                           ; 1 bytes @ 0x1A
  1036  00001B                     	ds	1
  1037  00001C                     ?_dtoa:
  1038                           	callstack 0
  1039  00001C                     i2lcd_4bit_send_string_pos@row:
  1040                           	callstack 0
  1041  00001C                     dtoa@fp:
  1042                           	callstack 0
  1043  00001C                     ___flmul@grs:
  1044                           	callstack 0
  1045                           
  1046                           ; 4 bytes @ 0x1B
  1047  00001C                     	ds	1
  1048  00001D                     i2lcd_4bit_send_string_pos@column:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x1C
  1052  00001D                     	ds	1
  1053  00001E                     i2lcd_4bit_send_string_pos@str:
  1054                           	callstack 0
  1055  00001E                     dtoa@d:
  1056                           	callstack 0
  1057                           
  1058                           ; 8 bytes @ 0x1D
  1059  00001E                     	ds	2
  1060  000020                     ___flmul@aexp:
  1061                           	callstack 0
  1062  000020                     i2lcd_4bit_send_string_pos@ret:
  1063                           	callstack 0
  1064                           
  1065                           ; 1 bytes @ 0x1F
  1066  000020                     	ds	1
  1067  000021                     ___flmul@bexp:
  1068                           	callstack 0
  1069                           
  1070                           ; 1 bytes @ 0x20
  1071  000021                     	ds	1
  1072  000022                     ___flmul@prod:
  1073                           	callstack 0
  1074                           
  1075                           ; 4 bytes @ 0x21
  1076  000022                     	ds	4
  1077  000026                     ??_dtoa:
  1078  000026                     ___flmul@temp:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x25
  1082  000026                     	ds	2
  1083  000028                     ?___fltol:
  1084                           	callstack 0
  1085  000028                     ___fltol@f1:
  1086                           	callstack 0
  1087                           
  1088                           ; 4 bytes @ 0x27
  1089  000028                     	ds	4
  1090  00002C                     ??___fltol:
  1091                           
  1092                           ; 1 bytes @ 0x2B
  1093  00002C                     	ds	2
  1094  00002E                     _dtoa$4992:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x2D
  1098  00002E                     	ds	2
  1099  000030                     ___fltol@sign1:
  1100                           	callstack 0
  1101  000030                     dtoa@p:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x2F
  1105  000030                     	ds	1
  1106  000031                     ___fltol@exp1:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x30
  1110  000031                     	ds	1
  1111  000032                     dtoa@w:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x31
  1115  000032                     	ds	2
  1116  000034                     dtoa@s:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x33
  1120  000034                     	ds	2
  1121  000036                     dtoa@n:
  1122                           	callstack 0
  1123                           
  1124                           ; 8 bytes @ 0x35
  1125  000036                     	ds	8
  1126  00003E                     dtoa@i:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x3D
  1130  00003E                     	ds	2
  1131  000040                     ?_vfpfcnvrt:
  1132                           	callstack 0
  1133  000040                     vfpfcnvrt@fp:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x3F
  1137  000040                     	ds	2
  1138  000042                     vfpfcnvrt@fmt:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x41
  1142  000042                     	ds	2
  1143  000044                     vfpfcnvrt@ap:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x43
  1147  000044                     	ds	2
  1148  000046                     ??_vfpfcnvrt:
  1149                           
  1150                           ; 1 bytes @ 0x45
  1151  000046                     	ds	2
  1152  000048                     vfpfcnvrt@ll:
  1153                           	callstack 0
  1154                           
  1155                           ; 8 bytes @ 0x47
  1156  000048                     	ds	8
  1157  000050                     ?_vfprintf:
  1158                           	callstack 0
  1159  000050                     vfprintf@fp:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x4F
  1163  000050                     	ds	2
  1164  000052                     vfprintf@fmt:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x51
  1168  000052                     	ds	2
  1169  000054                     vfprintf@ap:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x53
  1173  000054                     	ds	2
  1174  000056                     vfprintf@cfmt:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x55
  1178  000056                     	ds	2
  1179  000058                     ?_sprintf:
  1180                           	callstack 0
  1181  000058                     sprintf@s:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x57
  1185  000058                     	ds	2
  1186  00005A                     sprintf@fmt:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x59
  1190  00005A                     	ds	6
  1191  000060                     sprintf@ap:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x5F
  1195  000060                     	ds	2
  1196  000062                     sprintf@f:
  1197                           	callstack 0
  1198                           
  1199                           ; 11 bytes @ 0x61
  1200  000062                     	ds	11
  1201  00006D                     convert_uint8_to_string@str:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x6C
  1205  00006D                     	ds	2
  1206  00006F                     convert_uint8_to_string@value:
  1207                           	callstack 0
  1208                           
  1209                           ; 1 bytes @ 0x6E
  1210  00006F                     	ds	1
  1211  000070                     convert_uint8_to_string@ret:
  1212                           	callstack 0
  1213                           
  1214                           ; 1 bytes @ 0x6F
  1215  000070                     	ds	1
  1216  000071                     
  1217                           ; 1 bytes @ 0x70
  1218 ;;
  1219 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1220 ;;
  1221 ;; *************** function _main *****************
  1222 ;; Defined at:
  1223 ;;		line 91 in file "application.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  2  1740[None  ] int 
  1230 ;; Registers used:
  1231 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;Total ram usage:        0 bytes
  1242 ;; Hardware stack levels required when called: 18
  1243 ;; This function calls:
  1244 ;;		_ADC_StartConversion
  1245 ;;		_WelcomingMessage
  1246 ;;		_application_intialize
  1247 ;;		_lcd_4bit_send_string_pos
  1248 ;; This function is called by:
  1249 ;;		Startup code after reset
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           	psect	text0
  1254  0038DA                     __ptext0:
  1255                           	callstack 0
  1256  0038DA                     _main:
  1257                           	callstack 13
  1258  0038DA                     
  1259                           ;application.c: 93:     application_intialize();
  1260  0038DA  EC9B  F01B         	call	_application_intialize	;wreg free
  1261  0038DE                     
  1262                           ;application.c: 94:     WelcomingMessage();
  1263  0038DE  ECFF  F01A         	call	_WelcomingMessage	;wreg free
  1264  0038E2                     
  1265                           ;application.c: 95:     ret = lcd_4bit_send_string_pos(&lcd_1, 2, 1, "Temperature is : "
      +                          );
  1266  0038E2  0ED3               	movlw	low _lcd_1
  1267  0038E4  0101               	movlb	1	; () banked
  1268  0038E6  6F66               	movwf	lcd_4bit_send_string_pos@lcd& (0+255),b
  1269  0038E8  0E00               	movlw	high _lcd_1
  1270  0038EA  6F67               	movwf	(lcd_4bit_send_string_pos@lcd+1)& (0+255),b
  1271  0038EC  0E02               	movlw	2
  1272  0038EE  6F68               	movwf	lcd_4bit_send_string_pos@row& (0+255),b
  1273  0038F0  0E01               	movlw	1
  1274  0038F2  6F69               	movwf	lcd_4bit_send_string_pos@column& (0+255),b
  1275  0038F4  0E11               	movlw	low STR_4
  1276  0038F6  6F6A               	movwf	lcd_4bit_send_string_pos@str& (0+255),b
  1277  0038F8  0E10               	movlw	high STR_4
  1278  0038FA  6F6B               	movwf	(lcd_4bit_send_string_pos@str+1)& (0+255),b
  1279  0038FC  ECC5  F017         	call	_lcd_4bit_send_string_pos	;wreg free
  1280  003900  0100               	movlb	0	; () banked
  1281  003902  6FF1               	movwf	_ret& (0+255),b
  1282  003904                     l9894:
  1283                           
  1284                           ; BSR set to: 0
  1285                           ;application.c: 97:     {;application.c: 98:         ret = ADC_StartConversion(&adc_1);
  1286  003904  0E4B               	movlw	low _adc_1
  1287  003906  6FEB               	movwf	ADC_StartConversion@_adc& (0+255),b
  1288  003908  0E01               	movlw	high _adc_1
  1289  00390A  6FEC               	movwf	(ADC_StartConversion@_adc+1)& (0+255),b
  1290  00390C  EC18  F01D         	call	_ADC_StartConversion	;wreg free
  1291  003910  0100               	movlb	0	; () banked
  1292  003912  6FF1               	movwf	_ret& (0+255),b
  1293  003914  EF82  F01C         	goto	l9894
  1294  003918  EF07  F000         	goto	start
  1295  00391C                     __end_of_main:
  1296                           	callstack 0
  1297                           
  1298 ;; *************** function _application_intialize *****************
  1299 ;; Defined at:
  1300 ;;		line 114 in file "application.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;		None
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;		None
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;Total ram usage:        0 bytes
  1319 ;; Hardware stack levels used: 1
  1320 ;; Hardware stack levels required when called: 16
  1321 ;; This function calls:
  1322 ;;		_ADC_Init
  1323 ;;		_dc_motor_initialize
  1324 ;;		_lcd_4bit_intialize
  1325 ;; This function is called by:
  1326 ;;		_main
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text1
  1331  003736                     __ptext1:
  1332                           	callstack 0
  1333  003736                     _application_intialize:
  1334                           	callstack 14
  1335  003736                     
  1336                           ;application.c: 116:     ret = lcd_4bit_intialize(&lcd_1);
  1337  003736  0ED3               	movlw	low _lcd_1
  1338  003738  0101               	movlb	1	; () banked
  1339  00373A  6F5F               	movwf	lcd_4bit_intialize@lcd& (0+255),b
  1340  00373C  0E00               	movlw	high _lcd_1
  1341  00373E  6F60               	movwf	(lcd_4bit_intialize@lcd+1)& (0+255),b
  1342  003740  ECCC  F011         	call	_lcd_4bit_intialize	;wreg free
  1343  003744  0100               	movlb	0	; () banked
  1344  003746  6FF1               	movwf	_ret& (0+255),b
  1345                           
  1346                           ;application.c: 117:     ret = dc_motor_initialize(&motor_1);
  1347  003748  0EDB               	movlw	low _motor_1
  1348  00374A  0101               	movlb	1	; () banked
  1349  00374C  6F5A               	movwf	dc_motor_initialize@_dc_motor& (0+255),b
  1350  00374E  0E00               	movlw	high _motor_1
  1351  003750  6F5B               	movwf	(dc_motor_initialize@_dc_motor+1)& (0+255),b
  1352  003752  EC76  F01B         	call	_dc_motor_initialize	;wreg free
  1353  003756  0100               	movlb	0	; () banked
  1354  003758  6FF1               	movwf	_ret& (0+255),b
  1355                           
  1356                           ;application.c: 118:     ret = dc_motor_initialize(&motor_2);
  1357  00375A  0ED9               	movlw	low _motor_2
  1358  00375C  0101               	movlb	1	; () banked
  1359  00375E  6F5A               	movwf	dc_motor_initialize@_dc_motor& (0+255),b
  1360  003760  0E00               	movlw	high _motor_2
  1361  003762  6F5B               	movwf	(dc_motor_initialize@_dc_motor+1)& (0+255),b
  1362  003764  EC76  F01B         	call	_dc_motor_initialize	;wreg free
  1363  003768  0100               	movlb	0	; () banked
  1364  00376A  6FF1               	movwf	_ret& (0+255),b
  1365  00376C                     
  1366                           ; BSR set to: 0
  1367                           ;application.c: 119:     ret = ADC_Init(&adc_1);
  1368  00376C  0E4B               	movlw	low _adc_1
  1369  00376E  6FEE               	movwf	ADC_Init@_adc& (0+255),b
  1370  003770  0E01               	movlw	high _adc_1
  1371  003772  6FEF               	movwf	(ADC_Init@_adc+1)& (0+255),b
  1372  003774  EC44  F016         	call	_ADC_Init	;wreg free
  1373  003778  0100               	movlb	0	; () banked
  1374  00377A  6FF1               	movwf	_ret& (0+255),b
  1375  00377C                     
  1376                           ; BSR set to: 0
  1377  00377C  0012               	return		;funcret
  1378  00377E                     __end_of_application_intialize:
  1379                           	callstack 0
  1380                           
  1381 ;; *************** function _lcd_4bit_intialize *****************
  1382 ;; Defined at:
  1383 ;;		line 23 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  lcd             2   13[BANK1 ] PTR const struct .
  1386 ;;		 -> lcd_1(6), 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  ret             1   18[BANK1 ] unsigned char 
  1389 ;;  l_data_pins_    1   17[BANK1 ] unsigned char 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      unsigned char 
  1392 ;; Registers used:
  1393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1399 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;Total ram usage:        6 bytes
  1404 ;; Hardware stack levels used: 1
  1405 ;; Hardware stack levels required when called: 15
  1406 ;; This function calls:
  1407 ;;		_gpio_pin_intialize
  1408 ;;		_lcd_4bit_send_command
  1409 ;; This function is called by:
  1410 ;;		_application_intialize
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text2
  1415  002398                     __ptext2:
  1416                           	callstack 0
  1417  002398                     _lcd_4bit_intialize:
  1418                           	callstack 14
  1419  002398                     
  1420                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 25:     uint8 l_data_pins_counter = 0;
  1421  002398  0E00               	movlw	0
  1422  00239A  0101               	movlb	1	; () banked
  1423  00239C  6F63               	movwf	lcd_4bit_intialize@l_data_pins_counter& (0+255),b
  1424  00239E                     
  1425                           ; BSR set to: 1
  1426                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 26:     if(((void*)0) == lcd){
  1427  00239E  515F               	movf	lcd_4bit_intialize@lcd& (0+255),w,b
  1428  0023A0  1160               	iorwf	(lcd_4bit_intialize@lcd+1)& (0+255),w,b
  1429  0023A2  A4D8               	btfss	status,2,c
  1430  0023A4  EFD6  F011         	goto	u8041
  1431  0023A8  EFD8  F011         	goto	u8040
  1432  0023AC                     u8041:
  1433  0023AC  EFDC  F011         	goto	l8938
  1434  0023B0                     u8040:
  1435  0023B0                     
  1436                           ; BSR set to: 1
  1437                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 27:         ret = (Std_ReturnType)0x00;
  1438  0023B0  0E00               	movlw	0
  1439  0023B2  6F64               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1440                           
  1441                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 28:     }
  1442  0023B4  EF75  F012         	goto	l8974
  1443  0023B8                     l8938:
  1444                           
  1445                           ; BSR set to: 1
  1446                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 30:         ret = gpio_pin_intialize(&(lcd->lcd_rs));
  1447  0023B8  C15F  F0EF         	movff	lcd_4bit_intialize@lcd,gpio_pin_intialize@_pin_config
  1448  0023BC  C160  F0F0         	movff	lcd_4bit_intialize@lcd+1,gpio_pin_intialize@_pin_config+1
  1449  0023C0  EC8B  F019         	call	_gpio_pin_intialize	;wreg free
  1450  0023C4  0101               	movlb	1	; () banked
  1451  0023C6  6F64               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1452                           
  1453                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 31:         ret = gpio_pin_intialize(&(lcd->lcd_en));
  1454  0023C8  0E01               	movlw	1
  1455  0023CA  255F               	addwf	lcd_4bit_intialize@lcd& (0+255),w,b
  1456  0023CC  0100               	movlb	0	; () banked
  1457  0023CE  6FEF               	movwf	gpio_pin_intialize@_pin_config& (0+255),b
  1458  0023D0  0E00               	movlw	0
  1459  0023D2  0101               	movlb	1	; () banked
  1460  0023D4  2160               	addwfc	(lcd_4bit_intialize@lcd+1)& (0+255),w,b
  1461  0023D6  0100               	movlb	0	; () banked
  1462  0023D8  6FF0               	movwf	(gpio_pin_intialize@_pin_config+1)& (0+255),b
  1463  0023DA  EC8B  F019         	call	_gpio_pin_intialize	;wreg free
  1464  0023DE  0101               	movlb	1	; () banked
  1465  0023E0  6F64               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1466  0023E2                     
  1467                           ; BSR set to: 1
  1468                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 32:         for(l_data_pins_counter=0; l_data_pins_cou
      +                          nter<4; l_data_pins_counter++){
  1469  0023E2  0E00               	movlw	0
  1470  0023E4  6F63               	movwf	lcd_4bit_intialize@l_data_pins_counter& (0+255),b
  1471  0023E6                     l8946:
  1472                           
  1473                           ; BSR set to: 1
  1474  0023E6  5163               	movf	lcd_4bit_intialize@l_data_pins_counter& (0+255),w,b
  1475  0023E8  255F               	addwf	lcd_4bit_intialize@lcd& (0+255),w,b
  1476  0023EA  6F61               	movwf	??_lcd_4bit_intialize& (0+255),b
  1477  0023EC  0E00               	movlw	0
  1478  0023EE  2160               	addwfc	(lcd_4bit_intialize@lcd+1)& (0+255),w,b
  1479  0023F0  6F62               	movwf	(??_lcd_4bit_intialize+1)& (0+255),b
  1480  0023F2  0E02               	movlw	2
  1481  0023F4  2561               	addwf	??_lcd_4bit_intialize& (0+255),w,b
  1482  0023F6  0100               	movlb	0	; () banked
  1483  0023F8  6FEF               	movwf	gpio_pin_intialize@_pin_config& (0+255),b
  1484  0023FA  0E00               	movlw	0
  1485  0023FC  0101               	movlb	1	; () banked
  1486  0023FE  2162               	addwfc	(??_lcd_4bit_intialize+1)& (0+255),w,b
  1487  002400  0100               	movlb	0	; () banked
  1488  002402  6FF0               	movwf	(gpio_pin_intialize@_pin_config+1)& (0+255),b
  1489  002404  EC8B  F019         	call	_gpio_pin_intialize	;wreg free
  1490  002408                     
  1491                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 34:         }
  1492  002408  0101               	movlb	1	; () banked
  1493  00240A  2B63               	incf	lcd_4bit_intialize@l_data_pins_counter& (0+255),f,b
  1494  00240C                     
  1495                           ; BSR set to: 1
  1496  00240C  0E03               	movlw	3
  1497  00240E  6563               	cpfsgt	lcd_4bit_intialize@l_data_pins_counter& (0+255),b
  1498  002410  EF0C  F012         	goto	u8051
  1499  002414  EF0E  F012         	goto	u8050
  1500  002418                     u8051:
  1501  002418  EFF3  F011         	goto	l8946
  1502  00241C                     u8050:
  1503  00241C                     
  1504                           ; BSR set to: 1
  1505                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 35:         _delay((unsigned long)((20)*(4000000UL/400
      +                          0.0)));
  1506  00241C  0E1A               	movlw	26
  1507  00241E  0101               	movlb	1	; () banked
  1508  002420  6F61               	movwf	??_lcd_4bit_intialize& (0+255),b
  1509  002422  0EF8               	movlw	248
  1510  002424                     u9457:
  1511  002424  2EE8               	decfsz	wreg,f,c
  1512  002426  D7FE               	bra	u9457
  1513  002428  2F61               	decfsz	??_lcd_4bit_intialize& (0+255),f,b
  1514  00242A  D7FC               	bra	u9457
  1515  00242C  F000               	nop	
  1516  00242E  C15F  F15B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1517  002432  C160  F15C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1518  002436  0E38               	movlw	56
  1519  002438  0101               	movlb	1	; () banked
  1520  00243A  6F5D               	movwf	lcd_4bit_send_command@command& (0+255),b
  1521  00243C  EC0B  F019         	call	_lcd_4bit_send_command	;wreg free
  1522  002440                     
  1523                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 37:         _delay((unsigned long)((5)*(4000000UL/4000
      +                          .0)));
  1524  002440  0E07               	movlw	7
  1525  002442  0101               	movlb	1	; () banked
  1526  002444  6F61               	movwf	??_lcd_4bit_intialize& (0+255),b
  1527  002446  0E7D               	movlw	125
  1528  002448                     u9467:
  1529  002448  2EE8               	decfsz	wreg,f,c
  1530  00244A  D7FE               	bra	u9467
  1531  00244C  2F61               	decfsz	??_lcd_4bit_intialize& (0+255),f,b
  1532  00244E  D7FC               	bra	u9467
  1533  002450  C15F  F15B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1534  002454  C160  F15C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1535  002458  0E38               	movlw	56
  1536  00245A  0101               	movlb	1	; () banked
  1537  00245C  6F5D               	movwf	lcd_4bit_send_command@command& (0+255),b
  1538  00245E  EC0B  F019         	call	_lcd_4bit_send_command	;wreg free
  1539  002462                     
  1540                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 39:         _delay((unsigned long)((150)*(4000000UL/40
      +                          00000.0)));
  1541  002462  0E32               	movlw	50
  1542  002464                     u9477:
  1543  002464  2EE8               	decfsz	wreg,f,c
  1544  002466  D7FE               	bra	u9477
  1545  002468  C15F  F15B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1546  00246C  C160  F15C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1547  002470  0E38               	movlw	56
  1548  002472  0101               	movlb	1	; () banked
  1549  002474  6F5D               	movwf	lcd_4bit_send_command@command& (0+255),b
  1550  002476  EC0B  F019         	call	_lcd_4bit_send_command	;wreg free
  1551  00247A  C15F  F15B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1552  00247E  C160  F15C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1553  002482  0E01               	movlw	1
  1554  002484  0101               	movlb	1	; () banked
  1555  002486  6F5D               	movwf	lcd_4bit_send_command@command& (0+255),b
  1556  002488  EC0B  F019         	call	_lcd_4bit_send_command	;wreg free
  1557  00248C  C15F  F15B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1558  002490  C160  F15C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1559  002494  0E02               	movlw	2
  1560  002496  0101               	movlb	1	; () banked
  1561  002498  6F5D               	movwf	lcd_4bit_send_command@command& (0+255),b
  1562  00249A  EC0B  F019         	call	_lcd_4bit_send_command	;wreg free
  1563  00249E  C15F  F15B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1564  0024A2  C160  F15C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1565  0024A6  0E06               	movlw	6
  1566  0024A8  0101               	movlb	1	; () banked
  1567  0024AA  6F5D               	movwf	lcd_4bit_send_command@command& (0+255),b
  1568  0024AC  EC0B  F019         	call	_lcd_4bit_send_command	;wreg free
  1569  0024B0  C15F  F15B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1570  0024B4  C160  F15C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1571  0024B8  0E0C               	movlw	12
  1572  0024BA  0101               	movlb	1	; () banked
  1573  0024BC  6F5D               	movwf	lcd_4bit_send_command@command& (0+255),b
  1574  0024BE  EC0B  F019         	call	_lcd_4bit_send_command	;wreg free
  1575  0024C2  C15F  F15B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1576  0024C6  C160  F15C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1577  0024CA  0E28               	movlw	40
  1578  0024CC  0101               	movlb	1	; () banked
  1579  0024CE  6F5D               	movwf	lcd_4bit_send_command@command& (0+255),b
  1580  0024D0  EC0B  F019         	call	_lcd_4bit_send_command	;wreg free
  1581  0024D4                     
  1582                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 47:         ret = lcd_4bit_send_command(lcd, 0x80);
  1583  0024D4  C15F  F15B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1584  0024D8  C160  F15C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1585  0024DC  0E80               	movlw	128
  1586  0024DE  0101               	movlb	1	; () banked
  1587  0024E0  6F5D               	movwf	lcd_4bit_send_command@command& (0+255),b
  1588  0024E2  EC0B  F019         	call	_lcd_4bit_send_command	;wreg free
  1589  0024E6  0101               	movlb	1	; () banked
  1590  0024E8  6F64               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1591  0024EA                     l8974:
  1592                           
  1593                           ; BSR set to: 1
  1594                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 49:     return ret;
  1595  0024EA  5164               	movf	lcd_4bit_intialize@ret& (0+255),w,b
  1596  0024EC                     
  1597                           ; BSR set to: 1
  1598  0024EC  0012               	return		;funcret
  1599  0024EE                     __end_of_lcd_4bit_intialize:
  1600                           	callstack 0
  1601                           
  1602 ;; *************** function _dc_motor_initialize *****************
  1603 ;; Defined at:
  1604 ;;		line 17 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  _dc_motor       2    8[BANK1 ] PTR const struct .
  1607 ;;		 -> motor_2(2), motor_1(2), 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;  ret             1   10[BANK1 ] unsigned char 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      unsigned char 
  1612 ;; Registers used:
  1613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1619 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1622 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1623 ;;Total ram usage:        3 bytes
  1624 ;; Hardware stack levels used: 1
  1625 ;; Hardware stack levels required when called: 14
  1626 ;; This function calls:
  1627 ;;		_gpio_pin_intialize
  1628 ;; This function is called by:
  1629 ;;		_application_intialize
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           	psect	text3
  1634  0036EC                     __ptext3:
  1635                           	callstack 0
  1636  0036EC                     _dc_motor_initialize:
  1637                           	callstack 15
  1638  0036EC                     
  1639                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 18:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1640  0036EC  0E01               	movlw	1
  1641  0036EE  0101               	movlb	1	; () banked
  1642  0036F0  6F5C               	movwf	dc_motor_initialize@ret& (0+255),b
  1643  0036F2                     
  1644                           ; BSR set to: 1
  1645                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 19:     if(((void*)0) == _dc_motor){
  1646  0036F2  515A               	movf	dc_motor_initialize@_dc_motor& (0+255),w,b
  1647  0036F4  115B               	iorwf	(dc_motor_initialize@_dc_motor+1)& (0+255),w,b
  1648  0036F6  A4D8               	btfss	status,2,c
  1649  0036F8  EF80  F01B         	goto	u8131
  1650  0036FC  EF82  F01B         	goto	u8130
  1651  003700                     u8131:
  1652  003700  EF86  F01B         	goto	l9038
  1653  003704                     u8130:
  1654  003704                     
  1655                           ; BSR set to: 1
  1656                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 20:         ret = (Std_ReturnType)0x00;
  1657  003704  0E00               	movlw	0
  1658  003706  6F5C               	movwf	dc_motor_initialize@ret& (0+255),b
  1659                           
  1660                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 21:     }
  1661  003708  EF98  F01B         	goto	l9040
  1662  00370C                     l9038:
  1663                           
  1664                           ; BSR set to: 1
  1665                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 23:         gpio_pin_intialize(&(_dc_motor->dc_motor
      +                          _pin[0x00U]));
  1666  00370C  C15A  F0EF         	movff	dc_motor_initialize@_dc_motor,gpio_pin_intialize@_pin_config
  1667  003710  C15B  F0F0         	movff	dc_motor_initialize@_dc_motor+1,gpio_pin_intialize@_pin_config+1
  1668  003714  EC8B  F019         	call	_gpio_pin_intialize	;wreg free
  1669                           
  1670                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 24:         gpio_pin_intialize(&(_dc_motor->dc_motor
      +                          _pin[0x01U]));
  1671  003718  0E01               	movlw	1
  1672  00371A  0101               	movlb	1	; () banked
  1673  00371C  255A               	addwf	dc_motor_initialize@_dc_motor& (0+255),w,b
  1674  00371E  0100               	movlb	0	; () banked
  1675  003720  6FEF               	movwf	gpio_pin_intialize@_pin_config& (0+255),b
  1676  003722  0E00               	movlw	0
  1677  003724  0101               	movlb	1	; () banked
  1678  003726  215B               	addwfc	(dc_motor_initialize@_dc_motor+1)& (0+255),w,b
  1679  003728  0100               	movlb	0	; () banked
  1680  00372A  6FF0               	movwf	(gpio_pin_intialize@_pin_config+1)& (0+255),b
  1681  00372C  EC8B  F019         	call	_gpio_pin_intialize	;wreg free
  1682  003730                     l9040:
  1683                           
  1684                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 26:     return ret;
  1685  003730  0101               	movlb	1	; () banked
  1686  003732  515C               	movf	dc_motor_initialize@ret& (0+255),w,b
  1687  003734                     
  1688                           ; BSR set to: 1
  1689  003734  0012               	return		;funcret
  1690  003736                     __end_of_dc_motor_initialize:
  1691                           	callstack 0
  1692                           
  1693 ;; *************** function _gpio_pin_intialize *****************
  1694 ;; Defined at:
  1695 ;;		line 144 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  _pin_config     2   18[BANK0 ] PTR const struct .
  1698 ;;		 -> motor_2.dc_motor_pin(2), motor_2(2), motor_1.dc_motor_pin(2), motor_1(2), 
  1699 ;;		 -> lcd_1.lcd_data(4), lcd_1(6), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;  ret             1    7[BANK1 ] unsigned char 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      unsigned char 
  1704 ;; Registers used:
  1705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1711 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;Total ram usage:        4 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 13
  1718 ;; This function calls:
  1719 ;;		_gpio_pin_direction_intialize
  1720 ;;		_gpio_pin_write_logic
  1721 ;; This function is called by:
  1722 ;;		_lcd_4bit_intialize
  1723 ;;		_dc_motor_initialize
  1724 ;;		_seven_segement_intialize
  1725 ;;		_lcd_8bit_intialize
  1726 ;;		_keypad_initialize
  1727 ;;		_led_initialize
  1728 ;;		_relay_initialize
  1729 ;;		_Ultrasonic_Init
  1730 ;;		_CCP_Init
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           	psect	text4
  1735  003316                     __ptext4:
  1736                           	callstack 0
  1737  003316                     _gpio_pin_intialize:
  1738                           	callstack 15
  1739  003316                     
  1740                           ;MCAL_Layer/GPIO/hal_gpio.c: 146:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           8 -1){
  1741  003316  0100               	movlb	0	; () banked
  1742  003318  51EF               	movf	gpio_pin_intialize@_pin_config& (0+255),w,b
  1743  00331A  11F0               	iorwf	(gpio_pin_intialize@_pin_config+1)& (0+255),w,b
  1744  00331C  B4D8               	btfsc	status,2,c
  1745  00331E  EF93  F019         	goto	u7971
  1746  003322  EF95  F019         	goto	u7970
  1747  003326                     u7971:
  1748  003326  EFA7  F019         	goto	l8842
  1749  00332A                     u7970:
  1750  00332A                     
  1751                           ; BSR set to: 0
  1752  00332A  C0EF  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  1753  00332E  C0F0  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  1754  003332  30DF               	rrcf	223,w,c
  1755  003334  32E8               	rrcf	wreg,f,c
  1756  003336  32E8               	rrcf	wreg,f,c
  1757  003338  0B07               	andlw	7
  1758  00333A  0101               	movlb	1	; () banked
  1759  00333C  6F58               	movwf	??_gpio_pin_intialize& (0+255),b
  1760  00333E  0E07               	movlw	7
  1761  003340  6558               	cpfsgt	??_gpio_pin_intialize& (0+255),b
  1762  003342  EFA5  F019         	goto	u7981
  1763  003346  EFA7  F019         	goto	u7980
  1764  00334A                     u7981:
  1765  00334A  EFAC  F019         	goto	l8844
  1766  00334E                     u7980:
  1767  00334E                     l8842:
  1768                           
  1769                           ;MCAL_Layer/GPIO/hal_gpio.c: 147:         ret = (Std_ReturnType)0x00;
  1770  00334E  0E00               	movlw	0
  1771  003350  0101               	movlb	1	; () banked
  1772  003352  6F59               	movwf	gpio_pin_intialize@ret& (0+255),b
  1773                           
  1774                           ;MCAL_Layer/GPIO/hal_gpio.c: 148:     }
  1775  003354  EFC5  F019         	goto	l8846
  1776  003358                     l8844:
  1777                           
  1778                           ; BSR set to: 1
  1779                           ;MCAL_Layer/GPIO/hal_gpio.c: 150:         ret = gpio_pin_direction_intialize(_pin_config
      +                          );
  1780  003358  C0EF  F0EB         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  1781  00335C  C0F0  F0EC         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_direction_intialize@_pin_config+1
  1782  003360  EC77  F012         	call	_gpio_pin_direction_intialize	;wreg free
  1783  003364  0101               	movlb	1	; () banked
  1784  003366  6F59               	movwf	gpio_pin_intialize@ret& (0+255),b
  1785                           
  1786                           ;MCAL_Layer/GPIO/hal_gpio.c: 151:         ret = gpio_pin_write_logic(_pin_config, _pin_c
      +                          onfig->logic);
  1787  003368  C0EF  F0EB         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  1788  00336C  C0F0  F0EC         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  1789  003370  C0EF  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  1790  003374  C0F0  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  1791  003378  0100               	movlb	0	; () banked
  1792  00337A  0E00               	movlw	0
  1793  00337C  BEDF               	btfsc	indf2,7,c
  1794  00337E  0E01               	movlw	1
  1795  003380  6FED               	movwf	gpio_pin_write_logic@logic& (0+255),b
  1796  003382  EC21  F013         	call	_gpio_pin_write_logic	;wreg free
  1797  003386  0101               	movlb	1	; () banked
  1798  003388  6F59               	movwf	gpio_pin_intialize@ret& (0+255),b
  1799  00338A                     l8846:
  1800                           
  1801                           ; BSR set to: 1
  1802                           ;MCAL_Layer/GPIO/hal_gpio.c: 153:     return ret;
  1803  00338A  5159               	movf	gpio_pin_intialize@ret& (0+255),w,b
  1804  00338C                     
  1805                           ; BSR set to: 1
  1806  00338C  0012               	return		;funcret
  1807  00338E                     __end_of_gpio_pin_intialize:
  1808                           	callstack 0
  1809                           
  1810 ;; *************** function _gpio_pin_direction_intialize *****************
  1811 ;; Defined at:
  1812 ;;		line 25 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  _pin_config     2   14[BANK0 ] PTR const struct .
  1815 ;;		 -> motor_2.dc_motor_pin(2), motor_2(2), motor_1.dc_motor_pin(2), motor_1(2), 
  1816 ;;		 -> lcd_1.lcd_data(4), lcd_1(6), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SS(1), MSSP_SPI_Slave_Mode_GPIO_PIN
      +_Configurations@SPI_CLK(1), 
  1817 ;;		 -> MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDI(1), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDO(1), 
      +MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_CLK(1), MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDI(1), 
  1818 ;;		 -> MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDO(1), relay_initialize@pin_obj(1), led_initialize@pin_obj(1),
      + 
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;  ret             1   16[BANK0 ] unsigned char 
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      unsigned char 
  1823 ;; Registers used:
  1824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1830 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1833 ;;      Totals:         0       3       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;Total ram usage:        9 bytes
  1835 ;; Hardware stack levels used: 1
  1836 ;; Hardware stack levels required when called: 12
  1837 ;; This function calls:
  1838 ;;		Nothing
  1839 ;; This function is called by:
  1840 ;;		_gpio_pin_intialize
  1841 ;;		_button_initialize
  1842 ;;		_keypad_initialize
  1843 ;;		_Interrupt_RBx_Init
  1844 ;;		_Interrupt_INTx_Pin_Init
  1845 ;;		_MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations
  1846 ;;		_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           	psect	text5
  1851  0024EE                     __ptext5:
  1852                           	callstack 0
  1853  0024EE                     _gpio_pin_direction_intialize:
  1854                           	callstack 15
  1855  0024EE                     
  1856                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1857  0024EE  0E01               	movlw	1
  1858  0024F0  0100               	movlb	0	; () banked
  1859  0024F2  6FED               	movwf	gpio_pin_direction_intialize@ret& (0+255),b
  1860  0024F4                     
  1861                           ; BSR set to: 0
  1862                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1863  0024F4  51EB               	movf	gpio_pin_direction_intialize@_pin_config& (0+255),w,b
  1864  0024F6  11EC               	iorwf	(gpio_pin_direction_intialize@_pin_config+1)& (0+255),w,b
  1865  0024F8  B4D8               	btfsc	status,2,c
  1866  0024FA  EF81  F012         	goto	u7901
  1867  0024FE  EF83  F012         	goto	u7900
  1868  002502                     u7901:
  1869  002502  EF95  F012         	goto	l8806
  1870  002506                     u7900:
  1871  002506                     
  1872                           ; BSR set to: 0
  1873  002506  C0EB  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  1874  00250A  C0EC  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  1875  00250E  30DF               	rrcf	223,w,c
  1876  002510  32E8               	rrcf	wreg,f,c
  1877  002512  32E8               	rrcf	wreg,f,c
  1878  002514  0B07               	andlw	7
  1879  002516  0101               	movlb	1	; () banked
  1880  002518  6F52               	movwf	??_gpio_pin_direction_intialize& (0+255),b
  1881  00251A  0E07               	movlw	7
  1882  00251C  6552               	cpfsgt	??_gpio_pin_direction_intialize& (0+255),b
  1883  00251E  EF93  F012         	goto	u7911
  1884  002522  EF95  F012         	goto	u7910
  1885  002526                     u7911:
  1886  002526  EFFB  F012         	goto	l8814
  1887  00252A                     u7910:
  1888  00252A                     l8806:
  1889                           
  1890                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:         ret = (Std_ReturnType)0x00;
  1891  00252A  0E00               	movlw	0
  1892  00252C  0100               	movlb	0	; () banked
  1893  00252E  6FED               	movwf	gpio_pin_direction_intialize@ret& (0+255),b
  1894                           
  1895                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:     }
  1896  002530  EF1E  F013         	goto	l8816
  1897  002534                     l8808:
  1898                           
  1899                           ; BSR set to: 1
  1900                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  1901  002534  C0EB  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  1902  002538  C0EC  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  1903  00253C  30DF               	rrcf	223,w,c
  1904  00253E  32E8               	rrcf	wreg,f,c
  1905  002540  32E8               	rrcf	wreg,f,c
  1906  002542  0B07               	andlw	7
  1907  002544  6F52               	movwf	??_gpio_pin_direction_intialize& (0+255),b
  1908  002546  0E01               	movlw	1
  1909  002548  6F53               	movwf	(??_gpio_pin_direction_intialize+1)& (0+255),b
  1910  00254A  2B52               	incf	??_gpio_pin_direction_intialize& (0+255),f,b
  1911  00254C  EFAA  F012         	goto	u7924
  1912  002550                     u7925:
  1913  002550  90D8               	bcf	status,0,c
  1914  002552  3753               	rlcf	(??_gpio_pin_direction_intialize+1)& (0+255),f,b
  1915  002554                     u7924:
  1916  002554  2F52               	decfsz	??_gpio_pin_direction_intialize& (0+255),f,b
  1917  002556  EFA8  F012         	goto	u7925
  1918  00255A  0101               	movlb	1	; () banked
  1919  00255C  5153               	movf	(??_gpio_pin_direction_intialize+1)& (0+255),w,b
  1920  00255E  0AFF               	xorlw	255
  1921  002560  6F54               	movwf	(??_gpio_pin_direction_intialize+2)& (0+255),b
  1922  002562  C0EB  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  1923  002566  C0EC  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  1924  00256A  50DF               	movf	223,w,c
  1925  00256C  0B07               	andlw	7
  1926  00256E  6F55               	movwf	(??_gpio_pin_direction_intialize+3)& (0+255),b
  1927  002570  5155               	movf	(??_gpio_pin_direction_intialize+3)& (0+255),w,b
  1928  002572  0D02               	mullw	2
  1929  002574  0E41               	movlw	low _tris_registers
  1930  002576  24F3               	addwf	243,w,c
  1931  002578  6ED9               	movwf	fsr2l,c
  1932  00257A  0E01               	movlw	high _tris_registers
  1933  00257C  20F4               	addwfc	prodh,w,c
  1934  00257E  6EDA               	movwf	fsr2h,c
  1935  002580  CFDE F156          	movff	postinc2,??_gpio_pin_direction_intialize+4
  1936  002584  CFDD F157          	movff	postdec2,??_gpio_pin_direction_intialize+5
  1937  002588  C156  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  1938  00258C  C157  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  1939  002590  5154               	movf	(??_gpio_pin_direction_intialize+2)& (0+255),w,b
  1940  002592  16DF               	andwf	indf2,f,c
  1941                           
  1942                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 break;
  1943  002594  EF1E  F013         	goto	l8816
  1944  002598                     l8810:
  1945                           
  1946                           ; BSR set to: 1
  1947                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  1948  002598  C0EB  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  1949  00259C  C0EC  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  1950  0025A0  30DF               	rrcf	223,w,c
  1951  0025A2  32E8               	rrcf	wreg,f,c
  1952  0025A4  32E8               	rrcf	wreg,f,c
  1953  0025A6  0B07               	andlw	7
  1954  0025A8  6F52               	movwf	??_gpio_pin_direction_intialize& (0+255),b
  1955  0025AA  0E01               	movlw	1
  1956  0025AC  6F53               	movwf	(??_gpio_pin_direction_intialize+1)& (0+255),b
  1957  0025AE  2B52               	incf	??_gpio_pin_direction_intialize& (0+255),f,b
  1958  0025B0  EFDC  F012         	goto	u7934
  1959  0025B4                     u7935:
  1960  0025B4  90D8               	bcf	status,0,c
  1961  0025B6  3753               	rlcf	(??_gpio_pin_direction_intialize+1)& (0+255),f,b
  1962  0025B8                     u7934:
  1963  0025B8  2F52               	decfsz	??_gpio_pin_direction_intialize& (0+255),f,b
  1964  0025BA  EFDA  F012         	goto	u7935
  1965  0025BE  C0EB  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  1966  0025C2  C0EC  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  1967  0025C6  50DF               	movf	223,w,c
  1968  0025C8  0B07               	andlw	7
  1969  0025CA  0101               	movlb	1	; () banked
  1970  0025CC  6F54               	movwf	(??_gpio_pin_direction_intialize+2)& (0+255),b
  1971  0025CE  5154               	movf	(??_gpio_pin_direction_intialize+2)& (0+255),w,b
  1972  0025D0  0D02               	mullw	2
  1973  0025D2  0E41               	movlw	low _tris_registers
  1974  0025D4  24F3               	addwf	243,w,c
  1975  0025D6  6ED9               	movwf	fsr2l,c
  1976  0025D8  0E01               	movlw	high _tris_registers
  1977  0025DA  20F4               	addwfc	prodh,w,c
  1978  0025DC  6EDA               	movwf	fsr2h,c
  1979  0025DE  CFDE F155          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1980  0025E2  CFDD F156          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1981  0025E6  C155  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1982  0025EA  C156  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1983  0025EE  5153               	movf	(??_gpio_pin_direction_intialize+1)& (0+255),w,b
  1984  0025F0  12DF               	iorwf	indf2,f,c
  1985                           
  1986                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:                 break;
  1987  0025F2  EF1E  F013         	goto	l8816
  1988  0025F6                     l8814:
  1989                           
  1990                           ; BSR set to: 1
  1991  0025F6  C0EB  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  1992  0025FA  C0EC  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  1993  0025FE  0100               	movlb	0	; () banked
  1994  002600  BCDF               	btfsc	indf2,6,c
  1995  002602  EF05  F013         	goto	u7941
  1996  002606  EF08  F013         	goto	u7940
  1997  00260A                     u7941:
  1998  00260A  0E01               	movlw	1
  1999  00260C  EF09  F013         	goto	u7950
  2000  002610                     u7940:
  2001  002610  0E00               	movlw	0
  2002  002612                     u7950:
  2003  002612  0101               	movlb	1	; () banked
  2004  002614  6F52               	movwf	??_gpio_pin_direction_intialize& (0+255),b
  2005  002616  6B53               	clrf	(??_gpio_pin_direction_intialize+1)& (0+255),b
  2006                           
  2007                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2008                           ; Switch size 1, requested type "simple"
  2009                           ; Number of cases is 1, Range of values is 0 to 0
  2010                           ; switch strategies available:
  2011                           ; Name         Instructions Cycles
  2012                           ; simple_byte            4     3 (average)
  2013                           ;	Chosen strategy is simple_byte
  2014  002618  5153               	movf	(??_gpio_pin_direction_intialize+1)& (0+255),w,b
  2015  00261A  0A00               	xorlw	0	; case 0
  2016  00261C  B4D8               	btfsc	status,2,c
  2017  00261E  EF13  F013         	goto	l10026
  2018  002622  EF95  F012         	goto	l8806
  2019  002626                     l10026:
  2020                           
  2021                           ; BSR set to: 1
  2022                           ; Switch size 1, requested type "simple"
  2023                           ; Number of cases is 2, Range of values is 0 to 1
  2024                           ; switch strategies available:
  2025                           ; Name         Instructions Cycles
  2026                           ; simple_byte            7     4 (average)
  2027                           ;	Chosen strategy is simple_byte
  2028  002626  5152               	movf	??_gpio_pin_direction_intialize& (0+255),w,b
  2029  002628  0A00               	xorlw	0	; case 0
  2030  00262A  B4D8               	btfsc	status,2,c
  2031  00262C  EF9A  F012         	goto	l8808
  2032  002630  0A01               	xorlw	1	; case 1
  2033  002632  B4D8               	btfsc	status,2,c
  2034  002634  EFCC  F012         	goto	l8810
  2035  002638  EF95  F012         	goto	l8806
  2036  00263C                     l8816:
  2037                           
  2038                           ;MCAL_Layer/GPIO/hal_gpio.c: 41:     return ret;
  2039  00263C  0100               	movlb	0	; () banked
  2040  00263E  51ED               	movf	gpio_pin_direction_intialize@ret& (0+255),w,b
  2041  002640                     
  2042                           ; BSR set to: 0
  2043  002640  0012               	return		;funcret
  2044  002642                     __end_of_gpio_pin_direction_intialize:
  2045                           	callstack 0
  2046                           
  2047 ;; *************** function _ADC_Init *****************
  2048 ;; Defined at:
  2049 ;;		line 29 in file "MCAL_Layer/ADC/hal_adc.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;  _adc            2   17[BANK0 ] PTR const struct .
  2052 ;;		 -> adc_1(7), 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  ret             1    0[BANK1 ] unsigned char 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      unsigned char 
  2057 ;; Registers used:
  2058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2064 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;      Totals:         0       3       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;Total ram usage:        4 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; Hardware stack levels required when called: 13
  2071 ;; This function calls:
  2072 ;;		_adc_input_channel_port_configure
  2073 ;;		_configure_voltage_reference
  2074 ;;		_select_result_format
  2075 ;; This function is called by:
  2076 ;;		_application_intialize
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           	psect	text6
  2081  002C88                     __ptext6:
  2082                           	callstack 0
  2083  002C88                     _ADC_Init:
  2084                           	callstack 16
  2085  002C88                     
  2086                           ;MCAL_Layer/ADC/hal_adc.c: 31:     if(((void*)0) == _adc){
  2087  002C88  0100               	movlb	0	; () banked
  2088  002C8A  51EE               	movf	ADC_Init@_adc& (0+255),w,b
  2089  002C8C  11EF               	iorwf	(ADC_Init@_adc+1)& (0+255),w,b
  2090  002C8E  A4D8               	btfss	status,2,c
  2091  002C90  EF4C  F016         	goto	u8141
  2092  002C94  EF4E  F016         	goto	u8140
  2093  002C98                     u8141:
  2094  002C98  EF53  F016         	goto	l380
  2095  002C9C                     u8140:
  2096  002C9C                     
  2097                           ; BSR set to: 0
  2098                           ;MCAL_Layer/ADC/hal_adc.c: 32:         ret = (Std_ReturnType)0x00;
  2099  002C9C  0E00               	movlw	0
  2100  002C9E  0101               	movlb	1	; () banked
  2101  002CA0  6F52               	movwf	ADC_Init@ret& (0+255),b
  2102                           
  2103                           ;MCAL_Layer/ADC/hal_adc.c: 33:     }
  2104  002CA2  EFA5  F016         	goto	l9072
  2105  002CA6                     l380:
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;MCAL_Layer/ADC/hal_adc.c: 36:         (ADCON0bits.ADON = 0);
  2109  002CA6  90C2               	bcf	194,0,c	;volatile
  2110  002CA8                     
  2111                           ; BSR set to: 0
  2112                           ;MCAL_Layer/ADC/hal_adc.c: 38:         ADCON2bits.ACQT = _adc->acquisition_time;
  2113  002CA8  EE20 F003          	lfsr	2,3
  2114  002CAC  51EE               	movf	ADC_Init@_adc& (0+255),w,b
  2115  002CAE  26D9               	addwf	fsr2l,f,c
  2116  002CB0  51EF               	movf	(ADC_Init@_adc+1)& (0+255),w,b
  2117  002CB2  22DA               	addwfc	fsr2h,f,c
  2118  002CB4  50DF               	movf	indf2,w,c
  2119  002CB6  6FF0               	movwf	??_ADC_Init& (0+255),b
  2120  002CB8  47F0               	rlncf	??_ADC_Init& (0+255),f,b
  2121  002CBA  47F0               	rlncf	??_ADC_Init& (0+255),f,b
  2122  002CBC  47F0               	rlncf	??_ADC_Init& (0+255),f,b
  2123  002CBE  50C0               	movf	192,w,c	;volatile
  2124  002CC0  19F0               	xorwf	??_ADC_Init& (0+255),w,b
  2125  002CC2  0BC7               	andlw	-57
  2126  002CC4  19F0               	xorwf	??_ADC_Init& (0+255),w,b
  2127  002CC6  6EC0               	movwf	192,c	;volatile
  2128                           
  2129                           ;MCAL_Layer/ADC/hal_adc.c: 40:         ADCON2bits.ADCS = _adc->conversion_clock;
  2130  002CC8  EE20 F004          	lfsr	2,4
  2131  002CCC  51EE               	movf	ADC_Init@_adc& (0+255),w,b
  2132  002CCE  26D9               	addwf	fsr2l,f,c
  2133  002CD0  51EF               	movf	(ADC_Init@_adc+1)& (0+255),w,b
  2134  002CD2  22DA               	addwfc	fsr2h,f,c
  2135  002CD4  50DF               	movf	indf2,w,c
  2136  002CD6  6FF0               	movwf	??_ADC_Init& (0+255),b
  2137  002CD8  50C0               	movf	192,w,c	;volatile
  2138  002CDA  19F0               	xorwf	??_ADC_Init& (0+255),w,b
  2139  002CDC  0BF8               	andlw	-8
  2140  002CDE  19F0               	xorwf	??_ADC_Init& (0+255),w,b
  2141  002CE0  6EC0               	movwf	192,c	;volatile
  2142                           
  2143                           ;MCAL_Layer/ADC/hal_adc.c: 42:         ADCON0bits.CHS = _adc->adc_channel;
  2144  002CE2  EE20 F005          	lfsr	2,5
  2145  002CE6  51EE               	movf	ADC_Init@_adc& (0+255),w,b
  2146  002CE8  26D9               	addwf	fsr2l,f,c
  2147  002CEA  51EF               	movf	(ADC_Init@_adc+1)& (0+255),w,b
  2148  002CEC  22DA               	addwfc	fsr2h,f,c
  2149  002CEE  50DF               	movf	indf2,w,c
  2150  002CF0  6FF0               	movwf	??_ADC_Init& (0+255),b
  2151  002CF2  47F0               	rlncf	??_ADC_Init& (0+255),f,b
  2152  002CF4  47F0               	rlncf	??_ADC_Init& (0+255),f,b
  2153  002CF6  50C2               	movf	194,w,c	;volatile
  2154  002CF8  19F0               	xorwf	??_ADC_Init& (0+255),w,b
  2155  002CFA  0BC3               	andlw	-61
  2156  002CFC  19F0               	xorwf	??_ADC_Init& (0+255),w,b
  2157  002CFE  6EC2               	movwf	194,c	;volatile
  2158  002D00                     
  2159                           ; BSR set to: 0
  2160                           ;MCAL_Layer/ADC/hal_adc.c: 43:         adc_input_channel_port_configure(_adc->adc_channe
      +                          l);
  2161  002D00  EE20 F005          	lfsr	2,5
  2162  002D04  51EE               	movf	ADC_Init@_adc& (0+255),w,b
  2163  002D06  26D9               	addwf	fsr2l,f,c
  2164  002D08  51EF               	movf	(ADC_Init@_adc+1)& (0+255),w,b
  2165  002D0A  22DA               	addwfc	fsr2h,f,c
  2166  002D0C  50DF               	movf	indf2,w,c
  2167  002D0E  EC71  F015         	call	_adc_input_channel_port_configure
  2168  002D12                     
  2169                           ;MCAL_Layer/ADC/hal_adc.c: 46:         (INTCONbits.GIE = 1);
  2170  002D12  8EF2               	bsf	242,7,c	;volatile
  2171  002D14                     
  2172                           ;MCAL_Layer/ADC/hal_adc.c: 47:         (INTCONbits.PEIE = 1);
  2173  002D14  8CF2               	bsf	242,6,c	;volatile
  2174  002D16                     
  2175                           ;MCAL_Layer/ADC/hal_adc.c: 48:         (PIE1bits.ADIE = 1);
  2176  002D16  8C9D               	bsf	157,6,c	;volatile
  2177  002D18                     
  2178                           ;MCAL_Layer/ADC/hal_adc.c: 49:         (PIR1bits.ADIF = 0);
  2179  002D18  9C9E               	bcf	158,6,c	;volatile
  2180  002D1A                     
  2181                           ;MCAL_Layer/ADC/hal_adc.c: 61:         ADC_InterruptHandler = _adc->ADC_InterruptHandler
      +                          ;
  2182  002D1A  C0EE  FFD9         	movff	ADC_Init@_adc,fsr2l
  2183  002D1E  C0EF  FFDA         	movff	ADC_Init@_adc+1,fsr2h
  2184  002D22  CFDE F0BE          	movff	postinc2,_ADC_InterruptHandler
  2185  002D26  CFDD F0BF          	movff	postdec2,_ADC_InterruptHandler+1
  2186  002D2A                     
  2187                           ;MCAL_Layer/ADC/hal_adc.c: 64:         select_result_format(_adc);
  2188  002D2A  C0EE  F0EB         	movff	ADC_Init@_adc,select_result_format@_adc
  2189  002D2E  C0EF  F0EC         	movff	ADC_Init@_adc+1,select_result_format@_adc+1
  2190  002D32  ECBF  F01B         	call	_select_result_format	;wreg free
  2191  002D36                     
  2192                           ;MCAL_Layer/ADC/hal_adc.c: 66:         configure_voltage_reference(_adc);
  2193  002D36  C0EE  F0EB         	movff	ADC_Init@_adc,configure_voltage_reference@_adc
  2194  002D3A  C0EF  F0EC         	movff	ADC_Init@_adc+1,configure_voltage_reference@_adc+1
  2195  002D3E  EC50  F01B         	call	_configure_voltage_reference	;wreg free
  2196  002D42                     
  2197                           ;MCAL_Layer/ADC/hal_adc.c: 68:         (ADCON0bits.ADON = 1);
  2198  002D42  80C2               	bsf	194,0,c	;volatile
  2199  002D44                     
  2200                           ;MCAL_Layer/ADC/hal_adc.c: 69:         ret = (Std_ReturnType)0x01;
  2201  002D44  0E01               	movlw	1
  2202  002D46  0101               	movlb	1	; () banked
  2203  002D48  6F52               	movwf	ADC_Init@ret& (0+255),b
  2204  002D4A                     l9072:
  2205                           
  2206                           ; BSR set to: 1
  2207                           ;MCAL_Layer/ADC/hal_adc.c: 71:     return ret;
  2208  002D4A  5152               	movf	ADC_Init@ret& (0+255),w,b
  2209  002D4C                     
  2210                           ; BSR set to: 1
  2211  002D4C  0012               	return		;funcret
  2212  002D4E                     __end_of_ADC_Init:
  2213                           	callstack 0
  2214                           
  2215 ;; *************** function _select_result_format *****************
  2216 ;; Defined at:
  2217 ;;		line 272 in file "MCAL_Layer/ADC/hal_adc.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;  _adc            2   14[BANK0 ] PTR const struct .
  2220 ;;		 -> adc_1(7), 
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2232 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;Total ram usage:        2 bytes
  2237 ;; Hardware stack levels used: 1
  2238 ;; Hardware stack levels required when called: 12
  2239 ;; This function calls:
  2240 ;;		Nothing
  2241 ;; This function is called by:
  2242 ;;		_ADC_Init
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text7
  2247  00377E                     __ptext7:
  2248                           	callstack 0
  2249  00377E                     _select_result_format:
  2250                           	callstack 16
  2251  00377E                     
  2252                           ;MCAL_Layer/ADC/hal_adc.c: 273:     if(0x01U == _adc->result_format){
  2253  00377E  0100               	movlb	0	; () banked
  2254  003780  EE20 F006          	lfsr	2,6
  2255  003784  51EB               	movf	select_result_format@_adc& (0+255),w,b
  2256  003786  26D9               	addwf	fsr2l,f,c
  2257  003788  51EC               	movf	(select_result_format@_adc+1)& (0+255),w,b
  2258  00378A  22DA               	addwfc	fsr2h,f,c
  2259  00378C  A2DF               	btfss	indf2,1,c
  2260  00378E  EFCB  F01B         	goto	u8001
  2261  003792  EFCD  F01B         	goto	u8000
  2262  003796                     u8001:
  2263  003796  EFD0  F01B         	goto	l8924
  2264  00379A                     u8000:
  2265  00379A                     
  2266                           ; BSR set to: 0
  2267                           ;MCAL_Layer/ADC/hal_adc.c: 274:         (ADCON2bits.ADFM = 1);
  2268  00379A  8EC0               	bsf	192,7,c	;volatile
  2269                           
  2270                           ;MCAL_Layer/ADC/hal_adc.c: 275:     }
  2271  00379C  EFE1  F01B         	goto	l456
  2272  0037A0                     l8924:
  2273                           
  2274                           ; BSR set to: 0
  2275  0037A0  EE20 F006          	lfsr	2,6
  2276  0037A4  51EB               	movf	select_result_format@_adc& (0+255),w,b
  2277  0037A6  26D9               	addwf	fsr2l,f,c
  2278  0037A8  51EC               	movf	(select_result_format@_adc+1)& (0+255),w,b
  2279  0037AA  22DA               	addwfc	fsr2h,f,c
  2280  0037AC  B2DF               	btfsc	indf2,1,c
  2281  0037AE  EFDB  F01B         	goto	u8011
  2282  0037B2  EFDD  F01B         	goto	u8010
  2283  0037B6                     u8011:
  2284  0037B6  EFE0  F01B         	goto	l454
  2285  0037BA                     u8010:
  2286  0037BA                     
  2287                           ; BSR set to: 0
  2288                           ;MCAL_Layer/ADC/hal_adc.c: 277:         (ADCON2bits.ADFM = 0);
  2289  0037BA  9EC0               	bcf	192,7,c	;volatile
  2290                           
  2291                           ;MCAL_Layer/ADC/hal_adc.c: 278:     }
  2292  0037BC  EFE1  F01B         	goto	l456
  2293  0037C0                     l454:
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;MCAL_Layer/ADC/hal_adc.c: 280:         (ADCON2bits.ADFM = 1);
  2297  0037C0  8EC0               	bsf	192,7,c	;volatile
  2298  0037C2                     l456:
  2299                           
  2300                           ; BSR set to: 0
  2301  0037C2  0012               	return		;funcret
  2302  0037C4                     __end_of_select_result_format:
  2303                           	callstack 0
  2304                           
  2305 ;; *************** function _configure_voltage_reference *****************
  2306 ;; Defined at:
  2307 ;;		line 284 in file "MCAL_Layer/ADC/hal_adc.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  _adc            2   14[BANK0 ] PTR const struct .
  2310 ;;		 -> adc_1(7), 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;		None
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      void 
  2315 ;; Registers used:
  2316 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2322 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2325 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2326 ;;Total ram usage:        2 bytes
  2327 ;; Hardware stack levels used: 1
  2328 ;; Hardware stack levels required when called: 12
  2329 ;; This function calls:
  2330 ;;		Nothing
  2331 ;; This function is called by:
  2332 ;;		_ADC_Init
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text8
  2337  0036A0                     __ptext8:
  2338                           	callstack 0
  2339  0036A0                     _configure_voltage_reference:
  2340                           	callstack 16
  2341  0036A0                     
  2342                           ;MCAL_Layer/ADC/hal_adc.c: 285:     if(0x01U == _adc->voltage_reference){
  2343  0036A0  0100               	movlb	0	; () banked
  2344  0036A2  EE20 F006          	lfsr	2,6
  2345  0036A6  51EB               	movf	configure_voltage_reference@_adc& (0+255),w,b
  2346  0036A8  26D9               	addwf	fsr2l,f,c
  2347  0036AA  51EC               	movf	(configure_voltage_reference@_adc+1)& (0+255),w,b
  2348  0036AC  22DA               	addwfc	fsr2h,f,c
  2349  0036AE  A0DF               	btfss	indf2,0,c
  2350  0036B0  EF5C  F01B         	goto	u8021
  2351  0036B4  EF5E  F01B         	goto	u8020
  2352  0036B8                     u8021:
  2353  0036B8  EF62  F01B         	goto	l8930
  2354  0036BC                     u8020:
  2355  0036BC                     
  2356                           ; BSR set to: 0
  2357  0036BC  8AC1               	bsf	193,5,c	;volatile
  2358  0036BE  88C1               	bsf	193,4,c	;volatile
  2359  0036C0  EF75  F01B         	goto	l469
  2360  0036C4                     l8930:
  2361                           
  2362                           ; BSR set to: 0
  2363  0036C4  EE20 F006          	lfsr	2,6
  2364  0036C8  51EB               	movf	configure_voltage_reference@_adc& (0+255),w,b
  2365  0036CA  26D9               	addwf	fsr2l,f,c
  2366  0036CC  51EC               	movf	(configure_voltage_reference@_adc+1)& (0+255),w,b
  2367  0036CE  22DA               	addwfc	fsr2h,f,c
  2368  0036D0  B0DF               	btfsc	indf2,0,c
  2369  0036D2  EF6D  F01B         	goto	u8031
  2370  0036D6  EF6F  F01B         	goto	u8030
  2371  0036DA                     u8031:
  2372  0036DA  EF73  F01B         	goto	l467
  2373  0036DE                     u8030:
  2374  0036DE                     
  2375                           ; BSR set to: 0
  2376  0036DE  9AC1               	bcf	193,5,c	;volatile
  2377  0036E0  98C1               	bcf	193,4,c	;volatile
  2378  0036E2  EF75  F01B         	goto	l469
  2379  0036E6                     l467:
  2380                           
  2381                           ; BSR set to: 0
  2382  0036E6  9AC1               	bcf	193,5,c	;volatile
  2383  0036E8  98C1               	bcf	193,4,c	;volatile
  2384  0036EA                     l469:
  2385                           
  2386                           ; BSR set to: 0
  2387  0036EA  0012               	return		;funcret
  2388  0036EC                     __end_of_configure_voltage_reference:
  2389                           	callstack 0
  2390                           
  2391 ;; *************** function _adc_input_channel_port_configure *****************
  2392 ;; Defined at:
  2393 ;;		line 253 in file "MCAL_Layer/ADC/hal_adc.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  channel         1    wreg     enum E2997
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;  channel         1   16[BANK0 ] enum E2997
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      void 
  2400 ;; Registers used:
  2401 ;;		wreg, status,2, status,0
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2410 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2411 ;;Total ram usage:        3 bytes
  2412 ;; Hardware stack levels used: 1
  2413 ;; Hardware stack levels required when called: 12
  2414 ;; This function calls:
  2415 ;;		Nothing
  2416 ;; This function is called by:
  2417 ;;		_ADC_Init
  2418 ;;		_ADC_SelectChannel
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text9
  2423  002AE2                     __ptext9:
  2424                           	callstack 0
  2425  002AE2                     _adc_input_channel_port_configure:
  2426                           	callstack 16
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;incstack = 0
  2430                           ;adc_input_channel_port_configure@channel stored from wreg
  2431  002AE2  0100               	movlb	0	; () banked
  2432  002AE4  6FED               	movwf	adc_input_channel_port_configure@channel& (0+255),b
  2433  002AE6                     
  2434                           ;MCAL_Layer/ADC/hal_adc.c: 254:     switch(channel){
  2435  002AE6  EF9C  F015         	goto	l8912
  2436  002AEA                     l8886:
  2437                           
  2438                           ; BSR set to: 0
  2439  002AEA  8092               	bsf	146,0,c	;volatile
  2440  002AEC  EFDE  F015         	goto	l449
  2441  002AF0                     l8888:
  2442                           
  2443                           ; BSR set to: 0
  2444  002AF0  8292               	bsf	146,1,c	;volatile
  2445  002AF2  EFDE  F015         	goto	l449
  2446  002AF6                     l8890:
  2447                           
  2448                           ; BSR set to: 0
  2449  002AF6  8492               	bsf	146,2,c	;volatile
  2450  002AF8  EFDE  F015         	goto	l449
  2451  002AFC                     l8892:
  2452                           
  2453                           ; BSR set to: 0
  2454  002AFC  8692               	bsf	146,3,c	;volatile
  2455  002AFE  EFDE  F015         	goto	l449
  2456  002B02                     l8894:
  2457                           
  2458                           ; BSR set to: 0
  2459  002B02  8A92               	bsf	146,5,c	;volatile
  2460  002B04  EFDE  F015         	goto	l449
  2461  002B08                     l8896:
  2462                           
  2463                           ; BSR set to: 0
  2464  002B08  8096               	bsf	150,0,c	;volatile
  2465  002B0A  EFDE  F015         	goto	l449
  2466  002B0E                     l8898:
  2467                           
  2468                           ; BSR set to: 0
  2469  002B0E  8296               	bsf	150,1,c	;volatile
  2470  002B10  EFDE  F015         	goto	l449
  2471  002B14                     l8900:
  2472                           
  2473                           ; BSR set to: 0
  2474  002B14  8496               	bsf	150,2,c	;volatile
  2475  002B16  EFDE  F015         	goto	l449
  2476  002B1A                     l8902:
  2477                           
  2478                           ; BSR set to: 0
  2479  002B1A  8493               	bsf	147,2,c	;volatile
  2480  002B1C  EFDE  F015         	goto	l449
  2481  002B20                     l8904:
  2482                           
  2483                           ; BSR set to: 0
  2484  002B20  8693               	bsf	147,3,c	;volatile
  2485  002B22  EFDE  F015         	goto	l449
  2486  002B26                     l8906:
  2487                           
  2488                           ; BSR set to: 0
  2489  002B26  8293               	bsf	147,1,c	;volatile
  2490  002B28  EFDE  F015         	goto	l449
  2491  002B2C                     l8908:
  2492                           
  2493                           ; BSR set to: 0
  2494  002B2C  8893               	bsf	147,4,c	;volatile
  2495  002B2E  EFDE  F015         	goto	l449
  2496  002B32                     l8910:
  2497                           
  2498                           ; BSR set to: 0
  2499  002B32  8093               	bsf	147,0,c	;volatile
  2500  002B34  EFDE  F015         	goto	l449
  2501  002B38                     l8912:
  2502  002B38  0100               	movlb	0	; () banked
  2503  002B3A  51ED               	movf	adc_input_channel_port_configure@channel& (0+255),w,b
  2504  002B3C  6FEB               	movwf	??_adc_input_channel_port_configure& (0+255),b
  2505  002B3E  6BEC               	clrf	(??_adc_input_channel_port_configure+1)& (0+255),b
  2506                           
  2507                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2508                           ; Switch size 1, requested type "simple"
  2509                           ; Number of cases is 1, Range of values is 0 to 0
  2510                           ; switch strategies available:
  2511                           ; Name         Instructions Cycles
  2512                           ; simple_byte            4     3 (average)
  2513                           ;	Chosen strategy is simple_byte
  2514  002B40  51EC               	movf	(??_adc_input_channel_port_configure+1)& (0+255),w,b
  2515  002B42  0A00               	xorlw	0	; case 0
  2516  002B44  B4D8               	btfsc	status,2,c
  2517  002B46  EFA7  F015         	goto	l10028
  2518  002B4A  EFDE  F015         	goto	l449
  2519  002B4E                     l10028:
  2520                           
  2521                           ; BSR set to: 0
  2522                           ; Switch size 1, requested type "simple"
  2523                           ; Number of cases is 13, Range of values is 0 to 12
  2524                           ; switch strategies available:
  2525                           ; Name         Instructions Cycles
  2526                           ; simple_byte           40    21 (average)
  2527                           ;	Chosen strategy is simple_byte
  2528  002B4E  51EB               	movf	??_adc_input_channel_port_configure& (0+255),w,b
  2529  002B50  0A00               	xorlw	0	; case 0
  2530  002B52  B4D8               	btfsc	status,2,c
  2531  002B54  EF75  F015         	goto	l8886
  2532  002B58  0A01               	xorlw	1	; case 1
  2533  002B5A  B4D8               	btfsc	status,2,c
  2534  002B5C  EF78  F015         	goto	l8888
  2535  002B60  0A03               	xorlw	3	; case 2
  2536  002B62  B4D8               	btfsc	status,2,c
  2537  002B64  EF7B  F015         	goto	l8890
  2538  002B68  0A01               	xorlw	1	; case 3
  2539  002B6A  B4D8               	btfsc	status,2,c
  2540  002B6C  EF7E  F015         	goto	l8892
  2541  002B70  0A07               	xorlw	7	; case 4
  2542  002B72  B4D8               	btfsc	status,2,c
  2543  002B74  EF81  F015         	goto	l8894
  2544  002B78  0A01               	xorlw	1	; case 5
  2545  002B7A  B4D8               	btfsc	status,2,c
  2546  002B7C  EF84  F015         	goto	l8896
  2547  002B80  0A03               	xorlw	3	; case 6
  2548  002B82  B4D8               	btfsc	status,2,c
  2549  002B84  EF87  F015         	goto	l8898
  2550  002B88  0A01               	xorlw	1	; case 7
  2551  002B8A  B4D8               	btfsc	status,2,c
  2552  002B8C  EF8A  F015         	goto	l8900
  2553  002B90  0A0F               	xorlw	15	; case 8
  2554  002B92  B4D8               	btfsc	status,2,c
  2555  002B94  EF8D  F015         	goto	l8902
  2556  002B98  0A01               	xorlw	1	; case 9
  2557  002B9A  B4D8               	btfsc	status,2,c
  2558  002B9C  EF90  F015         	goto	l8904
  2559  002BA0  0A03               	xorlw	3	; case 10
  2560  002BA2  B4D8               	btfsc	status,2,c
  2561  002BA4  EF93  F015         	goto	l8906
  2562  002BA8  0A01               	xorlw	1	; case 11
  2563  002BAA  B4D8               	btfsc	status,2,c
  2564  002BAC  EF96  F015         	goto	l8908
  2565  002BB0  0A07               	xorlw	7	; case 12
  2566  002BB2  B4D8               	btfsc	status,2,c
  2567  002BB4  EF99  F015         	goto	l8910
  2568  002BB8  EFDE  F015         	goto	l449
  2569  002BBC                     l449:
  2570                           
  2571                           ; BSR set to: 0
  2572  002BBC  0012               	return		;funcret
  2573  002BBE                     __end_of_adc_input_channel_port_configure:
  2574                           	callstack 0
  2575                           
  2576 ;; *************** function _WelcomingMessage *****************
  2577 ;; Defined at:
  2578 ;;		line 107 in file "application.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;		None
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;		None
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      void 
  2585 ;; Registers used:
  2586 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2594 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2595 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2596 ;;Total ram usage:        2 bytes
  2597 ;; Hardware stack levels used: 1
  2598 ;; Hardware stack levels required when called: 17
  2599 ;; This function calls:
  2600 ;;		_lcd_4bit_send_command
  2601 ;;		_lcd_4bit_send_string_pos
  2602 ;; This function is called by:
  2603 ;;		_main
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text10
  2608  0035FE                     __ptext10:
  2609                           	callstack 0
  2610  0035FE                     _WelcomingMessage:
  2611                           	callstack 13
  2612  0035FE                     
  2613                           ;application.c: 109:     ret = lcd_4bit_send_string_pos(&lcd_1, 2, 7, "Welcome.");
  2614  0035FE  0ED3               	movlw	low _lcd_1
  2615  003600  0101               	movlb	1	; () banked
  2616  003602  6F66               	movwf	lcd_4bit_send_string_pos@lcd& (0+255),b
  2617  003604  0E00               	movlw	high _lcd_1
  2618  003606  6F67               	movwf	(lcd_4bit_send_string_pos@lcd+1)& (0+255),b
  2619  003608  0E02               	movlw	2
  2620  00360A  6F68               	movwf	lcd_4bit_send_string_pos@row& (0+255),b
  2621  00360C  0E07               	movlw	7
  2622  00360E  6F69               	movwf	lcd_4bit_send_string_pos@column& (0+255),b
  2623  003610  0E23               	movlw	low STR_5
  2624  003612  6F6A               	movwf	lcd_4bit_send_string_pos@str& (0+255),b
  2625  003614  0E10               	movlw	high STR_5
  2626  003616  6F6B               	movwf	(lcd_4bit_send_string_pos@str+1)& (0+255),b
  2627  003618  ECC5  F017         	call	_lcd_4bit_send_string_pos	;wreg free
  2628  00361C  0100               	movlb	0	; () banked
  2629  00361E  6FF1               	movwf	_ret& (0+255),b
  2630  003620                     
  2631                           ; BSR set to: 0
  2632                           ;application.c: 110:     _delay((unsigned long)((1000)*(4000000UL/4000.0)));
  2633  003620  0E06               	movlw	6
  2634  003622  0101               	movlb	1	; () banked
  2635  003624  6F6E               	movwf	(??_WelcomingMessage+1)& (0+255),b
  2636  003626  0E13               	movlw	19
  2637  003628  6F6D               	movwf	??_WelcomingMessage& (0+255),b
  2638  00362A  0EAD               	movlw	173
  2639  00362C                     u9487:
  2640  00362C  2EE8               	decfsz	wreg,f,c
  2641  00362E  D7FE               	bra	u9487
  2642  003630  2F6D               	decfsz	??_WelcomingMessage& (0+255),f,b
  2643  003632  D7FC               	bra	u9487
  2644  003634  2F6E               	decfsz	(??_WelcomingMessage+1)& (0+255),f,b
  2645  003636  D7FA               	bra	u9487
  2646  003638  D000               	nop2	
  2647  00363A                     
  2648                           ;application.c: 111:     ret = lcd_4bit_send_command(&lcd_1, 0X01);
  2649  00363A  0ED3               	movlw	low _lcd_1
  2650  00363C  0101               	movlb	1	; () banked
  2651  00363E  6F5B               	movwf	lcd_4bit_send_command@lcd& (0+255),b
  2652  003640  0E00               	movlw	high _lcd_1
  2653  003642  6F5C               	movwf	(lcd_4bit_send_command@lcd+1)& (0+255),b
  2654  003644  0E01               	movlw	1
  2655  003646  6F5D               	movwf	lcd_4bit_send_command@command& (0+255),b
  2656  003648  EC0B  F019         	call	_lcd_4bit_send_command	;wreg free
  2657  00364C  0100               	movlb	0	; () banked
  2658  00364E  6FF1               	movwf	_ret& (0+255),b
  2659  003650                     
  2660                           ; BSR set to: 0
  2661  003650  0012               	return		;funcret
  2662  003652                     __end_of_WelcomingMessage:
  2663                           	callstack 0
  2664                           
  2665 ;; *************** function _lcd_4bit_send_string_pos *****************
  2666 ;; Defined at:
  2667 ;;		line 163 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  lcd             2   20[BANK1 ] PTR const struct .
  2670 ;;		 -> lcd_1(6), 
  2671 ;;  row             1   22[BANK1 ] unsigned char 
  2672 ;;  column          1   23[BANK1 ] unsigned char 
  2673 ;;  str             2   24[BANK1 ] PTR unsigned char 
  2674 ;;		 -> adcArray(7), STR_5(9), STR_4(18), 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;  ret             1   26[BANK1 ] unsigned char 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      unsigned char 
  2679 ;; Registers used:
  2680 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2686 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2689 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2690 ;;Total ram usage:        7 bytes
  2691 ;; Hardware stack levels used: 1
  2692 ;; Hardware stack levels required when called: 16
  2693 ;; This function calls:
  2694 ;;		_lcd_4bit_send_char_data
  2695 ;;		_lcd_4bit_set_cursor
  2696 ;; This function is called by:
  2697 ;;		_main
  2698 ;;		_WelcomingMessage
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text11
  2703  002F8A                     __ptext11:
  2704                           	callstack 0
  2705  002F8A                     _lcd_4bit_send_string_pos:
  2706                           	callstack 14
  2707  002F8A                     
  2708                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 165:     if(((void*)0) == lcd){
  2709  002F8A  0101               	movlb	1	; () banked
  2710  002F8C  5166               	movf	lcd_4bit_send_string_pos@lcd& (0+255),w,b
  2711  002F8E  1167               	iorwf	(lcd_4bit_send_string_pos@lcd+1)& (0+255),w,b
  2712  002F90  A4D8               	btfss	status,2,c
  2713  002F92  EFCD  F017         	goto	u8061
  2714  002F96  EFCF  F017         	goto	u8060
  2715  002F9A                     u8061:
  2716  002F9A  EFD3  F017         	goto	l8984
  2717  002F9E                     u8060:
  2718  002F9E                     
  2719                           ; BSR set to: 1
  2720                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 166:         ret = (Std_ReturnType)0x00;
  2721  002F9E  0E00               	movlw	0
  2722  002FA0  6F6C               	movwf	lcd_4bit_send_string_pos@ret& (0+255),b
  2723                           
  2724                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 167:     }
  2725  002FA2  EF17  F018         	goto	l8992
  2726  002FA6                     l8984:
  2727                           
  2728                           ; BSR set to: 1
  2729                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 169:         ret = lcd_4bit_set_cursor(lcd, row, colum
      +                          n);
  2730  002FA6  C166  F15F         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  2731  002FAA  C167  F160         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
  2732  002FAE  C168  F161         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  2733  002FB2  C169  F162         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@coulmn
  2734  002FB6  EC6C  F017         	call	_lcd_4bit_set_cursor	;wreg free
  2735  002FBA  0101               	movlb	1	; () banked
  2736  002FBC  6F6C               	movwf	lcd_4bit_send_string_pos@ret& (0+255),b
  2737                           
  2738                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 170:         while(*str){
  2739  002FBE  EFFE  F017         	goto	l8990
  2740  002FC2                     l8986:
  2741                           
  2742                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 171:             ret = lcd_4bit_send_char_data(lcd, *s
      +                          tr++);
  2743  002FC2  C166  F15B         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  2744  002FC6  C167  F15C         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  2745  002FCA  C16A  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  2746  002FCE  C16B  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  2747  002FD2  0E00               	movlw	low (__smallconst shr (0+16))
  2748  002FD4  6EF8               	movwf	tblptru,c
  2749  002FD6  0E0F               	movlw	(high __ramtop+-1)
  2750  002FD8  64F7               	cpfsgt	tblptrh,c
  2751  002FDA  D003               	bra	u8077
  2752  002FDC  0008               	tblrd		*
  2753  002FDE  50F5               	movf	tablat,w,c
  2754  002FE0  D005               	bra	u8070
  2755  002FE2                     u8077:
  2756  002FE2  CFF6 FFE9          	movff	tblptrl,fsr0l
  2757  002FE6  CFF7 FFEA          	movff	tblptrh,fsr0h
  2758  002FEA  50EF               	movf	indf0,w,c
  2759  002FEC                     u8070:
  2760  002FEC  0101               	movlb	1	; () banked
  2761  002FEE  6F5D               	movwf	lcd_4bit_send_char_data@data& (0+255),b
  2762  002FF0  EC4B  F019         	call	_lcd_4bit_send_char_data	;wreg free
  2763  002FF4  0101               	movlb	1	; () banked
  2764  002FF6  6F6C               	movwf	lcd_4bit_send_string_pos@ret& (0+255),b
  2765  002FF8                     
  2766                           ; BSR set to: 1
  2767  002FF8  4B6A               	infsnz	lcd_4bit_send_string_pos@str& (0+255),f,b
  2768  002FFA  2B6B               	incf	(lcd_4bit_send_string_pos@str+1)& (0+255),f,b
  2769  002FFC                     l8990:
  2770                           
  2771                           ; BSR set to: 1
  2772                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 170:         while(*str){
  2773  002FFC  C16A  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  2774  003000  C16B  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  2775  003004  0E00               	movlw	low (__smallconst shr (0+16))
  2776  003006  6EF8               	movwf	tblptru,c
  2777  003008  0E0F               	movlw	(high __ramtop+-1)
  2778  00300A  64F7               	cpfsgt	tblptrh,c
  2779  00300C  D003               	bra	u8087
  2780  00300E  0008               	tblrd		*
  2781  003010  50F5               	movf	tablat,w,c
  2782  003012  D005               	bra	u8080
  2783  003014                     u8087:
  2784  003014  CFF6 FFE9          	movff	tblptrl,fsr0l
  2785  003018  CFF7 FFEA          	movff	tblptrh,fsr0h
  2786  00301C  50EF               	movf	indf0,w,c
  2787  00301E                     u8080:
  2788  00301E  0900               	iorlw	0
  2789  003020  A4D8               	btfss	status,2,c
  2790  003022  EF15  F018         	goto	u8091
  2791  003026  EF17  F018         	goto	u8090
  2792  00302A                     u8091:
  2793  00302A  EFE1  F017         	goto	l8986
  2794  00302E                     u8090:
  2795  00302E                     l8992:
  2796                           
  2797                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 174:     return ret;
  2798  00302E  0101               	movlb	1	; () banked
  2799  003030  516C               	movf	lcd_4bit_send_string_pos@ret& (0+255),w,b
  2800  003032                     
  2801                           ; BSR set to: 1
  2802  003032  0012               	return		;funcret
  2803  003034                     __end_of_lcd_4bit_send_string_pos:
  2804                           	callstack 0
  2805                           
  2806 ;; *************** function _lcd_4bit_set_cursor *****************
  2807 ;; Defined at:
  2808 ;;		line 535 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  lcd             2   13[BANK1 ] PTR const struct .
  2811 ;;		 -> lcd_1(6), 
  2812 ;;  row             1   15[BANK1 ] unsigned char 
  2813 ;;  coulmn          1   16[BANK1 ] unsigned char 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  ret             1   19[BANK1 ] unsigned char 
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      unsigned char 
  2818 ;; Registers used:
  2819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2825 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;Total ram usage:        7 bytes
  2830 ;; Hardware stack levels used: 1
  2831 ;; Hardware stack levels required when called: 15
  2832 ;; This function calls:
  2833 ;;		_lcd_4bit_send_command
  2834 ;; This function is called by:
  2835 ;;		_lcd_4bit_send_string_pos
  2836 ;;		_lcd_4bit_send_char_data_pos
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           	psect	text12
  2841  002ED8                     __ptext12:
  2842                           	callstack 0
  2843  002ED8                     _lcd_4bit_set_cursor:
  2844                           	callstack 14
  2845  002ED8                     
  2846                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 536:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2847  002ED8  0E01               	movlw	1
  2848  002EDA  0101               	movlb	1	; () banked
  2849  002EDC  6F65               	movwf	lcd_4bit_set_cursor@ret& (0+255),b
  2850  002EDE                     
  2851                           ; BSR set to: 1
  2852                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 537:     coulmn--;
  2853  002EDE  0762               	decf	lcd_4bit_set_cursor@coulmn& (0+255),f,b
  2854                           
  2855                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 538:     switch(row){
  2856  002EE0  EFA6  F017         	goto	l8874
  2857  002EE4                     l8866:
  2858                           
  2859                           ; BSR set to: 1
  2860  002EE4  C15F  F15B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2861  002EE8  C160  F15C         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  2862  002EEC  5162               	movf	lcd_4bit_set_cursor@coulmn& (0+255),w,b
  2863  002EEE  0F80               	addlw	128
  2864  002EF0  6F5D               	movwf	lcd_4bit_send_command@command& (0+255),b
  2865  002EF2  EC0B  F019         	call	_lcd_4bit_send_command	;wreg free
  2866  002EF6  0101               	movlb	1	; () banked
  2867  002EF8  6F65               	movwf	lcd_4bit_set_cursor@ret& (0+255),b
  2868  002EFA  EFC3  F017         	goto	l8876
  2869  002EFE                     l8868:
  2870                           
  2871                           ; BSR set to: 1
  2872  002EFE  C15F  F15B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2873  002F02  C160  F15C         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  2874  002F06  5162               	movf	lcd_4bit_set_cursor@coulmn& (0+255),w,b
  2875  002F08  0FC0               	addlw	192
  2876  002F0A  6F5D               	movwf	lcd_4bit_send_command@command& (0+255),b
  2877  002F0C  EC0B  F019         	call	_lcd_4bit_send_command	;wreg free
  2878  002F10  0101               	movlb	1	; () banked
  2879  002F12  6F65               	movwf	lcd_4bit_set_cursor@ret& (0+255),b
  2880  002F14  EFC3  F017         	goto	l8876
  2881  002F18                     l8870:
  2882                           
  2883                           ; BSR set to: 1
  2884  002F18  C15F  F15B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2885  002F1C  C160  F15C         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  2886  002F20  5162               	movf	lcd_4bit_set_cursor@coulmn& (0+255),w,b
  2887  002F22  0F94               	addlw	148
  2888  002F24  6F5D               	movwf	lcd_4bit_send_command@command& (0+255),b
  2889  002F26  EC0B  F019         	call	_lcd_4bit_send_command	;wreg free
  2890  002F2A  0101               	movlb	1	; () banked
  2891  002F2C  6F65               	movwf	lcd_4bit_set_cursor@ret& (0+255),b
  2892  002F2E  EFC3  F017         	goto	l8876
  2893  002F32                     l8872:
  2894                           
  2895                           ; BSR set to: 1
  2896  002F32  C15F  F15B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2897  002F36  C160  F15C         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  2898  002F3A  5162               	movf	lcd_4bit_set_cursor@coulmn& (0+255),w,b
  2899  002F3C  0FD4               	addlw	212
  2900  002F3E  6F5D               	movwf	lcd_4bit_send_command@command& (0+255),b
  2901  002F40  EC0B  F019         	call	_lcd_4bit_send_command	;wreg free
  2902  002F44  0101               	movlb	1	; () banked
  2903  002F46  6F65               	movwf	lcd_4bit_set_cursor@ret& (0+255),b
  2904  002F48  EFC3  F017         	goto	l8876
  2905  002F4C                     l8874:
  2906                           
  2907                           ; BSR set to: 1
  2908  002F4C  5161               	movf	lcd_4bit_set_cursor@row& (0+255),w,b
  2909  002F4E  6F63               	movwf	??_lcd_4bit_set_cursor& (0+255),b
  2910  002F50  6B64               	clrf	(??_lcd_4bit_set_cursor+1)& (0+255),b
  2911                           
  2912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2913                           ; Switch size 1, requested type "simple"
  2914                           ; Number of cases is 1, Range of values is 0 to 0
  2915                           ; switch strategies available:
  2916                           ; Name         Instructions Cycles
  2917                           ; simple_byte            4     3 (average)
  2918                           ;	Chosen strategy is simple_byte
  2919  002F52  5164               	movf	(??_lcd_4bit_set_cursor+1)& (0+255),w,b
  2920  002F54  0A00               	xorlw	0	; case 0
  2921  002F56  B4D8               	btfsc	status,2,c
  2922  002F58  EFB0  F017         	goto	l10030
  2923  002F5C  EFC3  F017         	goto	l8876
  2924  002F60                     l10030:
  2925                           
  2926                           ; BSR set to: 1
  2927                           ; Switch size 1, requested type "simple"
  2928                           ; Number of cases is 4, Range of values is 1 to 4
  2929                           ; switch strategies available:
  2930                           ; Name         Instructions Cycles
  2931                           ; simple_byte           13     7 (average)
  2932                           ;	Chosen strategy is simple_byte
  2933  002F60  5163               	movf	??_lcd_4bit_set_cursor& (0+255),w,b
  2934  002F62  0A01               	xorlw	1	; case 1
  2935  002F64  B4D8               	btfsc	status,2,c
  2936  002F66  EF72  F017         	goto	l8866
  2937  002F6A  0A03               	xorlw	3	; case 2
  2938  002F6C  B4D8               	btfsc	status,2,c
  2939  002F6E  EF7F  F017         	goto	l8868
  2940  002F72  0A01               	xorlw	1	; case 3
  2941  002F74  B4D8               	btfsc	status,2,c
  2942  002F76  EF8C  F017         	goto	l8870
  2943  002F7A  0A07               	xorlw	7	; case 4
  2944  002F7C  B4D8               	btfsc	status,2,c
  2945  002F7E  EF99  F017         	goto	l8872
  2946  002F82  EFC3  F017         	goto	l8876
  2947  002F86                     l8876:
  2948                           
  2949                           ; BSR set to: 1
  2950                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 545:     return ret;
  2951  002F86  5165               	movf	lcd_4bit_set_cursor@ret& (0+255),w,b
  2952  002F88                     
  2953                           ; BSR set to: 1
  2954  002F88  0012               	return		;funcret
  2955  002F8A                     __end_of_lcd_4bit_set_cursor:
  2956                           	callstack 0
  2957                           
  2958 ;; *************** function _lcd_4bit_send_command *****************
  2959 ;; Defined at:
  2960 ;;		line 60 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  lcd             2    9[BANK1 ] PTR const struct .
  2963 ;;		 -> lcd_1(6), 
  2964 ;;  command         1   11[BANK1 ] unsigned char 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  ret             1   12[BANK1 ] unsigned char 
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  1    wreg      unsigned char 
  2969 ;; Registers used:
  2970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2976 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;Total ram usage:        4 bytes
  2981 ;; Hardware stack levels used: 1
  2982 ;; Hardware stack levels required when called: 14
  2983 ;; This function calls:
  2984 ;;		_gpio_pin_write_logic
  2985 ;;		_lcd_4bit_send_enable_signal
  2986 ;;		_lcd_send_4bits
  2987 ;; This function is called by:
  2988 ;;		_lcd_4bit_intialize
  2989 ;;		_lcd_4bit_set_cursor
  2990 ;;		_WelcomingMessage
  2991 ;;		_lcd_4bit_send_custom_char
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	text13
  2996  003216                     __ptext13:
  2997                           	callstack 0
  2998  003216                     _lcd_4bit_send_command:
  2999                           	callstack 14
  3000  003216                     
  3001                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 62:     if(((void*)0) == lcd){
  3002  003216  0101               	movlb	1	; () banked
  3003  003218  515B               	movf	lcd_4bit_send_command@lcd& (0+255),w,b
  3004  00321A  115C               	iorwf	(lcd_4bit_send_command@lcd+1)& (0+255),w,b
  3005  00321C  A4D8               	btfss	status,2,c
  3006  00321E  EF13  F019         	goto	u7961
  3007  003222  EF15  F019         	goto	u7960
  3008  003226                     u7961:
  3009  003226  EF19  F019         	goto	l8830
  3010  00322A                     u7960:
  3011  00322A                     
  3012                           ; BSR set to: 1
  3013                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 63:         ret = (Std_ReturnType)0x00;
  3014  00322A  0E00               	movlw	0
  3015  00322C  6F5E               	movwf	lcd_4bit_send_command@ret& (0+255),b
  3016                           
  3017                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 64:     }
  3018  00322E  EF49  F019         	goto	l8832
  3019  003232                     l8830:
  3020                           
  3021                           ; BSR set to: 1
  3022                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 68:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_LOW);
  3023  003232  C15B  F0EB         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  3024  003236  C15C  F0EC         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
  3025  00323A  0E00               	movlw	0
  3026  00323C  0100               	movlb	0	; () banked
  3027  00323E  6FED               	movwf	gpio_pin_write_logic@logic& (0+255),b
  3028  003240  EC21  F013         	call	_gpio_pin_write_logic	;wreg free
  3029  003244  0101               	movlb	1	; () banked
  3030  003246  6F5E               	movwf	lcd_4bit_send_command@ret& (0+255),b
  3031                           
  3032                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 70:         ret = lcd_send_4bits(lcd, command >> 4);
  3033  003248  C15B  F158         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  3034  00324C  C15C  F159         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  3035  003250  395D               	swapf	lcd_4bit_send_command@command& (0+255),w,b
  3036  003252  0B0F               	andlw	15
  3037  003254  6F5A               	movwf	lcd_send_4bits@_data_command& (0+255),b
  3038  003256  ECBE  F018         	call	_lcd_send_4bits	;wreg free
  3039  00325A  0101               	movlb	1	; () banked
  3040  00325C  6F5E               	movwf	lcd_4bit_send_command@ret& (0+255),b
  3041                           
  3042                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 72:         ret = lcd_4bit_send_enable_signal(lcd);
  3043  00325E  C15B  F0EF         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  3044  003262  C15C  F0F0         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  3045  003266  ECAE  F01C         	call	_lcd_4bit_send_enable_signal	;wreg free
  3046  00326A  0101               	movlb	1	; () banked
  3047  00326C  6F5E               	movwf	lcd_4bit_send_command@ret& (0+255),b
  3048                           
  3049                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 74:         ret = lcd_send_4bits(lcd, command);
  3050  00326E  C15B  F158         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  3051  003272  C15C  F159         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  3052  003276  C15D  F15A         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  3053  00327A  ECBE  F018         	call	_lcd_send_4bits	;wreg free
  3054  00327E  0101               	movlb	1	; () banked
  3055  003280  6F5E               	movwf	lcd_4bit_send_command@ret& (0+255),b
  3056                           
  3057                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 76:         ret = lcd_4bit_send_enable_signal(lcd);
  3058  003282  C15B  F0EF         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  3059  003286  C15C  F0F0         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  3060  00328A  ECAE  F01C         	call	_lcd_4bit_send_enable_signal	;wreg free
  3061  00328E  0101               	movlb	1	; () banked
  3062  003290  6F5E               	movwf	lcd_4bit_send_command@ret& (0+255),b
  3063  003292                     l8832:
  3064                           
  3065                           ; BSR set to: 1
  3066                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 78:     return ret;
  3067  003292  515E               	movf	lcd_4bit_send_command@ret& (0+255),w,b
  3068  003294                     
  3069                           ; BSR set to: 1
  3070  003294  0012               	return		;funcret
  3071  003296                     __end_of_lcd_4bit_send_command:
  3072                           	callstack 0
  3073                           
  3074 ;; *************** function _lcd_4bit_send_char_data *****************
  3075 ;; Defined at:
  3076 ;;		line 89 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  lcd             2    9[BANK1 ] PTR const struct .
  3079 ;;		 -> lcd_1(6), 
  3080 ;;  data            1   11[BANK1 ] unsigned char 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  ret             1   12[BANK1 ] unsigned char 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      unsigned char 
  3085 ;; Registers used:
  3086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3092 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3093 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3095 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3096 ;;Total ram usage:        4 bytes
  3097 ;; Hardware stack levels used: 1
  3098 ;; Hardware stack levels required when called: 14
  3099 ;; This function calls:
  3100 ;;		_gpio_pin_write_logic
  3101 ;;		_lcd_4bit_send_enable_signal
  3102 ;;		_lcd_send_4bits
  3103 ;; This function is called by:
  3104 ;;		_lcd_4bit_send_string_pos
  3105 ;;		_lcd_4bit_send_char_data_pos
  3106 ;;		_lcd_4bit_send_string
  3107 ;;		_lcd_4bit_send_custom_char
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           	psect	text14
  3112  003296                     __ptext14:
  3113                           	callstack 0
  3114  003296                     _lcd_4bit_send_char_data:
  3115                           	callstack 15
  3116  003296                     
  3117                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 91:     if(((void*)0) == lcd){
  3118  003296  0101               	movlb	1	; () banked
  3119  003298  515B               	movf	lcd_4bit_send_char_data@lcd& (0+255),w,b
  3120  00329A  115C               	iorwf	(lcd_4bit_send_char_data@lcd+1)& (0+255),w,b
  3121  00329C  A4D8               	btfss	status,2,c
  3122  00329E  EF53  F019         	goto	u7991
  3123  0032A2  EF55  F019         	goto	u7990
  3124  0032A6                     u7991:
  3125  0032A6  EF59  F019         	goto	l8856
  3126  0032AA                     u7990:
  3127  0032AA                     
  3128                           ; BSR set to: 1
  3129                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 92:         ret = (Std_ReturnType)0x00;
  3130  0032AA  0E00               	movlw	0
  3131  0032AC  6F5E               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  3132                           
  3133                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 93:     }
  3134  0032AE  EF89  F019         	goto	l8858
  3135  0032B2                     l8856:
  3136                           
  3137                           ; BSR set to: 1
  3138                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 97:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_HIGH);
  3139  0032B2  C15B  F0EB         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  3140  0032B6  C15C  F0EC         	movff	lcd_4bit_send_char_data@lcd+1,gpio_pin_write_logic@_pin_config+1
  3141  0032BA  0E01               	movlw	1
  3142  0032BC  0100               	movlb	0	; () banked
  3143  0032BE  6FED               	movwf	gpio_pin_write_logic@logic& (0+255),b
  3144  0032C0  EC21  F013         	call	_gpio_pin_write_logic	;wreg free
  3145  0032C4  0101               	movlb	1	; () banked
  3146  0032C6  6F5E               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  3147                           
  3148                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 99:         ret = lcd_send_4bits(lcd, data >> 4);
  3149  0032C8  C15B  F158         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  3150  0032CC  C15C  F159         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  3151  0032D0  395D               	swapf	lcd_4bit_send_char_data@data& (0+255),w,b
  3152  0032D2  0B0F               	andlw	15
  3153  0032D4  6F5A               	movwf	lcd_send_4bits@_data_command& (0+255),b
  3154  0032D6  ECBE  F018         	call	_lcd_send_4bits	;wreg free
  3155  0032DA  0101               	movlb	1	; () banked
  3156  0032DC  6F5E               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  3157                           
  3158                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 101:         ret = lcd_4bit_send_enable_signal(lcd);
  3159  0032DE  C15B  F0EF         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  3160  0032E2  C15C  F0F0         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  3161  0032E6  ECAE  F01C         	call	_lcd_4bit_send_enable_signal	;wreg free
  3162  0032EA  0101               	movlb	1	; () banked
  3163  0032EC  6F5E               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  3164                           
  3165                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 103:         ret = lcd_send_4bits(lcd, data);
  3166  0032EE  C15B  F158         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  3167  0032F2  C15C  F159         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  3168  0032F6  C15D  F15A         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  3169  0032FA  ECBE  F018         	call	_lcd_send_4bits	;wreg free
  3170  0032FE  0101               	movlb	1	; () banked
  3171  003300  6F5E               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  3172                           
  3173                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 105:         ret = lcd_4bit_send_enable_signal(lcd);
  3174  003302  C15B  F0EF         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  3175  003306  C15C  F0F0         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  3176  00330A  ECAE  F01C         	call	_lcd_4bit_send_enable_signal	;wreg free
  3177  00330E  0101               	movlb	1	; () banked
  3178  003310  6F5E               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  3179  003312                     l8858:
  3180                           
  3181                           ; BSR set to: 1
  3182                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 107:     return ret;
  3183  003312  515E               	movf	lcd_4bit_send_char_data@ret& (0+255),w,b
  3184  003314                     
  3185                           ; BSR set to: 1
  3186  003314  0012               	return		;funcret
  3187  003316                     __end_of_lcd_4bit_send_char_data:
  3188                           	callstack 0
  3189                           
  3190 ;; *************** function _lcd_send_4bits *****************
  3191 ;; Defined at:
  3192 ;;		line 465 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;  lcd             2    6[BANK1 ] PTR const struct .
  3195 ;;		 -> lcd_1(6), 
  3196 ;;  _data_comman    1    8[BANK1 ] unsigned char 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;  ret             1   18[BANK0 ] unsigned char 
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      unsigned char 
  3201 ;; Registers used:
  3202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3208 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3211 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;Total ram usage:        4 bytes
  3213 ;; Hardware stack levels used: 1
  3214 ;; Hardware stack levels required when called: 13
  3215 ;; This function calls:
  3216 ;;		_gpio_pin_write_logic
  3217 ;; This function is called by:
  3218 ;;		_lcd_4bit_send_command
  3219 ;;		_lcd_4bit_send_char_data
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           	psect	text15
  3224  00317C                     __ptext15:
  3225                           	callstack 0
  3226  00317C                     _lcd_send_4bits:
  3227                           	callstack 14
  3228  00317C  0E02               	movlw	2
  3229  00317E  0101               	movlb	1	; () banked
  3230  003180  2558               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  3231  003182  0100               	movlb	0	; () banked
  3232  003184  6FEB               	movwf	gpio_pin_write_logic@_pin_config& (0+255),b
  3233  003186  0E00               	movlw	0
  3234  003188  0101               	movlb	1	; () banked
  3235  00318A  2159               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  3236  00318C  0100               	movlb	0	; () banked
  3237  00318E  6FEC               	movwf	(gpio_pin_write_logic@_pin_config+1)& (0+255),b
  3238  003190  0101               	movlb	1	; () banked
  3239  003192  515A               	movf	lcd_send_4bits@_data_command& (0+255),w,b
  3240  003194  0B01               	andlw	1
  3241  003196  0100               	movlb	0	; () banked
  3242  003198  6FED               	movwf	gpio_pin_write_logic@logic& (0+255),b
  3243  00319A  EC21  F013         	call	_gpio_pin_write_logic	;wreg free
  3244  00319E  0E03               	movlw	3
  3245  0031A0  0101               	movlb	1	; () banked
  3246  0031A2  2558               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  3247  0031A4  0100               	movlb	0	; () banked
  3248  0031A6  6FEB               	movwf	gpio_pin_write_logic@_pin_config& (0+255),b
  3249  0031A8  0E00               	movlw	0
  3250  0031AA  0101               	movlb	1	; () banked
  3251  0031AC  2159               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  3252  0031AE  0100               	movlb	0	; () banked
  3253  0031B0  6FEC               	movwf	(gpio_pin_write_logic@_pin_config+1)& (0+255),b
  3254  0031B2  0101               	movlb	1	; () banked
  3255  0031B4  90D8               	bcf	status,0,c
  3256  0031B6  315A               	rrcf	lcd_send_4bits@_data_command& (0+255),w,b
  3257  0031B8  0B01               	andlw	1
  3258  0031BA  0100               	movlb	0	; () banked
  3259  0031BC  6FED               	movwf	gpio_pin_write_logic@logic& (0+255),b
  3260  0031BE  EC21  F013         	call	_gpio_pin_write_logic	;wreg free
  3261  0031C2  0E04               	movlw	4
  3262  0031C4  0101               	movlb	1	; () banked
  3263  0031C6  2558               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  3264  0031C8  0100               	movlb	0	; () banked
  3265  0031CA  6FEB               	movwf	gpio_pin_write_logic@_pin_config& (0+255),b
  3266  0031CC  0E00               	movlw	0
  3267  0031CE  0101               	movlb	1	; () banked
  3268  0031D0  2159               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  3269  0031D2  0100               	movlb	0	; () banked
  3270  0031D4  6FEC               	movwf	(gpio_pin_write_logic@_pin_config+1)& (0+255),b
  3271  0031D6  0101               	movlb	1	; () banked
  3272  0031D8  415A               	rrncf	lcd_send_4bits@_data_command& (0+255),w,b
  3273  0031DA  42E8               	rrncf	wreg,f,c
  3274  0031DC  0B3F               	andlw	63
  3275  0031DE  0B01               	andlw	1
  3276  0031E0  0100               	movlb	0	; () banked
  3277  0031E2  6FED               	movwf	gpio_pin_write_logic@logic& (0+255),b
  3278  0031E4  EC21  F013         	call	_gpio_pin_write_logic	;wreg free
  3279  0031E8                     
  3280                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 470:     ret = gpio_pin_write_logic(&(lcd->lcd_data[3]
      +                          ), (_data_command >> 3) & (uint8)0x01);
  3281  0031E8  0E05               	movlw	5
  3282  0031EA  0101               	movlb	1	; () banked
  3283  0031EC  2558               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  3284  0031EE  0100               	movlb	0	; () banked
  3285  0031F0  6FEB               	movwf	gpio_pin_write_logic@_pin_config& (0+255),b
  3286  0031F2  0E00               	movlw	0
  3287  0031F4  0101               	movlb	1	; () banked
  3288  0031F6  2159               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  3289  0031F8  0100               	movlb	0	; () banked
  3290  0031FA  6FEC               	movwf	(gpio_pin_write_logic@_pin_config+1)& (0+255),b
  3291  0031FC  0101               	movlb	1	; () banked
  3292  0031FE  395A               	swapf	lcd_send_4bits@_data_command& (0+255),w,b
  3293  003200  46E8               	rlncf	wreg,f,c
  3294  003202  0B1F               	andlw	31
  3295  003204  0B01               	andlw	1
  3296  003206  0100               	movlb	0	; () banked
  3297  003208  6FED               	movwf	gpio_pin_write_logic@logic& (0+255),b
  3298  00320A  EC21  F013         	call	_gpio_pin_write_logic	;wreg free
  3299  00320E  0100               	movlb	0	; () banked
  3300  003210  6FEF               	movwf	lcd_send_4bits@ret& (0+255),b
  3301                           
  3302                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 471:     return ret;
  3303  003212  51EF               	movf	lcd_send_4bits@ret& (0+255),w,b
  3304  003214                     
  3305                           ; BSR set to: 0
  3306  003214  0012               	return		;funcret
  3307  003216                     __end_of_lcd_send_4bits:
  3308                           	callstack 0
  3309                           
  3310 ;; *************** function _lcd_4bit_send_enable_signal *****************
  3311 ;; Defined at:
  3312 ;;		line 481 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  lcd             2   18[BANK0 ] PTR const struct .
  3315 ;;		 -> lcd_1(6), 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  ret             1    6[BANK1 ] unsigned char 
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      unsigned char 
  3320 ;; Registers used:
  3321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3327 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3330 ;;      Totals:         0       2       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3331 ;;Total ram usage:        3 bytes
  3332 ;; Hardware stack levels used: 1
  3333 ;; Hardware stack levels required when called: 13
  3334 ;; This function calls:
  3335 ;;		_gpio_pin_write_logic
  3336 ;; This function is called by:
  3337 ;;		_lcd_4bit_send_command
  3338 ;;		_lcd_4bit_send_char_data
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text16
  3343  00395C                     __ptext16:
  3344                           	callstack 0
  3345  00395C                     _lcd_4bit_send_enable_signal:
  3346                           	callstack 14
  3347  00395C  0E01               	movlw	1
  3348  00395E  0100               	movlb	0	; () banked
  3349  003960  25EF               	addwf	lcd_4bit_send_enable_signal@lcd& (0+255),w,b
  3350  003962  6FEB               	movwf	gpio_pin_write_logic@_pin_config& (0+255),b
  3351  003964  0E00               	movlw	0
  3352  003966  21F0               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)& (0+255),w,b
  3353  003968  6FEC               	movwf	(gpio_pin_write_logic@_pin_config+1)& (0+255),b
  3354  00396A  0E01               	movlw	1
  3355  00396C  6FED               	movwf	gpio_pin_write_logic@logic& (0+255),b
  3356  00396E  EC21  F013         	call	_gpio_pin_write_logic	;wreg free
  3357  003972                     
  3358                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 484:     _delay((unsigned long)((5)*(4000000UL/4000000
      +                          .0)));
  3359  003972  D000               	nop2		;2 cycle nop
  3360  003974  D000               	nop2		;2 cycle nop
  3361  003976  F000               	nop	
  3362  003978                     
  3363                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 485:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GP
      +                          IO_LOW);
  3364  003978  0E01               	movlw	1
  3365  00397A  0100               	movlb	0	; () banked
  3366  00397C  25EF               	addwf	lcd_4bit_send_enable_signal@lcd& (0+255),w,b
  3367  00397E  6FEB               	movwf	gpio_pin_write_logic@_pin_config& (0+255),b
  3368  003980  0E00               	movlw	0
  3369  003982  21F0               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)& (0+255),w,b
  3370  003984  6FEC               	movwf	(gpio_pin_write_logic@_pin_config+1)& (0+255),b
  3371  003986  0E00               	movlw	0
  3372  003988  6FED               	movwf	gpio_pin_write_logic@logic& (0+255),b
  3373  00398A  EC21  F013         	call	_gpio_pin_write_logic	;wreg free
  3374  00398E  0101               	movlb	1	; () banked
  3375  003990  6F58               	movwf	lcd_4bit_send_enable_signal@ret& (0+255),b
  3376                           
  3377                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 486:     return ret;
  3378  003992  5158               	movf	lcd_4bit_send_enable_signal@ret& (0+255),w,b
  3379  003994                     
  3380                           ; BSR set to: 1
  3381  003994  0012               	return		;funcret
  3382  003996                     __end_of_lcd_4bit_send_enable_signal:
  3383                           	callstack 0
  3384                           
  3385 ;; *************** function _gpio_pin_write_logic *****************
  3386 ;; Defined at:
  3387 ;;		line 75 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  _pin_config     2   14[BANK0 ] PTR const struct .
  3390 ;;		 -> motor_2.dc_motor_pin(2), motor_2(2), motor_1.dc_motor_pin(2), motor_1(2), 
  3391 ;;		 -> lcd_1.lcd_data(4), lcd_1(6), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
  3392 ;;		 -> relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  3393 ;;  logic           1   16[BANK0 ] enum E2933
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;  ret             1   17[BANK0 ] unsigned char 
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  1    wreg      unsigned char 
  3398 ;; Registers used:
  3399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3405 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3406 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3407 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3408 ;;      Totals:         0       4       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3409 ;;Total ram usage:       10 bytes
  3410 ;; Hardware stack levels used: 1
  3411 ;; Hardware stack levels required when called: 12
  3412 ;; This function calls:
  3413 ;;		Nothing
  3414 ;; This function is called by:
  3415 ;;		_lcd_4bit_send_command
  3416 ;;		_lcd_4bit_send_char_data
  3417 ;;		_lcd_send_4bits
  3418 ;;		_lcd_4bit_send_enable_signal
  3419 ;;		_gpio_pin_intialize
  3420 ;;		_seven_segement_write_number
  3421 ;;		_lcd_8bit_send_command
  3422 ;;		_lcd_8bit_send_char_data
  3423 ;;		_lcd_8bit_send_enable_signal
  3424 ;;		_keypad_get_value
  3425 ;;		_led_turn_on
  3426 ;;		_led_turn_off
  3427 ;;		_relay_turn_on
  3428 ;;		_relay_turn_off
  3429 ;;		_Ultrasonic_Calculate_Distance
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text17
  3434  002642                     __ptext17:
  3435                           	callstack 0
  3436  002642                     _gpio_pin_write_logic:
  3437                           	callstack 14
  3438  002642                     
  3439                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3440  002642  0E01               	movlw	1
  3441  002644  0100               	movlb	0	; () banked
  3442  002646  6FEE               	movwf	gpio_pin_write_logic@ret& (0+255),b
  3443  002648                     
  3444                           ; BSR set to: 0
  3445                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  3446  002648  51EB               	movf	gpio_pin_write_logic@_pin_config& (0+255),w,b
  3447  00264A  11EC               	iorwf	(gpio_pin_write_logic@_pin_config+1)& (0+255),w,b
  3448  00264C  B4D8               	btfsc	status,2,c
  3449  00264E  EF2B  F013         	goto	u7861
  3450  002652  EF2D  F013         	goto	u7860
  3451  002656                     u7861:
  3452  002656  EF3F  F013         	goto	l8760
  3453  00265A                     u7860:
  3454  00265A                     
  3455                           ; BSR set to: 0
  3456  00265A  C0EB  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3457  00265E  C0EC  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3458  002662  30DF               	rrcf	223,w,c
  3459  002664  32E8               	rrcf	wreg,f,c
  3460  002666  32E8               	rrcf	wreg,f,c
  3461  002668  0B07               	andlw	7
  3462  00266A  0101               	movlb	1	; () banked
  3463  00266C  6F52               	movwf	??_gpio_pin_write_logic& (0+255),b
  3464  00266E  0E07               	movlw	7
  3465  002670  6552               	cpfsgt	??_gpio_pin_write_logic& (0+255),b
  3466  002672  EF3D  F013         	goto	u7871
  3467  002676  EF3F  F013         	goto	u7870
  3468  00267A                     u7871:
  3469  00267A  EFA5  F013         	goto	l8768
  3470  00267E                     u7870:
  3471  00267E                     l8760:
  3472                           
  3473                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:         ret = (Std_ReturnType)0x00;
  3474  00267E  0E00               	movlw	0
  3475  002680  0100               	movlb	0	; () banked
  3476  002682  6FEE               	movwf	gpio_pin_write_logic@ret& (0+255),b
  3477                           
  3478                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:     }
  3479  002684  EFBC  F013         	goto	l8770
  3480  002688                     l8762:
  3481                           
  3482                           ; BSR set to: 1
  3483                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1 << _pin_config->pin));
  3484  002688  C0EB  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3485  00268C  C0EC  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3486  002690  30DF               	rrcf	223,w,c
  3487  002692  32E8               	rrcf	wreg,f,c
  3488  002694  32E8               	rrcf	wreg,f,c
  3489  002696  0B07               	andlw	7
  3490  002698  6F52               	movwf	??_gpio_pin_write_logic& (0+255),b
  3491  00269A  0E01               	movlw	1
  3492  00269C  6F53               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
  3493  00269E  2B52               	incf	??_gpio_pin_write_logic& (0+255),f,b
  3494  0026A0  EF54  F013         	goto	u7884
  3495  0026A4                     u7885:
  3496  0026A4  90D8               	bcf	status,0,c
  3497  0026A6  3753               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
  3498  0026A8                     u7884:
  3499  0026A8  2F52               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
  3500  0026AA  EF52  F013         	goto	u7885
  3501  0026AE  0101               	movlb	1	; () banked
  3502  0026B0  5153               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
  3503  0026B2  0AFF               	xorlw	255
  3504  0026B4  6F54               	movwf	(??_gpio_pin_write_logic+2)& (0+255),b
  3505  0026B6  C0EB  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3506  0026BA  C0EC  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3507  0026BE  50DF               	movf	223,w,c
  3508  0026C0  0B07               	andlw	7
  3509  0026C2  6F55               	movwf	(??_gpio_pin_write_logic+3)& (0+255),b
  3510  0026C4  5155               	movf	(??_gpio_pin_write_logic+3)& (0+255),w,b
  3511  0026C6  0D02               	mullw	2
  3512  0026C8  0E37               	movlw	low _lat_registers
  3513  0026CA  24F3               	addwf	243,w,c
  3514  0026CC  6ED9               	movwf	fsr2l,c
  3515  0026CE  0E01               	movlw	high _lat_registers
  3516  0026D0  20F4               	addwfc	prodh,w,c
  3517  0026D2  6EDA               	movwf	fsr2h,c
  3518  0026D4  CFDE F156          	movff	postinc2,??_gpio_pin_write_logic+4
  3519  0026D8  CFDD F157          	movff	postdec2,??_gpio_pin_write_logic+5
  3520  0026DC  C156  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  3521  0026E0  C157  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  3522  0026E4  5154               	movf	(??_gpio_pin_write_logic+2)& (0+255),w,b
  3523  0026E6  16DF               	andwf	indf2,f,c
  3524                           
  3525                           ;MCAL_Layer/GPIO/hal_gpio.c: 84:                 break;
  3526  0026E8  EFBC  F013         	goto	l8770
  3527  0026EC                     l8764:
  3528                           
  3529                           ; BSR set to: 1
  3530                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1 << _pin_config->pin));
  3531  0026EC  C0EB  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3532  0026F0  C0EC  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3533  0026F4  30DF               	rrcf	223,w,c
  3534  0026F6  32E8               	rrcf	wreg,f,c
  3535  0026F8  32E8               	rrcf	wreg,f,c
  3536  0026FA  0B07               	andlw	7
  3537  0026FC  6F52               	movwf	??_gpio_pin_write_logic& (0+255),b
  3538  0026FE  0E01               	movlw	1
  3539  002700  6F53               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
  3540  002702  2B52               	incf	??_gpio_pin_write_logic& (0+255),f,b
  3541  002704  EF86  F013         	goto	u7894
  3542  002708                     u7895:
  3543  002708  90D8               	bcf	status,0,c
  3544  00270A  3753               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
  3545  00270C                     u7894:
  3546  00270C  2F52               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
  3547  00270E  EF84  F013         	goto	u7895
  3548  002712  C0EB  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3549  002716  C0EC  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3550  00271A  50DF               	movf	223,w,c
  3551  00271C  0B07               	andlw	7
  3552  00271E  0101               	movlb	1	; () banked
  3553  002720  6F54               	movwf	(??_gpio_pin_write_logic+2)& (0+255),b
  3554  002722  5154               	movf	(??_gpio_pin_write_logic+2)& (0+255),w,b
  3555  002724  0D02               	mullw	2
  3556  002726  0E37               	movlw	low _lat_registers
  3557  002728  24F3               	addwf	243,w,c
  3558  00272A  6ED9               	movwf	fsr2l,c
  3559  00272C  0E01               	movlw	high _lat_registers
  3560  00272E  20F4               	addwfc	prodh,w,c
  3561  002730  6EDA               	movwf	fsr2h,c
  3562  002732  CFDE F155          	movff	postinc2,??_gpio_pin_write_logic+3
  3563  002736  CFDD F156          	movff	postdec2,??_gpio_pin_write_logic+4
  3564  00273A  C155  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3565  00273E  C156  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3566  002742  5153               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
  3567  002744  12DF               	iorwf	indf2,f,c
  3568                           
  3569                           ;MCAL_Layer/GPIO/hal_gpio.c: 87:                 break;
  3570  002746  EFBC  F013         	goto	l8770
  3571  00274A                     l8768:
  3572                           
  3573                           ; BSR set to: 1
  3574  00274A  0100               	movlb	0	; () banked
  3575  00274C  51ED               	movf	gpio_pin_write_logic@logic& (0+255),w,b
  3576  00274E  0101               	movlb	1	; () banked
  3577  002750  6F52               	movwf	??_gpio_pin_write_logic& (0+255),b
  3578  002752  6B53               	clrf	(??_gpio_pin_write_logic+1)& (0+255),b
  3579                           
  3580                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3581                           ; Switch size 1, requested type "simple"
  3582                           ; Number of cases is 1, Range of values is 0 to 0
  3583                           ; switch strategies available:
  3584                           ; Name         Instructions Cycles
  3585                           ; simple_byte            4     3 (average)
  3586                           ;	Chosen strategy is simple_byte
  3587  002754  5153               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
  3588  002756  0A00               	xorlw	0	; case 0
  3589  002758  B4D8               	btfsc	status,2,c
  3590  00275A  EFB1  F013         	goto	l10032
  3591  00275E  EF3F  F013         	goto	l8760
  3592  002762                     l10032:
  3593                           
  3594                           ; BSR set to: 1
  3595                           ; Switch size 1, requested type "simple"
  3596                           ; Number of cases is 2, Range of values is 0 to 1
  3597                           ; switch strategies available:
  3598                           ; Name         Instructions Cycles
  3599                           ; simple_byte            7     4 (average)
  3600                           ;	Chosen strategy is simple_byte
  3601  002762  5152               	movf	??_gpio_pin_write_logic& (0+255),w,b
  3602  002764  0A00               	xorlw	0	; case 0
  3603  002766  B4D8               	btfsc	status,2,c
  3604  002768  EF44  F013         	goto	l8762
  3605  00276C  0A01               	xorlw	1	; case 1
  3606  00276E  B4D8               	btfsc	status,2,c
  3607  002770  EF76  F013         	goto	l8764
  3608  002774  EF3F  F013         	goto	l8760
  3609  002778                     l8770:
  3610                           
  3611                           ;MCAL_Layer/GPIO/hal_gpio.c: 91:     return ret;
  3612  002778  0100               	movlb	0	; () banked
  3613  00277A  51EE               	movf	gpio_pin_write_logic@ret& (0+255),w,b
  3614  00277C                     
  3615                           ; BSR set to: 0
  3616  00277C  0012               	return		;funcret
  3617  00277E                     __end_of_gpio_pin_write_logic:
  3618                           	callstack 0
  3619                           
  3620 ;; *************** function _ADC_StartConversion *****************
  3621 ;; Defined at:
  3622 ;;		line 131 in file "MCAL_Layer/ADC/hal_adc.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  _adc            2   14[BANK0 ] PTR const struct .
  3625 ;;		 -> adc_1(7), 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  ret             1   16[BANK0 ] unsigned char 
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  1    wreg      unsigned char 
  3630 ;; Registers used:
  3631 ;;		wreg, status,2, status,0
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3637 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3638 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3640 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;Total ram usage:        3 bytes
  3642 ;; Hardware stack levels used: 1
  3643 ;; Hardware stack levels required when called: 12
  3644 ;; This function calls:
  3645 ;;		Nothing
  3646 ;; This function is called by:
  3647 ;;		_main
  3648 ;;		_ADC_GetConversion_Blocking
  3649 ;;		_ADC_StartConversion_Interrupt
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text18
  3654  003A30                     __ptext18:
  3655                           	callstack 0
  3656  003A30                     _ADC_StartConversion:
  3657                           	callstack 18
  3658  003A30                     
  3659                           ;MCAL_Layer/ADC/hal_adc.c: 133:     if(((void*)0) == _adc){
  3660  003A30  0100               	movlb	0	; () banked
  3661  003A32  51EB               	movf	ADC_StartConversion@_adc& (0+255),w,b
  3662  003A34  11EC               	iorwf	(ADC_StartConversion@_adc+1)& (0+255),w,b
  3663  003A36  A4D8               	btfss	status,2,c
  3664  003A38  EF20  F01D         	goto	u5791
  3665  003A3C  EF22  F01D         	goto	u5790
  3666  003A40                     u5791:
  3667  003A40  EF26  F01D         	goto	l395
  3668  003A44                     u5790:
  3669  003A44                     
  3670                           ; BSR set to: 0
  3671                           ;MCAL_Layer/ADC/hal_adc.c: 134:         ret = (Std_ReturnType)0x00;
  3672  003A44  0E00               	movlw	0
  3673  003A46  6FED               	movwf	ADC_StartConversion@ret& (0+255),b
  3674                           
  3675                           ;MCAL_Layer/ADC/hal_adc.c: 135:     }
  3676  003A48  EF29  F01D         	goto	l396
  3677  003A4C                     l395:
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;MCAL_Layer/ADC/hal_adc.c: 137:         (ADCON0bits.GODONE = 1);
  3681  003A4C  82C2               	bsf	194,1,c	;volatile
  3682  003A4E                     
  3683                           ; BSR set to: 0
  3684                           ;MCAL_Layer/ADC/hal_adc.c: 138:         ret = (Std_ReturnType)0x01;
  3685  003A4E  0E01               	movlw	1
  3686  003A50  6FED               	movwf	ADC_StartConversion@ret& (0+255),b
  3687  003A52                     l396:
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;MCAL_Layer/ADC/hal_adc.c: 140:     return ret;
  3691  003A52  51ED               	movf	ADC_StartConversion@ret& (0+255),w,b
  3692  003A54                     
  3693                           ; BSR set to: 0
  3694  003A54  0012               	return		;funcret
  3695  003A56                     __end_of_ADC_StartConversion:
  3696                           	callstack 0
  3697                           
  3698 ;; *************** function _InterruptManager *****************
  3699 ;; Defined at:
  3700 ;;		line 32 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;		None
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;		None
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  1    wreg      void 
  3707 ;; Registers used:
  3708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3716 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;Total ram usage:       14 bytes
  3719 ;; Hardware stack levels used: 1
  3720 ;; Hardware stack levels required when called: 11
  3721 ;; This function calls:
  3722 ;;		_ADC_ISR
  3723 ;;		_CCP1_ISR
  3724 ;;		_CCP2_ISR
  3725 ;;		_EUSART_RX_ISR
  3726 ;;		_EUSART_TX_ISR
  3727 ;;		_INT0_ISR
  3728 ;;		_INT1_ISR
  3729 ;;		_INT2_ISR
  3730 ;;		_MSSP_I2C_BC_ISR
  3731 ;;		_MSSP_I2C_ISR
  3732 ;;		_MSSP_SPI_ISR
  3733 ;;		_RB4_ISR
  3734 ;;		_RB5_ISR
  3735 ;;		_RB6_ISR
  3736 ;;		_RB7_ISR
  3737 ;;		_TMR0_ISR
  3738 ;;		_TMR1_ISR
  3739 ;;		_TMR2_ISR
  3740 ;;		_TMR3_ISR
  3741 ;; This function is called by:
  3742 ;;		Interrupt level 2
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	intcode
  3747  000008                     __pintcode:
  3748                           	callstack 0
  3749  000008                     _InterruptManager:
  3750                           	callstack 13
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;incstack = 0
  3754  000008  8273               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3755  00000A  ED18  F008         	call	int_func,f	;refresh shadow registers
  3756                           
  3757                           	psect	intcode_body
  3758  001030                     __pintcode_body:
  3759                           	callstack 13
  3760  001030                     int_func:
  3761                           	callstack 13
  3762  001030  0006               	pop		; remove dummy address from shadow register refresh
  3763  001032  CFFA F0DD          	movff	pclath,??_InterruptManager
  3764  001036  CFFB F0DE          	movff	pclatu,??_InterruptManager+1
  3765  00103A  CFE9 F0DF          	movff	fsr0l,??_InterruptManager+2
  3766  00103E  CFEA F0E0          	movff	fsr0h,??_InterruptManager+3
  3767  001042  CFE1 F0E1          	movff	fsr1l,??_InterruptManager+4
  3768  001046  CFE2 F0E2          	movff	fsr1h,??_InterruptManager+5
  3769  00104A  CFD9 F0E3          	movff	fsr2l,??_InterruptManager+6
  3770  00104E  CFDA F0E4          	movff	fsr2h,??_InterruptManager+7
  3771  001052  CFF3 F0E5          	movff	prodl,??_InterruptManager+8
  3772  001056  CFF4 F0E6          	movff	prodh,??_InterruptManager+9
  3773  00105A  CFF6 F0E7          	movff	tblptrl,??_InterruptManager+10
  3774  00105E  CFF7 F0E8          	movff	tblptrh,??_InterruptManager+11
  3775  001062  CFF8 F0E9          	movff	tblptru,??_InterruptManager+12
  3776  001066  CFF5 F0EA          	movff	tablat,??_InterruptManager+13
  3777  00106A                     
  3778                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 34:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF)){
  3779  00106A  A8F2               	btfss	242,4,c	;volatile
  3780  00106C  EF3A  F008         	goto	i2u875_41
  3781  001070  EF3C  F008         	goto	i2u875_40
  3782  001074                     i2u875_41:
  3783  001074  EF45  F008         	goto	i2l1216
  3784  001078                     i2u875_40:
  3785  001078  A2F2               	btfss	242,1,c	;volatile
  3786  00107A  EF41  F008         	goto	i2u876_41
  3787  00107E  EF43  F008         	goto	i2u876_40
  3788  001082                     i2u876_41:
  3789  001082  EF45  F008         	goto	i2l1216
  3790  001086                     i2u876_40:
  3791  001086                     
  3792                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 35:         INT0_ISR();
  3793  001086  EC9E  F01D         	call	_INT0_ISR	;wreg free
  3794  00108A                     i2l1216:
  3795                           
  3796                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 38:     if((1 == INTCON3bits.INT1E) && (
      +                          1 == INTCON3bits.INT1F)){
  3797  00108A  A6F0               	btfss	240,3,c	;volatile
  3798  00108C  EF4A  F008         	goto	i2u877_41
  3799  001090  EF4C  F008         	goto	i2u877_40
  3800  001094                     i2u877_41:
  3801  001094  EF55  F008         	goto	i2l1218
  3802  001098                     i2u877_40:
  3803  001098  A0F0               	btfss	240,0,c	;volatile
  3804  00109A  EF51  F008         	goto	i2u878_41
  3805  00109E  EF53  F008         	goto	i2u878_40
  3806  0010A2                     i2u878_41:
  3807  0010A2  EF55  F008         	goto	i2l1218
  3808  0010A6                     i2u878_40:
  3809  0010A6                     
  3810                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 39:         INT1_ISR();
  3811  0010A6  EC9C  F01D         	call	_INT1_ISR	;wreg free
  3812  0010AA                     i2l1218:
  3813                           
  3814                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 42:     if((1 == INTCON3bits.INT2IE) && 
      +                          (1 == INTCON3bits.INT2IF)){
  3815  0010AA  A8F0               	btfss	240,4,c	;volatile
  3816  0010AC  EF5A  F008         	goto	i2u879_41
  3817  0010B0  EF5C  F008         	goto	i2u879_40
  3818  0010B4                     i2u879_41:
  3819  0010B4  EF65  F008         	goto	i2l1220
  3820  0010B8                     i2u879_40:
  3821  0010B8  A2F0               	btfss	240,1,c	;volatile
  3822  0010BA  EF61  F008         	goto	i2u880_41
  3823  0010BE  EF63  F008         	goto	i2u880_40
  3824  0010C2                     i2u880_41:
  3825  0010C2  EF65  F008         	goto	i2l1220
  3826  0010C6                     i2u880_40:
  3827  0010C6                     
  3828                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 43:         INT2_ISR();
  3829  0010C6  EC9A  F01D         	call	_INT2_ISR	;wreg free
  3830  0010CA                     i2l1220:
  3831                           
  3832                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 49:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  3833  0010CA  A6F2               	btfss	242,3,c	;volatile
  3834  0010CC  EF6A  F008         	goto	i2u881_41
  3835  0010D0  EF6C  F008         	goto	i2u881_40
  3836  0010D4                     i2u881_41:
  3837  0010D4  EF88  F008         	goto	i2l1222
  3838  0010D8                     i2u881_40:
  3839  0010D8  A0F2               	btfss	242,0,c	;volatile
  3840  0010DA  EF71  F008         	goto	i2u882_41
  3841  0010DE  EF73  F008         	goto	i2u882_40
  3842  0010E2                     i2u882_41:
  3843  0010E2  EF88  F008         	goto	i2l1222
  3844  0010E6                     i2u882_40:
  3845  0010E6  A881               	btfss	129,4,c	;volatile
  3846  0010E8  EF78  F008         	goto	i2u883_41
  3847  0010EC  EF7A  F008         	goto	i2u883_40
  3848  0010F0                     i2u883_41:
  3849  0010F0  EF88  F008         	goto	i2l1222
  3850  0010F4                     i2u883_40:
  3851  0010F4  0100               	movlb	0	; () banked
  3852  0010F6  05D2               	decf	_RB4_Flag& (0+255),w,b	;volatile
  3853  0010F8  A4D8               	btfss	status,2,c
  3854  0010FA  EF81  F008         	goto	i2u884_41
  3855  0010FE  EF83  F008         	goto	i2u884_40
  3856  001102                     i2u884_41:
  3857  001102  EF88  F008         	goto	i2l1222
  3858  001106                     i2u884_40:
  3859  001106                     
  3860                           ; BSR set to: 0
  3861                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 50:        (PORTBbits.RB4 == GPIO_HIGH) 
      +                          && (RB4_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 51:         RB4_Flag
      +                           = 0;
  3862  001106  0E00               	movlw	0
  3863  001108  6FD2               	movwf	_RB4_Flag& (0+255),b	;volatile
  3864  00110A                     
  3865                           ; BSR set to: 0
  3866                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 52:         RB4_ISR(0);
  3867  00110A  0E00               	movlw	0
  3868  00110C  EC65  F01D         	call	_RB4_ISR
  3869  001110                     i2l1222:
  3870                           
  3871                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 55:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  3872  001110  A6F2               	btfss	242,3,c	;volatile
  3873  001112  EF8D  F008         	goto	i2u885_41
  3874  001116  EF8F  F008         	goto	i2u885_40
  3875  00111A                     i2u885_41:
  3876  00111A  EFAB  F008         	goto	i2l1224
  3877  00111E                     i2u885_40:
  3878  00111E  A0F2               	btfss	242,0,c	;volatile
  3879  001120  EF94  F008         	goto	i2u886_41
  3880  001124  EF96  F008         	goto	i2u886_40
  3881  001128                     i2u886_41:
  3882  001128  EFAB  F008         	goto	i2l1224
  3883  00112C                     i2u886_40:
  3884  00112C  B881               	btfsc	129,4,c	;volatile
  3885  00112E  EF9B  F008         	goto	i2u887_41
  3886  001132  EF9D  F008         	goto	i2u887_40
  3887  001136                     i2u887_41:
  3888  001136  EFAB  F008         	goto	i2l1224
  3889  00113A                     i2u887_40:
  3890  00113A  0100               	movlb	0	; () banked
  3891  00113C  51D2               	movf	_RB4_Flag& (0+255),w,b	;volatile
  3892  00113E  A4D8               	btfss	status,2,c
  3893  001140  EFA4  F008         	goto	i2u888_41
  3894  001144  EFA6  F008         	goto	i2u888_40
  3895  001148                     i2u888_41:
  3896  001148  EFAB  F008         	goto	i2l1224
  3897  00114C                     i2u888_40:
  3898  00114C                     
  3899                           ; BSR set to: 0
  3900                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 56:        (PORTBbits.RB4 == GPIO_LOW) &
      +                          & (RB4_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 57:         RB4_Flag 
      +                          = 1;
  3901  00114C  0E01               	movlw	1
  3902  00114E  6FD2               	movwf	_RB4_Flag& (0+255),b	;volatile
  3903  001150                     
  3904                           ; BSR set to: 0
  3905                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 58:         RB4_ISR(1);
  3906  001150  0E01               	movlw	1
  3907  001152  EC65  F01D         	call	_RB4_ISR
  3908  001156                     i2l1224:
  3909                           
  3910                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 61:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  3911  001156  A6F2               	btfss	242,3,c	;volatile
  3912  001158  EFB0  F008         	goto	i2u889_41
  3913  00115C  EFB2  F008         	goto	i2u889_40
  3914  001160                     i2u889_41:
  3915  001160  EFCE  F008         	goto	i2l1226
  3916  001164                     i2u889_40:
  3917  001164  A0F2               	btfss	242,0,c	;volatile
  3918  001166  EFB7  F008         	goto	i2u890_41
  3919  00116A  EFB9  F008         	goto	i2u890_40
  3920  00116E                     i2u890_41:
  3921  00116E  EFCE  F008         	goto	i2l1226
  3922  001172                     i2u890_40:
  3923  001172  AA81               	btfss	129,5,c	;volatile
  3924  001174  EFBE  F008         	goto	i2u891_41
  3925  001178  EFC0  F008         	goto	i2u891_40
  3926  00117C                     i2u891_41:
  3927  00117C  EFCE  F008         	goto	i2l1226
  3928  001180                     i2u891_40:
  3929  001180  0100               	movlb	0	; () banked
  3930  001182  05D1               	decf	_RB5_Flag& (0+255),w,b	;volatile
  3931  001184  A4D8               	btfss	status,2,c
  3932  001186  EFC7  F008         	goto	i2u892_41
  3933  00118A  EFC9  F008         	goto	i2u892_40
  3934  00118E                     i2u892_41:
  3935  00118E  EFCE  F008         	goto	i2l1226
  3936  001192                     i2u892_40:
  3937  001192                     
  3938                           ; BSR set to: 0
  3939                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 62:        (PORTBbits.RB5 == GPIO_HIGH) 
      +                          && (RB5_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 63:         RB5_Flag
      +                           = 0;
  3940  001192  0E00               	movlw	0
  3941  001194  6FD1               	movwf	_RB5_Flag& (0+255),b	;volatile
  3942  001196                     
  3943                           ; BSR set to: 0
  3944                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 64:         RB5_ISR(0);
  3945  001196  0E00               	movlw	0
  3946  001198  EC58  F01D         	call	_RB5_ISR
  3947  00119C                     i2l1226:
  3948                           
  3949                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 67:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  3950  00119C  A6F2               	btfss	242,3,c	;volatile
  3951  00119E  EFD3  F008         	goto	i2u893_41
  3952  0011A2  EFD5  F008         	goto	i2u893_40
  3953  0011A6                     i2u893_41:
  3954  0011A6  EFF1  F008         	goto	i2l1228
  3955  0011AA                     i2u893_40:
  3956  0011AA  A0F2               	btfss	242,0,c	;volatile
  3957  0011AC  EFDA  F008         	goto	i2u894_41
  3958  0011B0  EFDC  F008         	goto	i2u894_40
  3959  0011B4                     i2u894_41:
  3960  0011B4  EFF1  F008         	goto	i2l1228
  3961  0011B8                     i2u894_40:
  3962  0011B8  BA81               	btfsc	129,5,c	;volatile
  3963  0011BA  EFE1  F008         	goto	i2u895_41
  3964  0011BE  EFE3  F008         	goto	i2u895_40
  3965  0011C2                     i2u895_41:
  3966  0011C2  EFF1  F008         	goto	i2l1228
  3967  0011C6                     i2u895_40:
  3968  0011C6  0100               	movlb	0	; () banked
  3969  0011C8  51D1               	movf	_RB5_Flag& (0+255),w,b	;volatile
  3970  0011CA  A4D8               	btfss	status,2,c
  3971  0011CC  EFEA  F008         	goto	i2u896_41
  3972  0011D0  EFEC  F008         	goto	i2u896_40
  3973  0011D4                     i2u896_41:
  3974  0011D4  EFF1  F008         	goto	i2l1228
  3975  0011D8                     i2u896_40:
  3976  0011D8                     
  3977                           ; BSR set to: 0
  3978                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 68:        (PORTBbits.RB5 == GPIO_LOW) &
      +                          & (RB5_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 69:         RB5_Flag 
      +                          = 1;
  3979  0011D8  0E01               	movlw	1
  3980  0011DA  6FD1               	movwf	_RB5_Flag& (0+255),b	;volatile
  3981  0011DC                     
  3982                           ; BSR set to: 0
  3983                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 70:         RB5_ISR(1);
  3984  0011DC  0E01               	movlw	1
  3985  0011DE  EC58  F01D         	call	_RB5_ISR
  3986  0011E2                     i2l1228:
  3987                           
  3988                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 73:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  3989  0011E2  A6F2               	btfss	242,3,c	;volatile
  3990  0011E4  EFF6  F008         	goto	i2u897_41
  3991  0011E8  EFF8  F008         	goto	i2u897_40
  3992  0011EC                     i2u897_41:
  3993  0011EC  EF14  F009         	goto	i2l1230
  3994  0011F0                     i2u897_40:
  3995  0011F0  A0F2               	btfss	242,0,c	;volatile
  3996  0011F2  EFFD  F008         	goto	i2u898_41
  3997  0011F6  EFFF  F008         	goto	i2u898_40
  3998  0011FA                     i2u898_41:
  3999  0011FA  EF14  F009         	goto	i2l1230
  4000  0011FE                     i2u898_40:
  4001  0011FE  AC81               	btfss	129,6,c	;volatile
  4002  001200  EF04  F009         	goto	i2u899_41
  4003  001204  EF06  F009         	goto	i2u899_40
  4004  001208                     i2u899_41:
  4005  001208  EF14  F009         	goto	i2l1230
  4006  00120C                     i2u899_40:
  4007  00120C  0100               	movlb	0	; () banked
  4008  00120E  05D0               	decf	_RB6_Flag& (0+255),w,b	;volatile
  4009  001210  A4D8               	btfss	status,2,c
  4010  001212  EF0D  F009         	goto	i2u900_41
  4011  001216  EF0F  F009         	goto	i2u900_40
  4012  00121A                     i2u900_41:
  4013  00121A  EF14  F009         	goto	i2l1230
  4014  00121E                     i2u900_40:
  4015  00121E                     
  4016                           ; BSR set to: 0
  4017                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 74:        (PORTBbits.RB6 == GPIO_HIGH) 
      +                          && (RB6_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 75:         RB6_Flag
      +                           = 0;
  4018  00121E  0E00               	movlw	0
  4019  001220  6FD0               	movwf	_RB6_Flag& (0+255),b	;volatile
  4020  001222                     
  4021                           ; BSR set to: 0
  4022                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 76:         RB6_ISR(0);
  4023  001222  0E00               	movlw	0
  4024  001224  EC4B  F01D         	call	_RB6_ISR
  4025  001228                     i2l1230:
  4026                           
  4027                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 79:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  4028  001228  A6F2               	btfss	242,3,c	;volatile
  4029  00122A  EF19  F009         	goto	i2u901_41
  4030  00122E  EF1B  F009         	goto	i2u901_40
  4031  001232                     i2u901_41:
  4032  001232  EF37  F009         	goto	i2l1232
  4033  001236                     i2u901_40:
  4034  001236  A0F2               	btfss	242,0,c	;volatile
  4035  001238  EF20  F009         	goto	i2u902_41
  4036  00123C  EF22  F009         	goto	i2u902_40
  4037  001240                     i2u902_41:
  4038  001240  EF37  F009         	goto	i2l1232
  4039  001244                     i2u902_40:
  4040  001244  BC81               	btfsc	129,6,c	;volatile
  4041  001246  EF27  F009         	goto	i2u903_41
  4042  00124A  EF29  F009         	goto	i2u903_40
  4043  00124E                     i2u903_41:
  4044  00124E  EF37  F009         	goto	i2l1232
  4045  001252                     i2u903_40:
  4046  001252  0100               	movlb	0	; () banked
  4047  001254  51D0               	movf	_RB6_Flag& (0+255),w,b	;volatile
  4048  001256  A4D8               	btfss	status,2,c
  4049  001258  EF30  F009         	goto	i2u904_41
  4050  00125C  EF32  F009         	goto	i2u904_40
  4051  001260                     i2u904_41:
  4052  001260  EF37  F009         	goto	i2l1232
  4053  001264                     i2u904_40:
  4054  001264                     
  4055                           ; BSR set to: 0
  4056                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 80:        (PORTBbits.RB6 == GPIO_LOW) &
      +                          & (RB6_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 81:         RB6_Flag 
      +                          = 1;
  4057  001264  0E01               	movlw	1
  4058  001266  6FD0               	movwf	_RB6_Flag& (0+255),b	;volatile
  4059  001268                     
  4060                           ; BSR set to: 0
  4061                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 82:         RB6_ISR(1);
  4062  001268  0E01               	movlw	1
  4063  00126A  EC4B  F01D         	call	_RB6_ISR
  4064  00126E                     i2l1232:
  4065                           
  4066                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 85:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  4067  00126E  A6F2               	btfss	242,3,c	;volatile
  4068  001270  EF3C  F009         	goto	i2u905_41
  4069  001274  EF3E  F009         	goto	i2u905_40
  4070  001278                     i2u905_41:
  4071  001278  EF5A  F009         	goto	i2l1234
  4072  00127C                     i2u905_40:
  4073  00127C  A0F2               	btfss	242,0,c	;volatile
  4074  00127E  EF43  F009         	goto	i2u906_41
  4075  001282  EF45  F009         	goto	i2u906_40
  4076  001286                     i2u906_41:
  4077  001286  EF5A  F009         	goto	i2l1234
  4078  00128A                     i2u906_40:
  4079  00128A  AE81               	btfss	129,7,c	;volatile
  4080  00128C  EF4A  F009         	goto	i2u907_41
  4081  001290  EF4C  F009         	goto	i2u907_40
  4082  001294                     i2u907_41:
  4083  001294  EF5A  F009         	goto	i2l1234
  4084  001298                     i2u907_40:
  4085  001298  0100               	movlb	0	; () banked
  4086  00129A  05CF               	decf	_RB7_Flag& (0+255),w,b	;volatile
  4087  00129C  A4D8               	btfss	status,2,c
  4088  00129E  EF53  F009         	goto	i2u908_41
  4089  0012A2  EF55  F009         	goto	i2u908_40
  4090  0012A6                     i2u908_41:
  4091  0012A6  EF5A  F009         	goto	i2l1234
  4092  0012AA                     i2u908_40:
  4093  0012AA                     
  4094                           ; BSR set to: 0
  4095                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 86:        (PORTBbits.RB7 == GPIO_HIGH) 
      +                          && (RB7_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 87:         RB7_Flag
      +                           = 0;
  4096  0012AA  0E00               	movlw	0
  4097  0012AC  6FCF               	movwf	_RB7_Flag& (0+255),b	;volatile
  4098  0012AE                     
  4099                           ; BSR set to: 0
  4100                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 88:         RB7_ISR(0);
  4101  0012AE  0E00               	movlw	0
  4102  0012B0  EC3E  F01D         	call	_RB7_ISR
  4103  0012B4                     i2l1234:
  4104                           
  4105                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 91:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  4106  0012B4  A6F2               	btfss	242,3,c	;volatile
  4107  0012B6  EF5F  F009         	goto	i2u909_41
  4108  0012BA  EF61  F009         	goto	i2u909_40
  4109  0012BE                     i2u909_41:
  4110  0012BE  EF7D  F009         	goto	i2l1236
  4111  0012C2                     i2u909_40:
  4112  0012C2  A0F2               	btfss	242,0,c	;volatile
  4113  0012C4  EF66  F009         	goto	i2u910_41
  4114  0012C8  EF68  F009         	goto	i2u910_40
  4115  0012CC                     i2u910_41:
  4116  0012CC  EF7D  F009         	goto	i2l1236
  4117  0012D0                     i2u910_40:
  4118  0012D0  BE81               	btfsc	129,7,c	;volatile
  4119  0012D2  EF6D  F009         	goto	i2u911_41
  4120  0012D6  EF6F  F009         	goto	i2u911_40
  4121  0012DA                     i2u911_41:
  4122  0012DA  EF7D  F009         	goto	i2l1236
  4123  0012DE                     i2u911_40:
  4124  0012DE  0100               	movlb	0	; () banked
  4125  0012E0  51CF               	movf	_RB7_Flag& (0+255),w,b	;volatile
  4126  0012E2  A4D8               	btfss	status,2,c
  4127  0012E4  EF76  F009         	goto	i2u912_41
  4128  0012E8  EF78  F009         	goto	i2u912_40
  4129  0012EC                     i2u912_41:
  4130  0012EC  EF7D  F009         	goto	i2l1236
  4131  0012F0                     i2u912_40:
  4132  0012F0                     
  4133                           ; BSR set to: 0
  4134                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 92:        (PORTBbits.RB7 == GPIO_LOW) &
      +                          & (RB7_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 93:         RB7_Flag 
      +                          = 1;
  4135  0012F0  0E01               	movlw	1
  4136  0012F2  6FCF               	movwf	_RB7_Flag& (0+255),b	;volatile
  4137  0012F4                     
  4138                           ; BSR set to: 0
  4139                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 94:         RB7_ISR(1);
  4140  0012F4  0E01               	movlw	1
  4141  0012F6  EC3E  F01D         	call	_RB7_ISR
  4142  0012FA                     i2l1236:
  4143                           
  4144                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 99:     if((1 == PIE1bits.ADIE) && (1 ==
      +                           PIR1bits.ADIF)){
  4145  0012FA  AC9D               	btfss	157,6,c	;volatile
  4146  0012FC  EF82  F009         	goto	i2u913_41
  4147  001300  EF84  F009         	goto	i2u913_40
  4148  001304                     i2u913_41:
  4149  001304  EF8D  F009         	goto	i2l1238
  4150  001308                     i2u913_40:
  4151  001308  AC9E               	btfss	158,6,c	;volatile
  4152  00130A  EF89  F009         	goto	i2u914_41
  4153  00130E  EF8B  F009         	goto	i2u914_40
  4154  001312                     i2u914_41:
  4155  001312  EF8D  F009         	goto	i2l1238
  4156  001316                     i2u914_40:
  4157  001316                     
  4158                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 100:         ADC_ISR();
  4159  001316  EC00  F01D         	call	_ADC_ISR	;wreg free
  4160  00131A                     i2l1238:
  4161                           
  4162                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 104:     if((1 == INTCONbits.TMR0IE) && 
      +                          (1 == INTCONbits.TMR0IF)){
  4163  00131A  AAF2               	btfss	242,5,c	;volatile
  4164  00131C  EF92  F009         	goto	i2u915_41
  4165  001320  EF94  F009         	goto	i2u915_40
  4166  001324                     i2u915_41:
  4167  001324  EF9D  F009         	goto	i2l1240
  4168  001328                     i2u915_40:
  4169  001328  A4F2               	btfss	242,2,c	;volatile
  4170  00132A  EF99  F009         	goto	i2u916_41
  4171  00132E  EF9B  F009         	goto	i2u916_40
  4172  001332                     i2u916_41:
  4173  001332  EF9D  F009         	goto	i2l1240
  4174  001336                     i2u916_40:
  4175  001336                     
  4176                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 105:         TMR0_ISR();
  4177  001336  EC8B  F01D         	call	_TMR0_ISR	;wreg free
  4178  00133A                     i2l1240:
  4179                           
  4180                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 108:     if((1 == PIE1bits.TMR1IE) && (1
      +                           == PIR1bits.TMR1IF)){
  4181  00133A  A09D               	btfss	157,0,c	;volatile
  4182  00133C  EFA2  F009         	goto	i2u917_41
  4183  001340  EFA4  F009         	goto	i2u917_40
  4184  001344                     i2u917_41:
  4185  001344  EFAD  F009         	goto	i2l1242
  4186  001348                     i2u917_40:
  4187  001348  A09E               	btfss	158,0,c	;volatile
  4188  00134A  EFA9  F009         	goto	i2u918_41
  4189  00134E  EFAB  F009         	goto	i2u918_40
  4190  001352                     i2u918_41:
  4191  001352  EFAD  F009         	goto	i2l1242
  4192  001356                     i2u918_40:
  4193  001356                     
  4194                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 109:         TMR1_ISR();
  4195  001356  EC84  F01D         	call	_TMR1_ISR	;wreg free
  4196  00135A                     i2l1242:
  4197                           
  4198                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 112:     if((1 == PIE1bits.TMR2IE) && (1
      +                           == PIR1bits.TMR2IF)){
  4199  00135A  A29D               	btfss	157,1,c	;volatile
  4200  00135C  EFB2  F009         	goto	i2u919_41
  4201  001360  EFB4  F009         	goto	i2u919_40
  4202  001364                     i2u919_41:
  4203  001364  EFBD  F009         	goto	i2l1244
  4204  001368                     i2u919_40:
  4205  001368  A29E               	btfss	158,1,c	;volatile
  4206  00136A  EFB9  F009         	goto	i2u920_41
  4207  00136E  EFBB  F009         	goto	i2u920_40
  4208  001372                     i2u920_41:
  4209  001372  EFBD  F009         	goto	i2l1244
  4210  001376                     i2u920_40:
  4211  001376                     
  4212                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 113:         TMR2_ISR();
  4213  001376  EC92  F01D         	call	_TMR2_ISR	;wreg free
  4214  00137A                     i2l1244:
  4215                           
  4216                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 116:     if((1 == PIE2bits.TMR3IE) && (1
      +                           == PIR2bits.TMR3IF)){
  4217  00137A  A2A0               	btfss	160,1,c	;volatile
  4218  00137C  EFC2  F009         	goto	i2u921_41
  4219  001380  EFC4  F009         	goto	i2u921_40
  4220  001384                     i2u921_41:
  4221  001384  EFCD  F009         	goto	i2l1246
  4222  001388                     i2u921_40:
  4223  001388  A2A1               	btfss	161,1,c	;volatile
  4224  00138A  EFC9  F009         	goto	i2u922_41
  4225  00138E  EFCB  F009         	goto	i2u922_40
  4226  001392                     i2u922_41:
  4227  001392  EFCD  F009         	goto	i2l1246
  4228  001396                     i2u922_40:
  4229  001396                     
  4230                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 117:         TMR3_ISR();
  4231  001396  EC7D  F01D         	call	_TMR3_ISR	;wreg free
  4232  00139A                     i2l1246:
  4233                           
  4234                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 121:     if((1 == PIE1bits.TXIE) && (1 =
      +                          = PIR1bits.TXIF)){
  4235  00139A  A89D               	btfss	157,4,c	;volatile
  4236  00139C  EFD2  F009         	goto	i2u923_41
  4237  0013A0  EFD4  F009         	goto	i2u923_40
  4238  0013A4                     i2u923_41:
  4239  0013A4  EFDD  F009         	goto	i2l1248
  4240  0013A8                     i2u923_40:
  4241  0013A8  A89E               	btfss	158,4,c	;volatile
  4242  0013AA  EFD9  F009         	goto	i2u924_41
  4243  0013AE  EFDB  F009         	goto	i2u924_40
  4244  0013B2                     i2u924_41:
  4245  0013B2  EFDD  F009         	goto	i2l1248
  4246  0013B6                     i2u924_40:
  4247  0013B6                     
  4248                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 122:         EUSART_TX_ISR();
  4249  0013B6  ECA0  F01D         	call	_EUSART_TX_ISR	;wreg free
  4250  0013BA                     i2l1248:
  4251                           
  4252                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 125:     if((1 == PIE1bits.RCIE) && (1 =
      +                          = PIR1bits.RCIF)){
  4253  0013BA  AA9D               	btfss	157,5,c	;volatile
  4254  0013BC  EFE2  F009         	goto	i2u925_41
  4255  0013C0  EFE4  F009         	goto	i2u925_40
  4256  0013C4                     i2u925_41:
  4257  0013C4  EFED  F009         	goto	i2l1250
  4258  0013C8                     i2u925_40:
  4259  0013C8  AA9E               	btfss	158,5,c	;volatile
  4260  0013CA  EFE9  F009         	goto	i2u926_41
  4261  0013CE  EFEB  F009         	goto	i2u926_40
  4262  0013D2                     i2u926_41:
  4263  0013D2  EFED  F009         	goto	i2l1250
  4264  0013D6                     i2u926_40:
  4265  0013D6                     
  4266                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 126:         EUSART_RX_ISR();
  4267  0013D6  ECA7  F01D         	call	_EUSART_RX_ISR	;wreg free
  4268  0013DA                     i2l1250:
  4269                           
  4270                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 131:     if((1 == PIE1bits.SSPIE) && (1 
      +                          == PIR1bits.SSPIF)){
  4271  0013DA  A69D               	btfss	157,3,c	;volatile
  4272  0013DC  EFF2  F009         	goto	i2u927_41
  4273  0013E0  EFF4  F009         	goto	i2u927_40
  4274  0013E4                     i2u927_41:
  4275  0013E4  EFFD  F009         	goto	i2l1252
  4276  0013E8                     i2u927_40:
  4277  0013E8  A69E               	btfss	158,3,c	;volatile
  4278  0013EA  EFF9  F009         	goto	i2u928_41
  4279  0013EE  EFFB  F009         	goto	i2u928_40
  4280  0013F2                     i2u928_41:
  4281  0013F2  EFFD  F009         	goto	i2l1252
  4282  0013F6                     i2u928_40:
  4283  0013F6                     
  4284                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 132:         MSSP_I2C_ISR();
  4285  0013F6  EC96  F01D         	call	_MSSP_I2C_ISR	;wreg free
  4286  0013FA                     i2l1252:
  4287                           
  4288                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 135:     if((1 == PIE2bits.BCLIE) && (1 
      +                          == PIR2bits.BCLIF)){
  4289  0013FA  A6A0               	btfss	160,3,c	;volatile
  4290  0013FC  EF02  F00A         	goto	i2u929_41
  4291  001400  EF04  F00A         	goto	i2u929_40
  4292  001404                     i2u929_41:
  4293  001404  EF0D  F00A         	goto	i2l1254
  4294  001408                     i2u929_40:
  4295  001408  A6A1               	btfss	161,3,c	;volatile
  4296  00140A  EF09  F00A         	goto	i2u930_41
  4297  00140E  EF0B  F00A         	goto	i2u930_40
  4298  001412                     i2u930_41:
  4299  001412  EF0D  F00A         	goto	i2l1254
  4300  001416                     i2u930_40:
  4301  001416                     
  4302                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 136:         MSSP_I2C_BC_ISR();
  4303  001416  EC98  F01D         	call	_MSSP_I2C_BC_ISR	;wreg free
  4304  00141A                     i2l1254:
  4305                           
  4306                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 139:     if((1 == PIE1bits.SSPIE) && (1 
      +                          == PIR1bits.SSPIF)){
  4307  00141A  A69D               	btfss	157,3,c	;volatile
  4308  00141C  EF12  F00A         	goto	i2u931_41
  4309  001420  EF14  F00A         	goto	i2u931_40
  4310  001424                     i2u931_41:
  4311  001424  EF1D  F00A         	goto	i2l1256
  4312  001428                     i2u931_40:
  4313  001428  A69E               	btfss	158,3,c	;volatile
  4314  00142A  EF19  F00A         	goto	i2u932_41
  4315  00142E  EF1B  F00A         	goto	i2u932_40
  4316  001432                     i2u932_41:
  4317  001432  EF1D  F00A         	goto	i2l1256
  4318  001436                     i2u932_40:
  4319  001436                     
  4320                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 140:         MSSP_SPI_ISR();
  4321  001436  ECA6  F01D         	call	_MSSP_SPI_ISR	;wreg free
  4322  00143A                     i2l1256:
  4323                           
  4324                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 145:     if((1 == PIE1bits.CCP1IE) && (1
      +                           == PIR1bits.CCP1IF)){
  4325  00143A  A49D               	btfss	157,2,c	;volatile
  4326  00143C  EF22  F00A         	goto	i2u933_41
  4327  001440  EF24  F00A         	goto	i2u933_40
  4328  001444                     i2u933_41:
  4329  001444  EF2D  F00A         	goto	i2l1258
  4330  001448                     i2u933_40:
  4331  001448  A49E               	btfss	158,2,c	;volatile
  4332  00144A  EF29  F00A         	goto	i2u934_41
  4333  00144E  EF2B  F00A         	goto	i2u934_40
  4334  001452                     i2u934_41:
  4335  001452  EF2D  F00A         	goto	i2l1258
  4336  001456                     i2u934_40:
  4337  001456                     
  4338                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 146:         CCP1_ISR();
  4339  001456  ECA4  F01D         	call	_CCP1_ISR	;wreg free
  4340  00145A                     i2l1258:
  4341                           
  4342                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 149:     if((1 == PIE2bits.CCP2IE) && (1
      +                           == PIR2bits.CCP2IF)){
  4343  00145A  A0A0               	btfss	160,0,c	;volatile
  4344  00145C  EF32  F00A         	goto	i2u935_41
  4345  001460  EF34  F00A         	goto	i2u935_40
  4346  001464                     i2u935_41:
  4347  001464  EF3D  F00A         	goto	i2l1261
  4348  001468                     i2u935_40:
  4349  001468  A0A1               	btfss	161,0,c	;volatile
  4350  00146A  EF39  F00A         	goto	i2u936_41
  4351  00146E  EF3B  F00A         	goto	i2u936_40
  4352  001472                     i2u936_41:
  4353  001472  EF3D  F00A         	goto	i2l1261
  4354  001476                     i2u936_40:
  4355  001476                     
  4356                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 150:         CCP2_ISR();
  4357  001476  ECA2  F01D         	call	_CCP2_ISR	;wreg free
  4358  00147A                     i2l1261:
  4359  00147A  C0EA  FFF5         	movff	??_InterruptManager+13,tablat
  4360  00147E  C0E9  FFF8         	movff	??_InterruptManager+12,tblptru
  4361  001482  C0E8  FFF7         	movff	??_InterruptManager+11,tblptrh
  4362  001486  C0E7  FFF6         	movff	??_InterruptManager+10,tblptrl
  4363  00148A  C0E6  FFF4         	movff	??_InterruptManager+9,prodh
  4364  00148E  C0E5  FFF3         	movff	??_InterruptManager+8,prodl
  4365  001492  C0E4  FFDA         	movff	??_InterruptManager+7,fsr2h
  4366  001496  C0E3  FFD9         	movff	??_InterruptManager+6,fsr2l
  4367  00149A  C0E2  FFE2         	movff	??_InterruptManager+5,fsr1h
  4368  00149E  C0E1  FFE1         	movff	??_InterruptManager+4,fsr1l
  4369  0014A2  C0E0  FFEA         	movff	??_InterruptManager+3,fsr0h
  4370  0014A6  C0DF  FFE9         	movff	??_InterruptManager+2,fsr0l
  4371  0014AA  C0DE  FFFB         	movff	??_InterruptManager+1,pclatu
  4372  0014AE  C0DD  FFFA         	movff	??_InterruptManager,pclath
  4373  0014B2  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4374  0014B4  0011               	retfie		f
  4375  0014B6                     __end_of_InterruptManager:
  4376                           	callstack 0
  4377                           
  4378 ;; *************** function _TMR3_ISR *****************
  4379 ;; Defined at:
  4380 ;;		line 102 in file "MCAL_Layer/Timer3/hal_timr3.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;		None
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;		None
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4398 ;;Total ram usage:        0 bytes
  4399 ;; Hardware stack levels used: 1
  4400 ;; This function calls:
  4401 ;;		Nothing
  4402 ;; This function is called by:
  4403 ;;		_InterruptManager
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           	psect	text20
  4408  003AFA                     __ptext20:
  4409                           	callstack 0
  4410  003AFA                     _TMR3_ISR:
  4411                           	callstack 23
  4412  003AFA                     
  4413                           ;MCAL_Layer/Timer3/hal_timr3.c: 103:     (PIR2bits.TMR3IF = 0);
  4414  003AFA  92A1               	bcf	161,1,c	;volatile
  4415  003AFC                     
  4416                           ;MCAL_Layer/Timer3/hal_timr3.c: 104:     TMR3H = (timer3_preload) >> 8;
  4417  003AFC  0100               	movlb	0	; () banked
  4418  003AFE  5191               	movf	(_timer3_preload+1)& (0+255),w,b
  4419  003B00  6EB3               	movwf	179,c	;volatile
  4420  003B02                     
  4421                           ; BSR set to: 0
  4422                           ;MCAL_Layer/Timer3/hal_timr3.c: 105:     TMR3L = (uint8)(timer3_preload);
  4423  003B02  C090  FFB2         	movff	_timer3_preload,4018	;volatile
  4424  003B06                     
  4425                           ; BSR set to: 0
  4426  003B06  0012               	return		;funcret
  4427  003B08                     __end_of_TMR3_ISR:
  4428                           	callstack 0
  4429                           
  4430 ;; *************** function _TMR2_ISR *****************
  4431 ;; Defined at:
  4432 ;;		line 95 in file "MCAL_Layer/Timer2/hal_timr2.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;		None
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;		None
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  1    wreg      void 
  4439 ;; Registers used:
  4440 ;;		None
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4450 ;;Total ram usage:        0 bytes
  4451 ;; Hardware stack levels used: 1
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_InterruptManager
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text21
  4460  003B24                     __ptext21:
  4461                           	callstack 0
  4462  003B24                     _TMR2_ISR:
  4463                           	callstack 23
  4464  003B24                     
  4465                           ;MCAL_Layer/Timer2/hal_timr2.c: 96:     (PIR1bits.TMR2IF = 0);
  4466  003B24  929E               	bcf	158,1,c	;volatile
  4467                           
  4468                           ;MCAL_Layer/Timer2/hal_timr2.c: 97:     TMR2 = timer2_preload;
  4469  003B26  C0C0  FFCC         	movff	_timer2_preload,4044	;volatile
  4470  003B2A  0012               	return		;funcret
  4471  003B2C                     __end_of_TMR2_ISR:
  4472                           	callstack 0
  4473                           
  4474 ;; *************** function _TMR1_ISR *****************
  4475 ;; Defined at:
  4476 ;;		line 102 in file "MCAL_Layer/Timer1/hal_timr1.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;		None
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;		None
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg, status,2
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4494 ;;Total ram usage:        0 bytes
  4495 ;; Hardware stack levels used: 1
  4496 ;; This function calls:
  4497 ;;		Nothing
  4498 ;; This function is called by:
  4499 ;;		_InterruptManager
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           	psect	text22
  4504  003B08                     __ptext22:
  4505                           	callstack 0
  4506  003B08                     _TMR1_ISR:
  4507                           	callstack 23
  4508  003B08                     
  4509                           ;MCAL_Layer/Timer1/hal_timr1.c: 103:     (PIR1bits.TMR1IF = 0);
  4510  003B08  909E               	bcf	158,0,c	;volatile
  4511  003B0A                     
  4512                           ;MCAL_Layer/Timer1/hal_timr1.c: 104:     TMR1H = (timer1_preload) >> 8;
  4513  003B0A  0100               	movlb	0	; () banked
  4514  003B0C  5197               	movf	(_timer1_preload+1)& (0+255),w,b	;volatile
  4515  003B0E  6ECF               	movwf	207,c	;volatile
  4516  003B10                     
  4517                           ; BSR set to: 0
  4518                           ;MCAL_Layer/Timer1/hal_timr1.c: 105:     TMR1L = (uint8)(timer1_preload);
  4519  003B10  C096  FFCE         	movff	_timer1_preload,4046	;volatile
  4520  003B14                     
  4521                           ; BSR set to: 0
  4522  003B14  0012               	return		;funcret
  4523  003B16                     __end_of_TMR1_ISR:
  4524                           	callstack 0
  4525                           
  4526 ;; *************** function _TMR0_ISR *****************
  4527 ;; Defined at:
  4528 ;;		line 107 in file "MCAL_Layer/Timer0/hal_timr0.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;		None
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;		None
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      void 
  4535 ;; Registers used:
  4536 ;;		wreg, status,2
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;Total ram usage:        0 bytes
  4547 ;; Hardware stack levels used: 1
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_InterruptManager
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text23
  4556  003B16                     __ptext23:
  4557                           	callstack 0
  4558  003B16                     _TMR0_ISR:
  4559                           	callstack 23
  4560  003B16                     
  4561                           ;MCAL_Layer/Timer0/hal_timr0.c: 108:     (INTCONbits.TMR0IF = 0);
  4562  003B16  94F2               	bcf	242,2,c	;volatile
  4563  003B18                     
  4564                           ;MCAL_Layer/Timer0/hal_timr0.c: 109:     TMR0H = (timer0_preload) >> 8;
  4565  003B18  0100               	movlb	0	; () banked
  4566  003B1A  519B               	movf	(_timer0_preload+1)& (0+255),w,b
  4567  003B1C  6ED7               	movwf	215,c	;volatile
  4568  003B1E                     
  4569                           ; BSR set to: 0
  4570                           ;MCAL_Layer/Timer0/hal_timr0.c: 110:     TMR0L = (uint8)(timer0_preload);
  4571  003B1E  C09A  FFD6         	movff	_timer0_preload,4054	;volatile
  4572  003B22                     
  4573                           ; BSR set to: 0
  4574  003B22  0012               	return		;funcret
  4575  003B24                     __end_of_TMR0_ISR:
  4576                           	callstack 0
  4577                           
  4578 ;; *************** function _RB7_ISR *****************
  4579 ;; Defined at:
  4580 ;;		line 164 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;  RB7_Source      1    wreg     unsigned char 
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  RB7_Source      1    0[COMRAM] unsigned char 
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  1    wreg      void 
  4587 ;; Registers used:
  4588 ;;		wreg, status,2, status,0
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;Total ram usage:        1 bytes
  4599 ;; Hardware stack levels used: 1
  4600 ;; This function calls:
  4601 ;;		Nothing
  4602 ;; This function is called by:
  4603 ;;		_InterruptManager
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           	psect	text24
  4608  003A7C                     __ptext24:
  4609                           	callstack 0
  4610  003A7C                     _RB7_ISR:
  4611                           	callstack 23
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;incstack = 0
  4615                           ;RB7_ISR@RB7_Source stored from wreg
  4616  003A7C  6E01               	movwf	RB7_ISR@RB7_Source^0,c
  4617  003A7E                     
  4618                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 166:     (INTCONbits.RBIF = 0);
  4619  003A7E  90F2               	bcf	242,0,c	;volatile
  4620  003A80                     
  4621                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 169:     if(0 == RB7_Source){
  4622  003A80  5001               	movf	RB7_ISR@RB7_Source^0,w,c
  4623  003A82  A4D8               	btfss	status,2,c
  4624  003A84  EF46  F01D         	goto	i2u585_41
  4625  003A88  EF48  F01D         	goto	i2u585_40
  4626  003A8C                     i2u585_41:
  4627  003A8C  EF4A  F01D         	goto	i2l7222
  4628  003A90                     i2u585_40:
  4629  003A90  EF4A  F01D         	goto	i2l1041
  4630  003A94                     i2l7222:
  4631  003A94                     i2l1041:
  4632  003A94  0012               	return		;funcret
  4633  003A96                     __end_of_RB7_ISR:
  4634                           	callstack 0
  4635                           
  4636 ;; *************** function _RB6_ISR *****************
  4637 ;; Defined at:
  4638 ;;		line 145 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;  RB6_Source      1    wreg     unsigned char 
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;  RB6_Source      1    0[COMRAM] unsigned char 
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  1    wreg      void 
  4645 ;; Registers used:
  4646 ;;		wreg, status,2, status,0
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4653 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4655 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;Total ram usage:        1 bytes
  4657 ;; Hardware stack levels used: 1
  4658 ;; This function calls:
  4659 ;;		Nothing
  4660 ;; This function is called by:
  4661 ;;		_InterruptManager
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text25
  4666  003A96                     __ptext25:
  4667                           	callstack 0
  4668  003A96                     _RB6_ISR:
  4669                           	callstack 23
  4670                           
  4671                           ;incstack = 0
  4672                           ;RB6_ISR@RB6_Source stored from wreg
  4673  003A96  6E01               	movwf	RB6_ISR@RB6_Source^0,c
  4674  003A98                     
  4675                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 147:     (INTCONbits.RBIF = 0);
  4676  003A98  90F2               	bcf	242,0,c	;volatile
  4677  003A9A                     
  4678                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 150:     if(0 == RB6_Source){
  4679  003A9A  5001               	movf	RB6_ISR@RB6_Source^0,w,c
  4680  003A9C  A4D8               	btfss	status,2,c
  4681  003A9E  EF53  F01D         	goto	i2u584_41
  4682  003AA2  EF55  F01D         	goto	i2u584_40
  4683  003AA6                     i2u584_41:
  4684  003AA6  EF57  F01D         	goto	i2l7208
  4685  003AAA                     i2u584_40:
  4686  003AAA  EF57  F01D         	goto	i2l1030
  4687  003AAE                     i2l7208:
  4688  003AAE                     i2l1030:
  4689  003AAE  0012               	return		;funcret
  4690  003AB0                     __end_of_RB6_ISR:
  4691                           	callstack 0
  4692                           
  4693 ;; *************** function _RB5_ISR *****************
  4694 ;; Defined at:
  4695 ;;		line 126 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;  RB5_Source      1    wreg     unsigned char 
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;  RB5_Source      1    0[COMRAM] unsigned char 
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      void 
  4702 ;; Registers used:
  4703 ;;		wreg, status,2, status,0
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4713 ;;Total ram usage:        1 bytes
  4714 ;; Hardware stack levels used: 1
  4715 ;; This function calls:
  4716 ;;		Nothing
  4717 ;; This function is called by:
  4718 ;;		_InterruptManager
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           	psect	text26
  4723  003AB0                     __ptext26:
  4724                           	callstack 0
  4725  003AB0                     _RB5_ISR:
  4726                           	callstack 23
  4727                           
  4728                           ;incstack = 0
  4729                           ;RB5_ISR@RB5_Source stored from wreg
  4730  003AB0  6E01               	movwf	RB5_ISR@RB5_Source^0,c
  4731  003AB2                     
  4732                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 128:     (INTCONbits.RBIF = 0);
  4733  003AB2  90F2               	bcf	242,0,c	;volatile
  4734  003AB4                     
  4735                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 131:     if(0 == RB5_Source){
  4736  003AB4  5001               	movf	RB5_ISR@RB5_Source^0,w,c
  4737  003AB6  A4D8               	btfss	status,2,c
  4738  003AB8  EF60  F01D         	goto	i2u583_41
  4739  003ABC  EF62  F01D         	goto	i2u583_40
  4740  003AC0                     i2u583_41:
  4741  003AC0  EF64  F01D         	goto	i2l7194
  4742  003AC4                     i2u583_40:
  4743  003AC4  EF64  F01D         	goto	i2l1019
  4744  003AC8                     i2l7194:
  4745  003AC8                     i2l1019:
  4746  003AC8  0012               	return		;funcret
  4747  003ACA                     __end_of_RB5_ISR:
  4748                           	callstack 0
  4749                           
  4750 ;; *************** function _RB4_ISR *****************
  4751 ;; Defined at:
  4752 ;;		line 107 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  RB4_Source      1    wreg     unsigned char 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  RB4_Source      1    0[COMRAM] unsigned char 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  1    wreg      void 
  4759 ;; Registers used:
  4760 ;;		wreg, status,2, status,0
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4769 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;Total ram usage:        1 bytes
  4771 ;; Hardware stack levels used: 1
  4772 ;; This function calls:
  4773 ;;		Nothing
  4774 ;; This function is called by:
  4775 ;;		_InterruptManager
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text27
  4780  003ACA                     __ptext27:
  4781                           	callstack 0
  4782  003ACA                     _RB4_ISR:
  4783                           	callstack 23
  4784                           
  4785                           ;incstack = 0
  4786                           ;RB4_ISR@RB4_Source stored from wreg
  4787  003ACA  6E01               	movwf	RB4_ISR@RB4_Source^0,c
  4788  003ACC                     
  4789                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 109:     (INTCONbits.RBIF = 0);
  4790  003ACC  90F2               	bcf	242,0,c	;volatile
  4791  003ACE                     
  4792                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 112:     if(0 == RB4_Source){
  4793  003ACE  5001               	movf	RB4_ISR@RB4_Source^0,w,c
  4794  003AD0  A4D8               	btfss	status,2,c
  4795  003AD2  EF6D  F01D         	goto	i2u582_41
  4796  003AD6  EF6F  F01D         	goto	i2u582_40
  4797  003ADA                     i2u582_41:
  4798  003ADA  EF71  F01D         	goto	i2l7180
  4799  003ADE                     i2u582_40:
  4800  003ADE  EF71  F01D         	goto	i2l1008
  4801  003AE2                     i2l7180:
  4802  003AE2                     i2l1008:
  4803  003AE2  0012               	return		;funcret
  4804  003AE4                     __end_of_RB4_ISR:
  4805                           	callstack 0
  4806                           
  4807 ;; *************** function _MSSP_SPI_ISR *****************
  4808 ;; Defined at:
  4809 ;;		line 105 in file "MCAL_Layer/SPI/hal_spi.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;		None
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;		None
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  1    wreg      void 
  4816 ;; Registers used:
  4817 ;;		None
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;Total ram usage:        0 bytes
  4828 ;; Hardware stack levels used: 1
  4829 ;; This function calls:
  4830 ;;		Nothing
  4831 ;; This function is called by:
  4832 ;;		_InterruptManager
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text28
  4837  003B4C                     __ptext28:
  4838                           	callstack 0
  4839  003B4C                     _MSSP_SPI_ISR:
  4840                           	callstack 23
  4841  003B4C  0012               	return		;funcret
  4842  003B4E                     __end_of_MSSP_SPI_ISR:
  4843                           	callstack 0
  4844                           
  4845 ;; *************** function _MSSP_I2C_ISR *****************
  4846 ;; Defined at:
  4847 ;;		line 242 in file "MCAL_Layer/I2C/hal_i2c.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;		None
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;		None
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  1    wreg      void 
  4854 ;; Registers used:
  4855 ;;		None
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4865 ;;Total ram usage:        0 bytes
  4866 ;; Hardware stack levels used: 1
  4867 ;; This function calls:
  4868 ;;		Nothing
  4869 ;; This function is called by:
  4870 ;;		_InterruptManager
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           	psect	text29
  4875  003B2C                     __ptext29:
  4876                           	callstack 0
  4877  003B2C                     _MSSP_I2C_ISR:
  4878                           	callstack 23
  4879  003B2C                     
  4880                           ;MCAL_Layer/I2C/hal_i2c.c: 244:     (PIR1bits.SSPIF = 0);
  4881  003B2C  969E               	bcf	158,3,c	;volatile
  4882  003B2E  0012               	return		;funcret
  4883  003B30                     __end_of_MSSP_I2C_ISR:
  4884                           	callstack 0
  4885                           
  4886 ;; *************** function _MSSP_I2C_BC_ISR *****************
  4887 ;; Defined at:
  4888 ;;		line 251 in file "MCAL_Layer/I2C/hal_i2c.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;		None
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;		None
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  1    wreg      void 
  4895 ;; Registers used:
  4896 ;;		None
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4906 ;;Total ram usage:        0 bytes
  4907 ;; Hardware stack levels used: 1
  4908 ;; This function calls:
  4909 ;;		Nothing
  4910 ;; This function is called by:
  4911 ;;		_InterruptManager
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           	psect	text30
  4916  003B30                     __ptext30:
  4917                           	callstack 0
  4918  003B30                     _MSSP_I2C_BC_ISR:
  4919                           	callstack 23
  4920  003B30                     
  4921                           ;MCAL_Layer/I2C/hal_i2c.c: 253:     (PIR2bits.BCLIF = 0);
  4922  003B30  96A1               	bcf	161,3,c	;volatile
  4923  003B32  0012               	return		;funcret
  4924  003B34                     __end_of_MSSP_I2C_BC_ISR:
  4925                           	callstack 0
  4926                           
  4927 ;; *************** function _INT2_ISR *****************
  4928 ;; Defined at:
  4929 ;;		line 95 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;		None
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;		None
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  1    wreg      void 
  4936 ;; Registers used:
  4937 ;;		None
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4947 ;;Total ram usage:        0 bytes
  4948 ;; Hardware stack levels used: 1
  4949 ;; This function calls:
  4950 ;;		Nothing
  4951 ;; This function is called by:
  4952 ;;		_InterruptManager
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           	psect	text31
  4957  003B34                     __ptext31:
  4958                           	callstack 0
  4959  003B34                     _INT2_ISR:
  4960                           	callstack 23
  4961  003B34                     
  4962                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 97:     (INTCON3bits.INT2IF = 0);
  4963  003B34  92F0               	bcf	240,1,c	;volatile
  4964  003B36  0012               	return		;funcret
  4965  003B38                     __end_of_INT2_ISR:
  4966                           	callstack 0
  4967                           
  4968 ;; *************** function _INT1_ISR *****************
  4969 ;; Defined at:
  4970 ;;		line 86 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;		None
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;		None
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  1    wreg      void 
  4977 ;; Registers used:
  4978 ;;		None
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4988 ;;Total ram usage:        0 bytes
  4989 ;; Hardware stack levels used: 1
  4990 ;; This function calls:
  4991 ;;		Nothing
  4992 ;; This function is called by:
  4993 ;;		_InterruptManager
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           	psect	text32
  4998  003B38                     __ptext32:
  4999                           	callstack 0
  5000  003B38                     _INT1_ISR:
  5001                           	callstack 23
  5002  003B38                     
  5003                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 88:     (INTCON3bits.INT1IF = 0);
  5004  003B38  90F0               	bcf	240,0,c	;volatile
  5005  003B3A  0012               	return		;funcret
  5006  003B3C                     __end_of_INT1_ISR:
  5007                           	callstack 0
  5008                           
  5009 ;; *************** function _INT0_ISR *****************
  5010 ;; Defined at:
  5011 ;;		line 74 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;		None
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;		None
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  1    wreg      void 
  5018 ;; Registers used:
  5019 ;;		None
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;Total ram usage:        0 bytes
  5030 ;; Hardware stack levels used: 1
  5031 ;; This function calls:
  5032 ;;		Nothing
  5033 ;; This function is called by:
  5034 ;;		_InterruptManager
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           	psect	text33
  5039  003B3C                     __ptext33:
  5040                           	callstack 0
  5041  003B3C                     _INT0_ISR:
  5042                           	callstack 23
  5043  003B3C                     
  5044                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 76:     (INTCONbits.INT0IF = 0);
  5045  003B3C  92F2               	bcf	242,1,c	;volatile
  5046  003B3E  0012               	return		;funcret
  5047  003B40                     __end_of_INT0_ISR:
  5048                           	callstack 0
  5049                           
  5050 ;; *************** function _EUSART_TX_ISR *****************
  5051 ;; Defined at:
  5052 ;;		line 243 in file "MCAL_Layer/usart/hal_usart.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;		None
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;		None
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      void 
  5059 ;; Registers used:
  5060 ;;		None
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5070 ;;Total ram usage:        0 bytes
  5071 ;; Hardware stack levels used: 1
  5072 ;; This function calls:
  5073 ;;		Nothing
  5074 ;; This function is called by:
  5075 ;;		_InterruptManager
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           	psect	text34
  5080  003B40                     __ptext34:
  5081                           	callstack 0
  5082  003B40                     _EUSART_TX_ISR:
  5083                           	callstack 23
  5084  003B40                     
  5085                           ;MCAL_Layer/usart/hal_usart.c: 244:     (PIE1bits.TXIE = 0);
  5086  003B40  989D               	bcf	157,4,c	;volatile
  5087  003B42  0012               	return		;funcret
  5088  003B44                     __end_of_EUSART_TX_ISR:
  5089                           	callstack 0
  5090                           
  5091 ;; *************** function _EUSART_RX_ISR *****************
  5092 ;; Defined at:
  5093 ;;		line 250 in file "MCAL_Layer/usart/hal_usart.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;		None
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;		None
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  1    wreg      void 
  5100 ;; Registers used:
  5101 ;;		wreg, status,2, status,0
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;Total ram usage:        0 bytes
  5112 ;; Hardware stack levels used: 1
  5113 ;; This function calls:
  5114 ;;		Nothing
  5115 ;; This function is called by:
  5116 ;;		_InterruptManager
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           	psect	text35
  5121  003B4E                     __ptext35:
  5122                           	callstack 0
  5123  003B4E                     _EUSART_RX_ISR:
  5124                           	callstack 23
  5125  003B4E  0012               	return		;funcret
  5126  003B50                     __end_of_EUSART_RX_ISR:
  5127                           	callstack 0
  5128                           
  5129 ;; *************** function _CCP2_ISR *****************
  5130 ;; Defined at:
  5131 ;;		line 260 in file "MCAL_Layer/CCP/hal_ccp.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;		None
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;		None
  5136 ;; Return value:  Size  Location     Type
  5137 ;;                  1    wreg      void 
  5138 ;; Registers used:
  5139 ;;		None
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5149 ;;Total ram usage:        0 bytes
  5150 ;; Hardware stack levels used: 1
  5151 ;; This function calls:
  5152 ;;		Nothing
  5153 ;; This function is called by:
  5154 ;;		_InterruptManager
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158                           	psect	text36
  5159  003B44                     __ptext36:
  5160                           	callstack 0
  5161  003B44                     _CCP2_ISR:
  5162                           	callstack 23
  5163  003B44                     
  5164                           ;MCAL_Layer/CCP/hal_ccp.c: 261:     (PIR2bits.CCP2IF = 0);
  5165  003B44  90A1               	bcf	161,0,c	;volatile
  5166  003B46  0012               	return		;funcret
  5167  003B48                     __end_of_CCP2_ISR:
  5168                           	callstack 0
  5169                           
  5170 ;; *************** function _CCP1_ISR *****************
  5171 ;; Defined at:
  5172 ;;		line 252 in file "MCAL_Layer/CCP/hal_ccp.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;		None
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;		None
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  1    wreg      void 
  5179 ;; Registers used:
  5180 ;;		None
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;Total ram usage:        0 bytes
  5191 ;; Hardware stack levels used: 1
  5192 ;; This function calls:
  5193 ;;		Nothing
  5194 ;; This function is called by:
  5195 ;;		_InterruptManager
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           	psect	text37
  5200  003B48                     __ptext37:
  5201                           	callstack 0
  5202  003B48                     _CCP1_ISR:
  5203                           	callstack 23
  5204  003B48                     
  5205                           ;MCAL_Layer/CCP/hal_ccp.c: 253:     (PIR1bits.CCP1IF = 0);
  5206  003B48  949E               	bcf	158,2,c	;volatile
  5207  003B4A  0012               	return		;funcret
  5208  003B4C                     __end_of_CCP1_ISR:
  5209                           	callstack 0
  5210                           
  5211 ;; *************** function _ADC_ISR *****************
  5212 ;; Defined at:
  5213 ;;		line 296 in file "MCAL_Layer/ADC/hal_adc.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;		None
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;		None
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  1    wreg      void 
  5220 ;; Registers used:
  5221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5231 ;;Total ram usage:        0 bytes
  5232 ;; Hardware stack levels used: 1
  5233 ;; Hardware stack levels required when called: 10
  5234 ;; This function calls:
  5235 ;;		Absolute function
  5236 ;;		_adcInterruptHandeler
  5237 ;; This function is called by:
  5238 ;;		_InterruptManager
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	text38
  5243  003A00                     __ptext38:
  5244                           	callstack 0
  5245  003A00                     _ADC_ISR:
  5246                           	callstack 13
  5247  003A00                     
  5248                           ;MCAL_Layer/ADC/hal_adc.c: 297:     (PIR1bits.ADIF = 0);
  5249  003A00  9C9E               	bcf	158,6,c	;volatile
  5250  003A02                     
  5251                           ;MCAL_Layer/ADC/hal_adc.c: 298:     if(ADC_InterruptHandler){
  5252  003A02  0100               	movlb	0	; () banked
  5253  003A04  51BE               	movf	_ADC_InterruptHandler& (0+255),w,b
  5254  003A06  11BF               	iorwf	(_ADC_InterruptHandler+1)& (0+255),w,b
  5255  003A08  B4D8               	btfsc	status,2,c
  5256  003A0A  EF09  F01D         	goto	i2u580_41
  5257  003A0E  EF0B  F01D         	goto	i2u580_40
  5258  003A12                     i2u580_41:
  5259  003A12  EF17  F01D         	goto	i2l473
  5260  003A16                     i2u580_40:
  5261  003A16                     
  5262                           ; BSR set to: 0
  5263                           ;MCAL_Layer/ADC/hal_adc.c: 299:         ADC_InterruptHandler();
  5264  003A16  D802               	call	i2u581_48
  5265  003A18  EF17  F01D         	goto	i2u581_49
  5266  003A1C                     i2u581_48:
  5267  003A1C  0005               	push	
  5268  003A1E  6EFA               	movwf	pclath,c
  5269  003A20  51BE               	movf	_ADC_InterruptHandler& (0+255),w,b
  5270  003A22  6EFD               	movwf	tosl,c
  5271  003A24  51BF               	movf	(_ADC_InterruptHandler+1)& (0+255),w,b
  5272  003A26  6EFE               	movwf	tosh,c
  5273  003A28  6AFF               	clrf	tosu,c
  5274  003A2A  50FA               	movf	pclath,w,c
  5275  003A2C  0012               	return		;indir
  5276  003A2E                     i2u581_49:
  5277  003A2E                     i2l473:
  5278  003A2E  0012               	return		;funcret
  5279  003A30                     __end_of_ADC_ISR:
  5280                           	callstack 0
  5281                           
  5282 ;; *************** function _adcInterruptHandeler *****************
  5283 ;; Defined at:
  5284 ;;		line 123 in file "application.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;		None
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;		None
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  1    wreg      void 
  5291 ;; Registers used:
  5292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5302 ;;Total ram usage:        0 bytes
  5303 ;; Hardware stack levels used: 1
  5304 ;; Hardware stack levels required when called: 9
  5305 ;; This function calls:
  5306 ;;		_ADC_GetConversionResult
  5307 ;;		___flmul
  5308 ;;		___fltol
  5309 ;;		___xxtofl
  5310 ;;		_convert_uint8_to_string
  5311 ;;		_dc_motor_move_left
  5312 ;;		_dc_motor_move_right
  5313 ;;		_dc_motor_stop
  5314 ;;		i2_lcd_4bit_send_string_pos
  5315 ;; This function is called by:
  5316 ;;		_ADC_ISR
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           	psect	text39
  5321  00277E                     __ptext39:
  5322                           	callstack 0
  5323  00277E                     _adcInterruptHandeler:
  5324                           	callstack 13
  5325  00277E                     
  5326                           ;application.c: 125:     ret = ADC_GetConversionResult(&adc_1, &LM35);
  5327  00277E  0E4B               	movlw	low _adc_1
  5328  002780  6E01               	movwf	ADC_GetConversionResult@_adc^0,c
  5329  002782  0E01               	movlw	high _adc_1
  5330  002784  6E02               	movwf	(ADC_GetConversionResult@_adc+1)^0,c
  5331  002786  0E71               	movlw	low _LM35
  5332  002788  6E03               	movwf	ADC_GetConversionResult@conversion_result^0,c
  5333  00278A  0E00               	movlw	high _LM35
  5334  00278C  6E04               	movwf	(ADC_GetConversionResult@conversion_result+1)^0,c
  5335  00278E  EC0A  F017         	call	_ADC_GetConversionResult	;wreg free
  5336  002792  0100               	movlb	0	; () banked
  5337  002794  6FF1               	movwf	_ret& (0+255),b
  5338  002796                     
  5339                           ; BSR set to: 0
  5340                           ;application.c: 126:     LM35 *= 0.4888f;
  5341  002796  0EFE               	movlw	254
  5342  002798  6E13               	movwf	___flmul@a^0,c
  5343  00279A  0E43               	movlw	67
  5344  00279C  6E14               	movwf	(___flmul@a+1)^0,c
  5345  00279E  0EFA               	movlw	250
  5346  0027A0  6E15               	movwf	(___flmul@a+2)^0,c
  5347  0027A2  0E3E               	movlw	62
  5348  0027A4  6E16               	movwf	(___flmul@a+3)^0,c
  5349  0027A6  C071  F001         	movff	_LM35,___xxtofl@val	;volatile
  5350  0027AA  C072  F002         	movff	_LM35+1,___xxtofl@val+1	;volatile
  5351  0027AE  6A03               	clrf	(___xxtofl@val+2)^0,c
  5352  0027B0  6A04               	clrf	(___xxtofl@val+3)^0,c
  5353  0027B2  0E00               	movlw	0
  5354  0027B4  ECC1  F00E         	call	___xxtofl
  5355  0027B8  C001  F00F         	movff	?___xxtofl,___flmul@b
  5356  0027BC  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  5357  0027C0  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  5358  0027C4  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  5359  0027C8  EC5B  F00A         	call	___flmul	;wreg free
  5360  0027CC  C00F  F028         	movff	?___flmul,___fltol@f1
  5361  0027D0  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  5362  0027D4  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  5363  0027D8  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  5364  0027DC  ECEE  F014         	call	___fltol	;wreg free
  5365  0027E0  C028  F071         	movff	?___fltol,_LM35	;volatile
  5366  0027E4  C029  F072         	movff	?___fltol+1,_LM35+1	;volatile
  5367  0027E8                     
  5368                           ;application.c: 127:     ret = convert_uint8_to_string(LM35, &adcArray);
  5369  0027E8  0E26               	movlw	low _adcArray
  5370  0027EA  6E6D               	movwf	convert_uint8_to_string@str^0,c
  5371  0027EC  0E01               	movlw	high _adcArray
  5372  0027EE  6E6E               	movwf	(convert_uint8_to_string@str+1)^0,c
  5373  0027F0  5071               	movf	_LM35^0,w,c	;volatile
  5374  0027F2  ECD2  F01A         	call	_convert_uint8_to_string
  5375  0027F6  0100               	movlb	0	; () banked
  5376  0027F8  6FF1               	movwf	_ret& (0+255),b
  5377  0027FA                     
  5378                           ; BSR set to: 0
  5379                           ;application.c: 128:     ret = lcd_4bit_send_string_pos(&lcd_1, 2, 18, &adcArray);
  5380  0027FA  0ED3               	movlw	low _lcd_1
  5381  0027FC  6E1A               	movwf	i2lcd_4bit_send_string_pos@lcd^0,c
  5382  0027FE  0E00               	movlw	high _lcd_1
  5383  002800  6E1B               	movwf	(i2lcd_4bit_send_string_pos@lcd+1)^0,c
  5384  002802  0E02               	movlw	2
  5385  002804  6E1C               	movwf	i2lcd_4bit_send_string_pos@row^0,c
  5386  002806  0E12               	movlw	18
  5387  002808  6E1D               	movwf	i2lcd_4bit_send_string_pos@column^0,c
  5388  00280A  0E26               	movlw	low _adcArray
  5389  00280C  6E1E               	movwf	i2lcd_4bit_send_string_pos@str^0,c
  5390  00280E  0E01               	movlw	high _adcArray
  5391  002810  6E1F               	movwf	(i2lcd_4bit_send_string_pos@str+1)^0,c
  5392  002812  EC6E  F018         	call	i2_lcd_4bit_send_string_pos	;wreg free
  5393  002816  0100               	movlb	0	; () banked
  5394  002818  6FF1               	movwf	_ret& (0+255),b
  5395  00281A                     
  5396                           ; BSR set to: 0
  5397                           ;application.c: 129:     if(LM35 < 20)
  5398  00281A  5072               	movf	(_LM35+1)^0,w,c	;volatile
  5399  00281C  E107               	bnz	i2u569_41
  5400  00281E  0E14               	movlw	20
  5401  002820  5C71               	subwf	_LM35^0,w,c	;volatile
  5402  002822  B0D8               	btfsc	status,0,c
  5403  002824  EF16  F014         	goto	i2u569_41
  5404  002828  EF18  F014         	goto	i2u569_40
  5405  00282C                     i2u569_41:
  5406  00282C  EF2A  F014         	goto	i2l7030
  5407  002830                     i2u569_40:
  5408  002830                     
  5409                           ; BSR set to: 0
  5410                           ;application.c: 130:     {;application.c: 131:         ret = dc_motor_move_right(&motor_
      +                          1);
  5411  002830  0EDB               	movlw	low _motor_1
  5412  002832  6E0B               	movwf	dc_motor_move_right@_dc_motor^0,c
  5413  002834  0E00               	movlw	high _motor_1
  5414  002836  6E0C               	movwf	(dc_motor_move_right@_dc_motor+1)^0,c
  5415  002838  EC05  F01C         	call	_dc_motor_move_right	;wreg free
  5416  00283C  0100               	movlb	0	; () banked
  5417  00283E  6FF1               	movwf	_ret& (0+255),b
  5418                           
  5419                           ;application.c: 132:         ret = dc_motor_move_left(&motor_2);
  5420  002840  0ED9               	movlw	low _motor_2
  5421  002842  6E0B               	movwf	dc_motor_move_left@_dc_motor^0,c
  5422  002844  0E00               	movlw	high _motor_2
  5423  002846  6E0C               	movwf	(dc_motor_move_left@_dc_motor+1)^0,c
  5424  002848  EC28  F01C         	call	_dc_motor_move_left	;wreg free
  5425  00284C  0100               	movlb	0	; () banked
  5426  00284E  6FF1               	movwf	_ret& (0+255),b
  5427                           
  5428                           ;application.c: 133:     }
  5429  002850  EF57  F014         	goto	i2l1757
  5430  002854                     i2l7030:
  5431                           
  5432                           ; BSR set to: 0
  5433  002854  5072               	movf	(_LM35+1)^0,w,c	;volatile
  5434  002856  E109               	bnz	i2u570_40
  5435  002858  0E1F               	movlw	31
  5436  00285A  5C71               	subwf	_LM35^0,w,c	;volatile
  5437  00285C  A0D8               	btfss	status,0,c
  5438  00285E  EF33  F014         	goto	i2u570_41
  5439  002862  EF35  F014         	goto	i2u570_40
  5440  002866                     i2u570_41:
  5441  002866  EF47  F014         	goto	i2l7034
  5442  00286A                     i2u570_40:
  5443  00286A                     
  5444                           ; BSR set to: 0
  5445                           ;application.c: 135:     {;application.c: 136:         ret = dc_motor_move_right(&motor_
      +                          2);
  5446  00286A  0ED9               	movlw	low _motor_2
  5447  00286C  6E0B               	movwf	dc_motor_move_right@_dc_motor^0,c
  5448  00286E  0E00               	movlw	high _motor_2
  5449  002870  6E0C               	movwf	(dc_motor_move_right@_dc_motor+1)^0,c
  5450  002872  EC05  F01C         	call	_dc_motor_move_right	;wreg free
  5451  002876  0100               	movlb	0	; () banked
  5452  002878  6FF1               	movwf	_ret& (0+255),b
  5453                           
  5454                           ;application.c: 137:         ret = dc_motor_move_left(&motor_1);
  5455  00287A  0EDB               	movlw	low _motor_1
  5456  00287C  6E0B               	movwf	dc_motor_move_left@_dc_motor^0,c
  5457  00287E  0E00               	movlw	high _motor_1
  5458  002880  6E0C               	movwf	(dc_motor_move_left@_dc_motor+1)^0,c
  5459  002882  EC28  F01C         	call	_dc_motor_move_left	;wreg free
  5460  002886  0100               	movlb	0	; () banked
  5461  002888  6FF1               	movwf	_ret& (0+255),b
  5462                           
  5463                           ;application.c: 138:     }
  5464  00288A  EF57  F014         	goto	i2l1757
  5465  00288E                     i2l7034:
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;application.c: 140:     {;application.c: 141:         ret = dc_motor_stop(&motor_1);
  5469  00288E  0EDB               	movlw	low _motor_1
  5470  002890  6E0B               	movwf	dc_motor_stop@_dc_motor^0,c
  5471  002892  0E00               	movlw	high _motor_1
  5472  002894  6E0C               	movwf	(dc_motor_stop@_dc_motor+1)^0,c
  5473  002896  ECE2  F01B         	call	_dc_motor_stop	;wreg free
  5474  00289A  0100               	movlb	0	; () banked
  5475  00289C  6FF1               	movwf	_ret& (0+255),b
  5476                           
  5477                           ;application.c: 142:         ret = dc_motor_stop(&motor_2);
  5478  00289E  0ED9               	movlw	low _motor_2
  5479  0028A0  6E0B               	movwf	dc_motor_stop@_dc_motor^0,c
  5480  0028A2  0E00               	movlw	high _motor_2
  5481  0028A4  6E0C               	movwf	(dc_motor_stop@_dc_motor+1)^0,c
  5482  0028A6  ECE2  F01B         	call	_dc_motor_stop	;wreg free
  5483  0028AA  0100               	movlb	0	; () banked
  5484  0028AC  6FF1               	movwf	_ret& (0+255),b
  5485  0028AE                     i2l1757:
  5486                           
  5487                           ; BSR set to: 0
  5488  0028AE  0012               	return		;funcret
  5489  0028B0                     __end_of_adcInterruptHandeler:
  5490                           	callstack 0
  5491                           
  5492 ;; *************** function i2_lcd_4bit_send_string_pos *****************
  5493 ;; Defined at:
  5494 ;;		line 163 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;  lcd             2   25[COMRAM] PTR const struct .
  5497 ;;		 -> lcd_1(6), 
  5498 ;;  row             1   27[COMRAM] unsigned char 
  5499 ;;  column          1   28[COMRAM] unsigned char 
  5500 ;;  str             2   29[COMRAM] PTR unsigned char 
  5501 ;;		 -> adcArray(7), STR_5(9), STR_4(18), 
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;  ret             1   31[COMRAM] unsigned char 
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  1    wreg      unsigned char 
  5506 ;; Registers used:
  5507 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5513 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5516 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5517 ;;Total ram usage:        7 bytes
  5518 ;; Hardware stack levels used: 1
  5519 ;; Hardware stack levels required when called: 4
  5520 ;; This function calls:
  5521 ;;		i2_lcd_4bit_send_char_data
  5522 ;;		i2_lcd_4bit_set_cursor
  5523 ;; This function is called by:
  5524 ;;		_adcInterruptHandeler
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           	psect	text40
  5529  0030DC                     __ptext40:
  5530                           	callstack 0
  5531  0030DC                     i2_lcd_4bit_send_string_pos:
  5532                           	callstack 17
  5533  0030DC                     
  5534                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 165:     if(((void*)0) == lcd){
  5535  0030DC  501A               	movf	i2lcd_4bit_send_string_pos@lcd^0,w,c
  5536  0030DE  101B               	iorwf	(i2lcd_4bit_send_string_pos@lcd+1)^0,w,c
  5537  0030E0  A4D8               	btfss	status,2,c
  5538  0030E2  EF75  F018         	goto	i2u554_41
  5539  0030E6  EF77  F018         	goto	i2u554_40
  5540  0030EA                     i2u554_41:
  5541  0030EA  EF7B  F018         	goto	i2l6862
  5542  0030EE                     i2u554_40:
  5543  0030EE                     
  5544                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 166:         ret = (Std_ReturnType)0x00;
  5545  0030EE  0E00               	movlw	0
  5546  0030F0  6E20               	movwf	i2lcd_4bit_send_string_pos@ret^0,c
  5547                           
  5548                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 167:     }
  5549  0030F2  EFBC  F018         	goto	i2l6870
  5550  0030F6                     i2l6862:
  5551                           
  5552                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 169:         ret = lcd_4bit_set_cursor(lcd, row, colum
      +                          n);
  5553  0030F6  C01A  F013         	movff	i2lcd_4bit_send_string_pos@lcd,i2lcd_4bit_set_cursor@lcd
  5554  0030FA  C01B  F014         	movff	i2lcd_4bit_send_string_pos@lcd+1,i2lcd_4bit_set_cursor@lcd+1
  5555  0030FE  C01C  F015         	movff	i2lcd_4bit_send_string_pos@row,i2lcd_4bit_set_cursor@row
  5556  003102  C01D  F016         	movff	i2lcd_4bit_send_string_pos@column,i2lcd_4bit_set_cursor@coulmn
  5557  003106  EC1A  F018         	call	i2_lcd_4bit_set_cursor	;wreg free
  5558  00310A  6E20               	movwf	i2lcd_4bit_send_string_pos@ret^0,c
  5559                           
  5560                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 170:         while(*str){
  5561  00310C  EFA3  F018         	goto	i2l6868
  5562  003110                     i2l6864:
  5563                           
  5564                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 171:             ret = lcd_4bit_send_char_data(lcd, *s
      +                          tr++);
  5565  003110  C01A  F00F         	movff	i2lcd_4bit_send_string_pos@lcd,i2lcd_4bit_send_char_data@lcd
  5566  003114  C01B  F010         	movff	i2lcd_4bit_send_string_pos@lcd+1,i2lcd_4bit_send_char_data@lcd+1
  5567  003118  C01E  FFF6         	movff	i2lcd_4bit_send_string_pos@str,tblptrl
  5568  00311C  C01F  FFF7         	movff	i2lcd_4bit_send_string_pos@str+1,tblptrh
  5569  003120  0E00               	movlw	low (__smallconst shr (0+16))
  5570  003122  6EF8               	movwf	tblptru,c
  5571  003124  0E0F               	movlw	(high __ramtop+-1)
  5572  003126  64F7               	cpfsgt	tblptrh,c
  5573  003128  D003               	bra	i2u555_47
  5574  00312A  0008               	tblrd		*
  5575  00312C  50F5               	movf	tablat,w,c
  5576  00312E  D005               	bra	i2u555_40
  5577  003130                     i2u555_47:
  5578  003130  CFF6 FFE9          	movff	tblptrl,fsr0l
  5579  003134  CFF7 FFEA          	movff	tblptrh,fsr0h
  5580  003138  50EF               	movf	indf0,w,c
  5581  00313A                     i2u555_40:
  5582  00313A  6E11               	movwf	i2lcd_4bit_send_char_data@data^0,c
  5583  00313C  EC00  F01A         	call	i2_lcd_4bit_send_char_data	;wreg free
  5584  003140  6E20               	movwf	i2lcd_4bit_send_string_pos@ret^0,c
  5585  003142  4A1E               	infsnz	i2lcd_4bit_send_string_pos@str^0,f,c
  5586  003144  2A1F               	incf	(i2lcd_4bit_send_string_pos@str+1)^0,f,c
  5587  003146                     i2l6868:
  5588                           
  5589                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 170:         while(*str){
  5590  003146  C01E  FFF6         	movff	i2lcd_4bit_send_string_pos@str,tblptrl
  5591  00314A  C01F  FFF7         	movff	i2lcd_4bit_send_string_pos@str+1,tblptrh
  5592  00314E  0E00               	movlw	low (__smallconst shr (0+16))
  5593  003150  6EF8               	movwf	tblptru,c
  5594  003152  0E0F               	movlw	(high __ramtop+-1)
  5595  003154  64F7               	cpfsgt	tblptrh,c
  5596  003156  D003               	bra	i2u556_47
  5597  003158  0008               	tblrd		*
  5598  00315A  50F5               	movf	tablat,w,c
  5599  00315C  D005               	bra	i2u556_40
  5600  00315E                     i2u556_47:
  5601  00315E  CFF6 FFE9          	movff	tblptrl,fsr0l
  5602  003162  CFF7 FFEA          	movff	tblptrh,fsr0h
  5603  003166  50EF               	movf	indf0,w,c
  5604  003168                     i2u556_40:
  5605  003168  0900               	iorlw	0
  5606  00316A  A4D8               	btfss	status,2,c
  5607  00316C  EFBA  F018         	goto	i2u557_41
  5608  003170  EFBC  F018         	goto	i2u557_40
  5609  003174                     i2u557_41:
  5610  003174  EF88  F018         	goto	i2l6864
  5611  003178                     i2u557_40:
  5612  003178                     i2l6870:
  5613                           
  5614                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 174:     return ret;
  5615  003178  5020               	movf	i2lcd_4bit_send_string_pos@ret^0,w,c
  5616  00317A  0012               	return		;funcret
  5617  00317C                     __end_ofi2_lcd_4bit_send_string_pos:
  5618                           	callstack 0
  5619                           
  5620 ;; *************** function i2_lcd_4bit_set_cursor *****************
  5621 ;; Defined at:
  5622 ;;		line 535 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;  lcd             2   18[COMRAM] PTR const struct .
  5625 ;;		 -> lcd_1(6), 
  5626 ;;  row             1   20[COMRAM] unsigned char 
  5627 ;;  coulmn          1   21[COMRAM] unsigned char 
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;  ret             1   24[COMRAM] unsigned char 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  1    wreg      unsigned char 
  5632 ;; Registers used:
  5633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5639 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;Total ram usage:        7 bytes
  5644 ;; Hardware stack levels used: 1
  5645 ;; Hardware stack levels required when called: 3
  5646 ;; This function calls:
  5647 ;;		i2_lcd_4bit_send_command
  5648 ;; This function is called by:
  5649 ;;		i2_lcd_4bit_send_string_pos
  5650 ;; This function uses a non-reentrant model
  5651 ;;
  5652                           
  5653                           	psect	text41
  5654  003034                     __ptext41:
  5655                           	callstack 0
  5656  003034                     i2_lcd_4bit_set_cursor:
  5657                           	callstack 17
  5658  003034                     
  5659                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 536:     Std_ReturnType ret = (Std_ReturnType)0x01;
  5660  003034  0E01               	movlw	1
  5661  003036  6E19               	movwf	i2lcd_4bit_set_cursor@ret^0,c
  5662  003038                     
  5663                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 537:     coulmn--;
  5664  003038  0616               	decf	i2lcd_4bit_set_cursor@coulmn^0,f,c
  5665                           
  5666                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 538:     switch(row){
  5667  00303A  EF4F  F018         	goto	i2l6456
  5668  00303E                     i2l6448:
  5669  00303E  C013  F00F         	movff	i2lcd_4bit_set_cursor@lcd,i2lcd_4bit_send_command@lcd
  5670  003042  C014  F010         	movff	i2lcd_4bit_set_cursor@lcd+1,i2lcd_4bit_send_command@lcd+1
  5671  003046  5016               	movf	i2lcd_4bit_set_cursor@coulmn^0,w,c
  5672  003048  0F80               	addlw	128
  5673  00304A  6E11               	movwf	i2lcd_4bit_send_command@command^0,c
  5674  00304C  ECC7  F019         	call	i2_lcd_4bit_send_command	;wreg free
  5675  003050  6E19               	movwf	i2lcd_4bit_set_cursor@ret^0,c
  5676  003052  EF6C  F018         	goto	i2l6458
  5677  003056                     i2l6450:
  5678  003056  C013  F00F         	movff	i2lcd_4bit_set_cursor@lcd,i2lcd_4bit_send_command@lcd
  5679  00305A  C014  F010         	movff	i2lcd_4bit_set_cursor@lcd+1,i2lcd_4bit_send_command@lcd+1
  5680  00305E  5016               	movf	i2lcd_4bit_set_cursor@coulmn^0,w,c
  5681  003060  0FC0               	addlw	192
  5682  003062  6E11               	movwf	i2lcd_4bit_send_command@command^0,c
  5683  003064  ECC7  F019         	call	i2_lcd_4bit_send_command	;wreg free
  5684  003068  6E19               	movwf	i2lcd_4bit_set_cursor@ret^0,c
  5685  00306A  EF6C  F018         	goto	i2l6458
  5686  00306E                     i2l6452:
  5687  00306E  C013  F00F         	movff	i2lcd_4bit_set_cursor@lcd,i2lcd_4bit_send_command@lcd
  5688  003072  C014  F010         	movff	i2lcd_4bit_set_cursor@lcd+1,i2lcd_4bit_send_command@lcd+1
  5689  003076  5016               	movf	i2lcd_4bit_set_cursor@coulmn^0,w,c
  5690  003078  0F94               	addlw	148
  5691  00307A  6E11               	movwf	i2lcd_4bit_send_command@command^0,c
  5692  00307C  ECC7  F019         	call	i2_lcd_4bit_send_command	;wreg free
  5693  003080  6E19               	movwf	i2lcd_4bit_set_cursor@ret^0,c
  5694  003082  EF6C  F018         	goto	i2l6458
  5695  003086                     i2l6454:
  5696  003086  C013  F00F         	movff	i2lcd_4bit_set_cursor@lcd,i2lcd_4bit_send_command@lcd
  5697  00308A  C014  F010         	movff	i2lcd_4bit_set_cursor@lcd+1,i2lcd_4bit_send_command@lcd+1
  5698  00308E  5016               	movf	i2lcd_4bit_set_cursor@coulmn^0,w,c
  5699  003090  0FD4               	addlw	212
  5700  003092  6E11               	movwf	i2lcd_4bit_send_command@command^0,c
  5701  003094  ECC7  F019         	call	i2_lcd_4bit_send_command	;wreg free
  5702  003098  6E19               	movwf	i2lcd_4bit_set_cursor@ret^0,c
  5703  00309A  EF6C  F018         	goto	i2l6458
  5704  00309E                     i2l6456:
  5705  00309E  5015               	movf	i2lcd_4bit_set_cursor@row^0,w,c
  5706  0030A0  6E17               	movwf	??i2_lcd_4bit_set_cursor^0,c
  5707  0030A2  6A18               	clrf	(??i2_lcd_4bit_set_cursor+1)^0,c
  5708                           
  5709                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5710                           ; Switch size 1, requested type "simple"
  5711                           ; Number of cases is 1, Range of values is 0 to 0
  5712                           ; switch strategies available:
  5713                           ; Name         Instructions Cycles
  5714                           ; simple_byte            4     3 (average)
  5715                           ;	Chosen strategy is simple_byte
  5716  0030A4  5018               	movf	(??i2_lcd_4bit_set_cursor+1)^0,w,c
  5717  0030A6  0A00               	xorlw	0	; case 0
  5718  0030A8  B4D8               	btfsc	status,2,c
  5719  0030AA  EF59  F018         	goto	i2l10034
  5720  0030AE  EF6C  F018         	goto	i2l6458
  5721  0030B2                     i2l10034:
  5722                           
  5723                           ; Switch size 1, requested type "simple"
  5724                           ; Number of cases is 4, Range of values is 1 to 4
  5725                           ; switch strategies available:
  5726                           ; Name         Instructions Cycles
  5727                           ; simple_byte           13     7 (average)
  5728                           ;	Chosen strategy is simple_byte
  5729  0030B2  5017               	movf	??i2_lcd_4bit_set_cursor^0,w,c
  5730  0030B4  0A01               	xorlw	1	; case 1
  5731  0030B6  B4D8               	btfsc	status,2,c
  5732  0030B8  EF1F  F018         	goto	i2l6448
  5733  0030BC  0A03               	xorlw	3	; case 2
  5734  0030BE  B4D8               	btfsc	status,2,c
  5735  0030C0  EF2B  F018         	goto	i2l6450
  5736  0030C4  0A01               	xorlw	1	; case 3
  5737  0030C6  B4D8               	btfsc	status,2,c
  5738  0030C8  EF37  F018         	goto	i2l6452
  5739  0030CC  0A07               	xorlw	7	; case 4
  5740  0030CE  B4D8               	btfsc	status,2,c
  5741  0030D0  EF43  F018         	goto	i2l6454
  5742  0030D4  EF6C  F018         	goto	i2l6458
  5743  0030D8                     i2l6458:
  5744                           
  5745                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 545:     return ret;
  5746  0030D8  5019               	movf	i2lcd_4bit_set_cursor@ret^0,w,c
  5747  0030DA  0012               	return		;funcret
  5748  0030DC                     __end_ofi2_lcd_4bit_set_cursor:
  5749                           	callstack 0
  5750                           
  5751 ;; *************** function i2_lcd_4bit_send_command *****************
  5752 ;; Defined at:
  5753 ;;		line 60 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;  lcd             2   14[COMRAM] PTR const struct .
  5756 ;;		 -> lcd_1(6), 
  5757 ;;  command         1   16[COMRAM] unsigned char 
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;  ret             1   17[COMRAM] unsigned char 
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  1    wreg      unsigned char 
  5762 ;; Registers used:
  5763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5769 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5770 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5772 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5773 ;;Total ram usage:        4 bytes
  5774 ;; Hardware stack levels used: 1
  5775 ;; Hardware stack levels required when called: 2
  5776 ;; This function calls:
  5777 ;;		i2_gpio_pin_write_logic
  5778 ;;		i2_lcd_4bit_send_enable_signal
  5779 ;;		i2_lcd_send_4bits
  5780 ;; This function is called by:
  5781 ;;		i2_lcd_4bit_set_cursor
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           	psect	text42
  5786  00338E                     __ptext42:
  5787                           	callstack 0
  5788  00338E                     i2_lcd_4bit_send_command:
  5789                           	callstack 17
  5790  00338E                     
  5791                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 62:     if(((void*)0) == lcd){
  5792  00338E  500F               	movf	i2lcd_4bit_send_command@lcd^0,w,c
  5793  003390  1010               	iorwf	(i2lcd_4bit_send_command@lcd+1)^0,w,c
  5794  003392  A4D8               	btfss	status,2,c
  5795  003394  EFCE  F019         	goto	i2u488_41
  5796  003398  EFD0  F019         	goto	i2u488_40
  5797  00339C                     i2u488_41:
  5798  00339C  EFD4  F019         	goto	i2l6346
  5799  0033A0                     i2u488_40:
  5800  0033A0                     
  5801                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 63:         ret = (Std_ReturnType)0x00;
  5802  0033A0  0E00               	movlw	0
  5803  0033A2  6E12               	movwf	i2lcd_4bit_send_command@ret^0,c
  5804                           
  5805                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 64:     }
  5806  0033A4  EFFE  F019         	goto	i2l6348
  5807  0033A8                     i2l6346:
  5808                           
  5809                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 68:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_LOW);
  5810  0033A8  C00F  F001         	movff	i2lcd_4bit_send_command@lcd,i2gpio_pin_write_logic@_pin_config
  5811  0033AC  C010  F002         	movff	i2lcd_4bit_send_command@lcd+1,i2gpio_pin_write_logic@_pin_config+1
  5812  0033B0  0E00               	movlw	0
  5813  0033B2  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  5814  0033B4  EC58  F014         	call	i2_gpio_pin_write_logic	;wreg free
  5815  0033B8  6E12               	movwf	i2lcd_4bit_send_command@ret^0,c
  5816                           
  5817                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 70:         ret = lcd_send_4bits(lcd, command >> 4);
  5818  0033BA  C00F  F00B         	movff	i2lcd_4bit_send_command@lcd,i2lcd_send_4bits@lcd
  5819  0033BE  C010  F00C         	movff	i2lcd_4bit_send_command@lcd+1,i2lcd_send_4bits@lcd+1
  5820  0033C2  3811               	swapf	i2lcd_4bit_send_command@command^0,w,c
  5821  0033C4  0B0F               	andlw	15
  5822  0033C6  6E0D               	movwf	i2lcd_send_4bits@_data_command^0,c
  5823  0033C8  EC39  F01A         	call	i2_lcd_send_4bits	;wreg free
  5824  0033CC  6E12               	movwf	i2lcd_4bit_send_command@ret^0,c
  5825                           
  5826                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 72:         ret = lcd_4bit_send_enable_signal(lcd);
  5827  0033CE  C00F  F00B         	movff	i2lcd_4bit_send_command@lcd,i2lcd_4bit_send_enable_signal@lcd
  5828  0033D2  C010  F00C         	movff	i2lcd_4bit_send_command@lcd+1,i2lcd_4bit_send_enable_signal@lcd+1
  5829  0033D6  ECE6  F01C         	call	i2_lcd_4bit_send_enable_signal	;wreg free
  5830  0033DA  6E12               	movwf	i2lcd_4bit_send_command@ret^0,c
  5831                           
  5832                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 74:         ret = lcd_send_4bits(lcd, command);
  5833  0033DC  C00F  F00B         	movff	i2lcd_4bit_send_command@lcd,i2lcd_send_4bits@lcd
  5834  0033E0  C010  F00C         	movff	i2lcd_4bit_send_command@lcd+1,i2lcd_send_4bits@lcd+1
  5835  0033E4  C011  F00D         	movff	i2lcd_4bit_send_command@command,i2lcd_send_4bits@_data_command
  5836  0033E8  EC39  F01A         	call	i2_lcd_send_4bits	;wreg free
  5837  0033EC  6E12               	movwf	i2lcd_4bit_send_command@ret^0,c
  5838                           
  5839                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 76:         ret = lcd_4bit_send_enable_signal(lcd);
  5840  0033EE  C00F  F00B         	movff	i2lcd_4bit_send_command@lcd,i2lcd_4bit_send_enable_signal@lcd
  5841  0033F2  C010  F00C         	movff	i2lcd_4bit_send_command@lcd+1,i2lcd_4bit_send_enable_signal@lcd+1
  5842  0033F6  ECE6  F01C         	call	i2_lcd_4bit_send_enable_signal	;wreg free
  5843  0033FA  6E12               	movwf	i2lcd_4bit_send_command@ret^0,c
  5844  0033FC                     i2l6348:
  5845                           
  5846                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 78:     return ret;
  5847  0033FC  5012               	movf	i2lcd_4bit_send_command@ret^0,w,c
  5848  0033FE  0012               	return		;funcret
  5849  003400                     __end_ofi2_lcd_4bit_send_command:
  5850                           	callstack 0
  5851                           
  5852 ;; *************** function i2_lcd_4bit_send_char_data *****************
  5853 ;; Defined at:
  5854 ;;		line 89 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;  lcd             2   14[COMRAM] PTR const struct .
  5857 ;;		 -> lcd_1(6), 
  5858 ;;  data            1   16[COMRAM] unsigned char 
  5859 ;; Auto vars:     Size  Location     Type
  5860 ;;  ret             1   17[COMRAM] unsigned char 
  5861 ;; Return value:  Size  Location     Type
  5862 ;;                  1    wreg      unsigned char 
  5863 ;; Registers used:
  5864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5865 ;; Tracked objects:
  5866 ;;		On entry : 0/0
  5867 ;;		On exit  : 0/0
  5868 ;;		Unchanged: 0/0
  5869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5870 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5873 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5874 ;;Total ram usage:        4 bytes
  5875 ;; Hardware stack levels used: 1
  5876 ;; Hardware stack levels required when called: 2
  5877 ;; This function calls:
  5878 ;;		i2_gpio_pin_write_logic
  5879 ;;		i2_lcd_4bit_send_enable_signal
  5880 ;;		i2_lcd_send_4bits
  5881 ;; This function is called by:
  5882 ;;		i2_lcd_4bit_send_string_pos
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           	psect	text43
  5887  003400                     __ptext43:
  5888                           	callstack 0
  5889  003400                     i2_lcd_4bit_send_char_data:
  5890                           	callstack 18
  5891  003400                     
  5892                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 91:     if(((void*)0) == lcd){
  5893  003400  500F               	movf	i2lcd_4bit_send_char_data@lcd^0,w,c
  5894  003402  1010               	iorwf	(i2lcd_4bit_send_char_data@lcd+1)^0,w,c
  5895  003404  A4D8               	btfss	status,2,c
  5896  003406  EF07  F01A         	goto	i2u501_41
  5897  00340A  EF09  F01A         	goto	i2u501_40
  5898  00340E                     i2u501_41:
  5899  00340E  EF0D  F01A         	goto	i2l6438
  5900  003412                     i2u501_40:
  5901  003412                     
  5902                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 92:         ret = (Std_ReturnType)0x00;
  5903  003412  0E00               	movlw	0
  5904  003414  6E12               	movwf	i2lcd_4bit_send_char_data@ret^0,c
  5905                           
  5906                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 93:     }
  5907  003416  EF37  F01A         	goto	i2l6440
  5908  00341A                     i2l6438:
  5909                           
  5910                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 97:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_HIGH);
  5911  00341A  C00F  F001         	movff	i2lcd_4bit_send_char_data@lcd,i2gpio_pin_write_logic@_pin_config
  5912  00341E  C010  F002         	movff	i2lcd_4bit_send_char_data@lcd+1,i2gpio_pin_write_logic@_pin_config+1
  5913  003422  0E01               	movlw	1
  5914  003424  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  5915  003426  EC58  F014         	call	i2_gpio_pin_write_logic	;wreg free
  5916  00342A  6E12               	movwf	i2lcd_4bit_send_char_data@ret^0,c
  5917                           
  5918                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 99:         ret = lcd_send_4bits(lcd, data >> 4);
  5919  00342C  C00F  F00B         	movff	i2lcd_4bit_send_char_data@lcd,i2lcd_send_4bits@lcd
  5920  003430  C010  F00C         	movff	i2lcd_4bit_send_char_data@lcd+1,i2lcd_send_4bits@lcd+1
  5921  003434  3811               	swapf	i2lcd_4bit_send_char_data@data^0,w,c
  5922  003436  0B0F               	andlw	15
  5923  003438  6E0D               	movwf	i2lcd_send_4bits@_data_command^0,c
  5924  00343A  EC39  F01A         	call	i2_lcd_send_4bits	;wreg free
  5925  00343E  6E12               	movwf	i2lcd_4bit_send_char_data@ret^0,c
  5926                           
  5927                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 101:         ret = lcd_4bit_send_enable_signal(lcd);
  5928  003440  C00F  F00B         	movff	i2lcd_4bit_send_char_data@lcd,i2lcd_4bit_send_enable_signal@lcd
  5929  003444  C010  F00C         	movff	i2lcd_4bit_send_char_data@lcd+1,i2lcd_4bit_send_enable_signal@lcd+1
  5930  003448  ECE6  F01C         	call	i2_lcd_4bit_send_enable_signal	;wreg free
  5931  00344C  6E12               	movwf	i2lcd_4bit_send_char_data@ret^0,c
  5932                           
  5933                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 103:         ret = lcd_send_4bits(lcd, data);
  5934  00344E  C00F  F00B         	movff	i2lcd_4bit_send_char_data@lcd,i2lcd_send_4bits@lcd
  5935  003452  C010  F00C         	movff	i2lcd_4bit_send_char_data@lcd+1,i2lcd_send_4bits@lcd+1
  5936  003456  C011  F00D         	movff	i2lcd_4bit_send_char_data@data,i2lcd_send_4bits@_data_command
  5937  00345A  EC39  F01A         	call	i2_lcd_send_4bits	;wreg free
  5938  00345E  6E12               	movwf	i2lcd_4bit_send_char_data@ret^0,c
  5939                           
  5940                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 105:         ret = lcd_4bit_send_enable_signal(lcd);
  5941  003460  C00F  F00B         	movff	i2lcd_4bit_send_char_data@lcd,i2lcd_4bit_send_enable_signal@lcd
  5942  003464  C010  F00C         	movff	i2lcd_4bit_send_char_data@lcd+1,i2lcd_4bit_send_enable_signal@lcd+1
  5943  003468  ECE6  F01C         	call	i2_lcd_4bit_send_enable_signal	;wreg free
  5944  00346C  6E12               	movwf	i2lcd_4bit_send_char_data@ret^0,c
  5945  00346E                     i2l6440:
  5946                           
  5947                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 107:     return ret;
  5948  00346E  5012               	movf	i2lcd_4bit_send_char_data@ret^0,w,c
  5949  003470  0012               	return		;funcret
  5950  003472                     __end_ofi2_lcd_4bit_send_char_data:
  5951                           	callstack 0
  5952                           
  5953 ;; *************** function i2_lcd_send_4bits *****************
  5954 ;; Defined at:
  5955 ;;		line 465 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;  lcd             2   10[COMRAM] PTR const struct .
  5958 ;;		 -> lcd_1(6), 
  5959 ;;  _data_comman    1   12[COMRAM] unsigned char 
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;  ret             1   13[COMRAM] unsigned char 
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  1    wreg      unsigned char 
  5964 ;; Registers used:
  5965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 0/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5971 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5972 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5974 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5975 ;;Total ram usage:        4 bytes
  5976 ;; Hardware stack levels used: 1
  5977 ;; Hardware stack levels required when called: 1
  5978 ;; This function calls:
  5979 ;;		i2_gpio_pin_write_logic
  5980 ;; This function is called by:
  5981 ;;		i2_lcd_4bit_send_command
  5982 ;;		i2_lcd_4bit_send_char_data
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986                           	psect	text44
  5987  003472                     __ptext44:
  5988                           	callstack 0
  5989  003472                     i2_lcd_send_4bits:
  5990                           	callstack 17
  5991  003472  0E02               	movlw	2
  5992  003474  240B               	addwf	i2lcd_send_4bits@lcd^0,w,c
  5993  003476  6E01               	movwf	i2gpio_pin_write_logic@_pin_config^0,c
  5994  003478  0E00               	movlw	0
  5995  00347A  200C               	addwfc	(i2lcd_send_4bits@lcd+1)^0,w,c
  5996  00347C  6E02               	movwf	(i2gpio_pin_write_logic@_pin_config+1)^0,c
  5997  00347E  500D               	movf	i2lcd_send_4bits@_data_command^0,w,c
  5998  003480  0B01               	andlw	1
  5999  003482  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  6000  003484  EC58  F014         	call	i2_gpio_pin_write_logic	;wreg free
  6001  003488  0E03               	movlw	3
  6002  00348A  240B               	addwf	i2lcd_send_4bits@lcd^0,w,c
  6003  00348C  6E01               	movwf	i2gpio_pin_write_logic@_pin_config^0,c
  6004  00348E  0E00               	movlw	0
  6005  003490  200C               	addwfc	(i2lcd_send_4bits@lcd+1)^0,w,c
  6006  003492  6E02               	movwf	(i2gpio_pin_write_logic@_pin_config+1)^0,c
  6007  003494  90D8               	bcf	status,0,c
  6008  003496  300D               	rrcf	i2lcd_send_4bits@_data_command^0,w,c
  6009  003498  0B01               	andlw	1
  6010  00349A  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  6011  00349C  EC58  F014         	call	i2_gpio_pin_write_logic	;wreg free
  6012  0034A0  0E04               	movlw	4
  6013  0034A2  240B               	addwf	i2lcd_send_4bits@lcd^0,w,c
  6014  0034A4  6E01               	movwf	i2gpio_pin_write_logic@_pin_config^0,c
  6015  0034A6  0E00               	movlw	0
  6016  0034A8  200C               	addwfc	(i2lcd_send_4bits@lcd+1)^0,w,c
  6017  0034AA  6E02               	movwf	(i2gpio_pin_write_logic@_pin_config+1)^0,c
  6018  0034AC  400D               	rrncf	i2lcd_send_4bits@_data_command^0,w,c
  6019  0034AE  42E8               	rrncf	wreg,f,c
  6020  0034B0  0B3F               	andlw	63
  6021  0034B2  0B01               	andlw	1
  6022  0034B4  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  6023  0034B6  EC58  F014         	call	i2_gpio_pin_write_logic	;wreg free
  6024  0034BA                     
  6025                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 470:     ret = gpio_pin_write_logic(&(lcd->lcd_data[3]
      +                          ), (_data_command >> 3) & (uint8)0x01);
  6026  0034BA  0E05               	movlw	5
  6027  0034BC  240B               	addwf	i2lcd_send_4bits@lcd^0,w,c
  6028  0034BE  6E01               	movwf	i2gpio_pin_write_logic@_pin_config^0,c
  6029  0034C0  0E00               	movlw	0
  6030  0034C2  200C               	addwfc	(i2lcd_send_4bits@lcd+1)^0,w,c
  6031  0034C4  6E02               	movwf	(i2gpio_pin_write_logic@_pin_config+1)^0,c
  6032  0034C6  380D               	swapf	i2lcd_send_4bits@_data_command^0,w,c
  6033  0034C8  46E8               	rlncf	wreg,f,c
  6034  0034CA  0B1F               	andlw	31
  6035  0034CC  0B01               	andlw	1
  6036  0034CE  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  6037  0034D0  EC58  F014         	call	i2_gpio_pin_write_logic	;wreg free
  6038  0034D4  6E0E               	movwf	i2lcd_send_4bits@ret^0,c
  6039                           
  6040                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 471:     return ret;
  6041  0034D6  500E               	movf	i2lcd_send_4bits@ret^0,w,c
  6042  0034D8  0012               	return		;funcret
  6043  0034DA                     __end_ofi2_lcd_send_4bits:
  6044                           	callstack 0
  6045                           
  6046 ;; *************** function i2_lcd_4bit_send_enable_signal *****************
  6047 ;; Defined at:
  6048 ;;		line 481 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  lcd             2   10[COMRAM] PTR const struct .
  6051 ;;		 -> lcd_1(6), 
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;  ret             1   12[COMRAM] unsigned char 
  6054 ;; Return value:  Size  Location     Type
  6055 ;;                  1    wreg      unsigned char 
  6056 ;; Registers used:
  6057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6058 ;; Tracked objects:
  6059 ;;		On entry : 0/0
  6060 ;;		On exit  : 0/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6063 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6066 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6067 ;;Total ram usage:        3 bytes
  6068 ;; Hardware stack levels used: 1
  6069 ;; Hardware stack levels required when called: 1
  6070 ;; This function calls:
  6071 ;;		i2_gpio_pin_write_logic
  6072 ;; This function is called by:
  6073 ;;		i2_lcd_4bit_send_command
  6074 ;;		i2_lcd_4bit_send_char_data
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           
  6078                           	psect	text45
  6079  0039CC                     __ptext45:
  6080                           	callstack 0
  6081  0039CC                     i2_lcd_4bit_send_enable_signal:
  6082                           	callstack 17
  6083  0039CC  0E01               	movlw	1
  6084  0039CE  240B               	addwf	i2lcd_4bit_send_enable_signal@lcd^0,w,c
  6085  0039D0  6E01               	movwf	i2gpio_pin_write_logic@_pin_config^0,c
  6086  0039D2  0E00               	movlw	0
  6087  0039D4  200C               	addwfc	(i2lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  6088  0039D6  6E02               	movwf	(i2gpio_pin_write_logic@_pin_config+1)^0,c
  6089  0039D8  0E01               	movlw	1
  6090  0039DA  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  6091  0039DC  EC58  F014         	call	i2_gpio_pin_write_logic	;wreg free
  6092  0039E0                     
  6093                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 484:     _delay((unsigned long)((5)*(4000000UL/4000000
      +                          .0)));
  6094  0039E0  D000               	nop2		;2 cycle nop
  6095  0039E2  D000               	nop2		;2 cycle nop
  6096  0039E4  F000               	nop	
  6097  0039E6                     
  6098                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 485:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GP
      +                          IO_LOW);
  6099  0039E6  0E01               	movlw	1
  6100  0039E8  240B               	addwf	i2lcd_4bit_send_enable_signal@lcd^0,w,c
  6101  0039EA  6E01               	movwf	i2gpio_pin_write_logic@_pin_config^0,c
  6102  0039EC  0E00               	movlw	0
  6103  0039EE  200C               	addwfc	(i2lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  6104  0039F0  6E02               	movwf	(i2gpio_pin_write_logic@_pin_config+1)^0,c
  6105  0039F2  0E00               	movlw	0
  6106  0039F4  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  6107  0039F6  EC58  F014         	call	i2_gpio_pin_write_logic	;wreg free
  6108  0039FA  6E0D               	movwf	i2lcd_4bit_send_enable_signal@ret^0,c
  6109                           
  6110                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 486:     return ret;
  6111  0039FC  500D               	movf	i2lcd_4bit_send_enable_signal@ret^0,w,c
  6112  0039FE  0012               	return		;funcret
  6113  003A00                     __end_ofi2_lcd_4bit_send_enable_signal:
  6114                           	callstack 0
  6115                           
  6116 ;; *************** function _dc_motor_stop *****************
  6117 ;; Defined at:
  6118 ;;		line 74 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;  _dc_motor       2   10[COMRAM] PTR const struct .
  6121 ;;		 -> motor_2(2), motor_1(2), 
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;  ret             1   12[COMRAM] unsigned char 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  1    wreg      unsigned char 
  6126 ;; Registers used:
  6127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6137 ;;Total ram usage:        3 bytes
  6138 ;; Hardware stack levels used: 1
  6139 ;; Hardware stack levels required when called: 1
  6140 ;; This function calls:
  6141 ;;		i2_gpio_pin_write_logic
  6142 ;; This function is called by:
  6143 ;;		_adcInterruptHandeler
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text46
  6148  0037C4                     __ptext46:
  6149                           	callstack 0
  6150  0037C4                     _dc_motor_stop:
  6151                           	callstack 20
  6152  0037C4                     
  6153                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 75:     Std_ReturnType ret = (Std_ReturnType)0x01;
  6154  0037C4  0E01               	movlw	1
  6155  0037C6  6E0D               	movwf	dc_motor_stop@ret^0,c
  6156  0037C8                     
  6157                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 76:     if(((void*)0) == _dc_motor){
  6158  0037C8  500B               	movf	dc_motor_stop@_dc_motor^0,w,c
  6159  0037CA  100C               	iorwf	(dc_motor_stop@_dc_motor+1)^0,w,c
  6160  0037CC  A4D8               	btfss	status,2,c
  6161  0037CE  EFEB  F01B         	goto	i2u508_41
  6162  0037D2  EFED  F01B         	goto	i2u508_40
  6163  0037D6                     i2u508_41:
  6164  0037D6  EFF1  F01B         	goto	i2l6558
  6165  0037DA                     i2u508_40:
  6166  0037DA                     
  6167                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 77:         ret = (Std_ReturnType)0x00;
  6168  0037DA  0E00               	movlw	0
  6169  0037DC  6E0D               	movwf	dc_motor_stop@ret^0,c
  6170                           
  6171                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 78:     }
  6172  0037DE  EF03  F01C         	goto	i2l6560
  6173  0037E2                     i2l6558:
  6174                           
  6175                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 80:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x00U]), GPIO_LOW);
  6176  0037E2  C00B  F001         	movff	dc_motor_stop@_dc_motor,i2gpio_pin_write_logic@_pin_config
  6177  0037E6  C00C  F002         	movff	dc_motor_stop@_dc_motor+1,i2gpio_pin_write_logic@_pin_config+1
  6178  0037EA  0E00               	movlw	0
  6179  0037EC  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  6180  0037EE  EC58  F014         	call	i2_gpio_pin_write_logic	;wreg free
  6181                           
  6182                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 81:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x01U]), GPIO_LOW);
  6183  0037F2  0E01               	movlw	1
  6184  0037F4  240B               	addwf	dc_motor_stop@_dc_motor^0,w,c
  6185  0037F6  6E01               	movwf	i2gpio_pin_write_logic@_pin_config^0,c
  6186  0037F8  0E00               	movlw	0
  6187  0037FA  200C               	addwfc	(dc_motor_stop@_dc_motor+1)^0,w,c
  6188  0037FC  6E02               	movwf	(i2gpio_pin_write_logic@_pin_config+1)^0,c
  6189  0037FE  0E00               	movlw	0
  6190  003800  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  6191  003802  EC58  F014         	call	i2_gpio_pin_write_logic	;wreg free
  6192  003806                     i2l6560:
  6193                           
  6194                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 83:     return ret;
  6195  003806  500D               	movf	dc_motor_stop@ret^0,w,c
  6196  003808  0012               	return		;funcret
  6197  00380A                     __end_of_dc_motor_stop:
  6198                           	callstack 0
  6199                           
  6200 ;; *************** function _dc_motor_move_right *****************
  6201 ;; Defined at:
  6202 ;;		line 36 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  6203 ;; Parameters:    Size  Location     Type
  6204 ;;  _dc_motor       2   10[COMRAM] PTR const struct .
  6205 ;;		 -> motor_2(2), motor_1(2), 
  6206 ;; Auto vars:     Size  Location     Type
  6207 ;;  ret             1   12[COMRAM] unsigned char 
  6208 ;; Return value:  Size  Location     Type
  6209 ;;                  1    wreg      unsigned char 
  6210 ;; Registers used:
  6211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6212 ;; Tracked objects:
  6213 ;;		On entry : 0/0
  6214 ;;		On exit  : 0/0
  6215 ;;		Unchanged: 0/0
  6216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6217 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6220 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6221 ;;Total ram usage:        3 bytes
  6222 ;; Hardware stack levels used: 1
  6223 ;; Hardware stack levels required when called: 1
  6224 ;; This function calls:
  6225 ;;		i2_gpio_pin_write_logic
  6226 ;; This function is called by:
  6227 ;;		_adcInterruptHandeler
  6228 ;; This function uses a non-reentrant model
  6229 ;;
  6230                           
  6231                           	psect	text47
  6232  00380A                     __ptext47:
  6233                           	callstack 0
  6234  00380A                     _dc_motor_move_right:
  6235                           	callstack 20
  6236  00380A                     
  6237                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 37:     Std_ReturnType ret = (Std_ReturnType)0x01;
  6238  00380A  0E01               	movlw	1
  6239  00380C  6E0D               	movwf	dc_motor_move_right@ret^0,c
  6240  00380E                     
  6241                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 38:     if(((void*)0) == _dc_motor){
  6242  00380E  500B               	movf	dc_motor_move_right@_dc_motor^0,w,c
  6243  003810  100C               	iorwf	(dc_motor_move_right@_dc_motor+1)^0,w,c
  6244  003812  A4D8               	btfss	status,2,c
  6245  003814  EF0E  F01C         	goto	i2u506_41
  6246  003818  EF10  F01C         	goto	i2u506_40
  6247  00381C                     i2u506_41:
  6248  00381C  EF14  F01C         	goto	i2l6534
  6249  003820                     i2u506_40:
  6250  003820                     
  6251                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 39:         ret = (Std_ReturnType)0x00;
  6252  003820  0E00               	movlw	0
  6253  003822  6E0D               	movwf	dc_motor_move_right@ret^0,c
  6254                           
  6255                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 40:     }
  6256  003824  EF26  F01C         	goto	i2l6536
  6257  003828                     i2l6534:
  6258                           
  6259                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 42:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x00U]), GPIO_HIGH);
  6260  003828  C00B  F001         	movff	dc_motor_move_right@_dc_motor,i2gpio_pin_write_logic@_pin_config
  6261  00382C  C00C  F002         	movff	dc_motor_move_right@_dc_motor+1,i2gpio_pin_write_logic@_pin_config+1
  6262  003830  0E01               	movlw	1
  6263  003832  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  6264  003834  EC58  F014         	call	i2_gpio_pin_write_logic	;wreg free
  6265                           
  6266                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 43:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x01U]), GPIO_LOW);
  6267  003838  0E01               	movlw	1
  6268  00383A  240B               	addwf	dc_motor_move_right@_dc_motor^0,w,c
  6269  00383C  6E01               	movwf	i2gpio_pin_write_logic@_pin_config^0,c
  6270  00383E  0E00               	movlw	0
  6271  003840  200C               	addwfc	(dc_motor_move_right@_dc_motor+1)^0,w,c
  6272  003842  6E02               	movwf	(i2gpio_pin_write_logic@_pin_config+1)^0,c
  6273  003844  0E00               	movlw	0
  6274  003846  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  6275  003848  EC58  F014         	call	i2_gpio_pin_write_logic	;wreg free
  6276  00384C                     i2l6536:
  6277                           
  6278                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 45:     return ret;
  6279  00384C  500D               	movf	dc_motor_move_right@ret^0,w,c
  6280  00384E  0012               	return		;funcret
  6281  003850                     __end_of_dc_motor_move_right:
  6282                           	callstack 0
  6283                           
  6284 ;; *************** function _dc_motor_move_left *****************
  6285 ;; Defined at:
  6286 ;;		line 55 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;  _dc_motor       2   10[COMRAM] PTR const struct .
  6289 ;;		 -> motor_2(2), motor_1(2), 
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;  ret             1   12[COMRAM] unsigned char 
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  1    wreg      unsigned char 
  6294 ;; Registers used:
  6295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6301 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6302 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6304 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6305 ;;Total ram usage:        3 bytes
  6306 ;; Hardware stack levels used: 1
  6307 ;; Hardware stack levels required when called: 1
  6308 ;; This function calls:
  6309 ;;		i2_gpio_pin_write_logic
  6310 ;; This function is called by:
  6311 ;;		_adcInterruptHandeler
  6312 ;; This function uses a non-reentrant model
  6313 ;;
  6314                           
  6315                           	psect	text48
  6316  003850                     __ptext48:
  6317                           	callstack 0
  6318  003850                     _dc_motor_move_left:
  6319                           	callstack 20
  6320  003850                     
  6321                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 56:     Std_ReturnType ret = (Std_ReturnType)0x01;
  6322  003850  0E01               	movlw	1
  6323  003852  6E0D               	movwf	dc_motor_move_left@ret^0,c
  6324  003854                     
  6325                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 57:     if(((void*)0) == _dc_motor){
  6326  003854  500B               	movf	dc_motor_move_left@_dc_motor^0,w,c
  6327  003856  100C               	iorwf	(dc_motor_move_left@_dc_motor+1)^0,w,c
  6328  003858  A4D8               	btfss	status,2,c
  6329  00385A  EF31  F01C         	goto	i2u507_41
  6330  00385E  EF33  F01C         	goto	i2u507_40
  6331  003862                     i2u507_41:
  6332  003862  EF37  F01C         	goto	i2l6546
  6333  003866                     i2u507_40:
  6334  003866                     
  6335                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 58:         ret = (Std_ReturnType)0x00;
  6336  003866  0E00               	movlw	0
  6337  003868  6E0D               	movwf	dc_motor_move_left@ret^0,c
  6338                           
  6339                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 59:     }
  6340  00386A  EF49  F01C         	goto	i2l6548
  6341  00386E                     i2l6546:
  6342                           
  6343                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 61:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x00U]), GPIO_LOW);
  6344  00386E  C00B  F001         	movff	dc_motor_move_left@_dc_motor,i2gpio_pin_write_logic@_pin_config
  6345  003872  C00C  F002         	movff	dc_motor_move_left@_dc_motor+1,i2gpio_pin_write_logic@_pin_config+1
  6346  003876  0E00               	movlw	0
  6347  003878  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  6348  00387A  EC58  F014         	call	i2_gpio_pin_write_logic	;wreg free
  6349                           
  6350                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 62:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x01U]), GPIO_HIGH);
  6351  00387E  0E01               	movlw	1
  6352  003880  240B               	addwf	dc_motor_move_left@_dc_motor^0,w,c
  6353  003882  6E01               	movwf	i2gpio_pin_write_logic@_pin_config^0,c
  6354  003884  0E00               	movlw	0
  6355  003886  200C               	addwfc	(dc_motor_move_left@_dc_motor+1)^0,w,c
  6356  003888  6E02               	movwf	(i2gpio_pin_write_logic@_pin_config+1)^0,c
  6357  00388A  0E01               	movlw	1
  6358  00388C  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  6359  00388E  EC58  F014         	call	i2_gpio_pin_write_logic	;wreg free
  6360  003892                     i2l6548:
  6361                           
  6362                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 64:     return ret;
  6363  003892  500D               	movf	dc_motor_move_left@ret^0,w,c
  6364  003894  0012               	return		;funcret
  6365  003896                     __end_of_dc_motor_move_left:
  6366                           	callstack 0
  6367                           
  6368 ;; *************** function i2_gpio_pin_write_logic *****************
  6369 ;; Defined at:
  6370 ;;		line 75 in file "MCAL_Layer/GPIO/hal_gpio.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  6373 ;;		 -> motor_2.dc_motor_pin(2), motor_2(2), motor_1.dc_motor_pin(2), motor_1(2), 
  6374 ;;		 -> lcd_1.lcd_data(4), lcd_1(6), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
  6375 ;;		 -> relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  6376 ;;  logic           1    2[COMRAM] enum E2933
  6377 ;; Auto vars:     Size  Location     Type
  6378 ;;  ret             1    9[COMRAM] unsigned char 
  6379 ;; Return value:  Size  Location     Type
  6380 ;;                  1    wreg      unsigned char 
  6381 ;; Registers used:
  6382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6383 ;; Tracked objects:
  6384 ;;		On entry : 0/0
  6385 ;;		On exit  : 0/0
  6386 ;;		Unchanged: 0/0
  6387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6388 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6390 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6391 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6392 ;;Total ram usage:       10 bytes
  6393 ;; Hardware stack levels used: 1
  6394 ;; This function calls:
  6395 ;;		Nothing
  6396 ;; This function is called by:
  6397 ;;		_dc_motor_move_right
  6398 ;;		_dc_motor_move_left
  6399 ;;		_dc_motor_stop
  6400 ;;		i2_lcd_4bit_send_command
  6401 ;;		i2_lcd_4bit_send_char_data
  6402 ;;		i2_lcd_send_4bits
  6403 ;;		i2_lcd_4bit_send_enable_signal
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407                           	psect	text49
  6408  0028B0                     __ptext49:
  6409                           	callstack 0
  6410  0028B0                     i2_gpio_pin_write_logic:
  6411                           	callstack 17
  6412  0028B0                     
  6413                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:     Std_ReturnType ret = (Std_ReturnType)0x01;
  6414  0028B0  0E01               	movlw	1
  6415  0028B2  6E0A               	movwf	i2gpio_pin_write_logic@ret^0,c
  6416  0028B4                     
  6417                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  6418  0028B4  5001               	movf	i2gpio_pin_write_logic@_pin_config^0,w,c
  6419  0028B6  1002               	iorwf	(i2gpio_pin_write_logic@_pin_config+1)^0,w,c
  6420  0028B8  B4D8               	btfsc	status,2,c
  6421  0028BA  EF61  F014         	goto	i2u475_41
  6422  0028BE  EF63  F014         	goto	i2u475_40
  6423  0028C2                     i2u475_41:
  6424  0028C2  EF74  F014         	goto	i2l6204
  6425  0028C6                     i2u475_40:
  6426  0028C6  C001  FFD9         	movff	i2gpio_pin_write_logic@_pin_config,fsr2l
  6427  0028CA  C002  FFDA         	movff	i2gpio_pin_write_logic@_pin_config+1,fsr2h
  6428  0028CE  30DF               	rrcf	223,w,c
  6429  0028D0  32E8               	rrcf	wreg,f,c
  6430  0028D2  32E8               	rrcf	wreg,f,c
  6431  0028D4  0B07               	andlw	7
  6432  0028D6  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
  6433  0028D8  0E07               	movlw	7
  6434  0028DA  6404               	cpfsgt	??i2_gpio_pin_write_logic^0,c
  6435  0028DC  EF72  F014         	goto	i2u476_41
  6436  0028E0  EF74  F014         	goto	i2u476_40
  6437  0028E4                     i2u476_41:
  6438  0028E4  EFD7  F014         	goto	i2l6212
  6439  0028E8                     i2u476_40:
  6440  0028E8                     i2l6204:
  6441                           
  6442                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:         ret = (Std_ReturnType)0x00;
  6443  0028E8  0E00               	movlw	0
  6444  0028EA  6E0A               	movwf	i2gpio_pin_write_logic@ret^0,c
  6445                           
  6446                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:     }
  6447  0028EC  EFEC  F014         	goto	i2l6214
  6448  0028F0                     i2l6206:
  6449                           
  6450                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1 << _pin_config->pin));
  6451  0028F0  C001  FFD9         	movff	i2gpio_pin_write_logic@_pin_config,fsr2l
  6452  0028F4  C002  FFDA         	movff	i2gpio_pin_write_logic@_pin_config+1,fsr2h
  6453  0028F8  30DF               	rrcf	223,w,c
  6454  0028FA  32E8               	rrcf	wreg,f,c
  6455  0028FC  32E8               	rrcf	wreg,f,c
  6456  0028FE  0B07               	andlw	7
  6457  002900  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
  6458  002902  0E01               	movlw	1
  6459  002904  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
  6460  002906  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
  6461  002908  EF88  F014         	goto	i2u477_44
  6462  00290C                     i2u477_45:
  6463  00290C  90D8               	bcf	status,0,c
  6464  00290E  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
  6465  002910                     i2u477_44:
  6466  002910  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
  6467  002912  EF86  F014         	goto	i2u477_45
  6468  002916  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
  6469  002918  0AFF               	xorlw	255
  6470  00291A  6E06               	movwf	(??i2_gpio_pin_write_logic+2)^0,c
  6471  00291C  C001  FFD9         	movff	i2gpio_pin_write_logic@_pin_config,fsr2l
  6472  002920  C002  FFDA         	movff	i2gpio_pin_write_logic@_pin_config+1,fsr2h
  6473  002924  50DF               	movf	223,w,c
  6474  002926  0B07               	andlw	7
  6475  002928  6E07               	movwf	(??i2_gpio_pin_write_logic+3)^0,c
  6476  00292A  5007               	movf	(??i2_gpio_pin_write_logic+3)^0,w,c
  6477  00292C  0D02               	mullw	2
  6478  00292E  0E37               	movlw	low _lat_registers
  6479  002930  24F3               	addwf	243,w,c
  6480  002932  6ED9               	movwf	fsr2l,c
  6481  002934  0E01               	movlw	high _lat_registers
  6482  002936  20F4               	addwfc	prodh,w,c
  6483  002938  6EDA               	movwf	fsr2h,c
  6484  00293A  CFDE F008          	movff	postinc2,??i2_gpio_pin_write_logic+4
  6485  00293E  CFDD F009          	movff	postdec2,??i2_gpio_pin_write_logic+5
  6486  002942  C008  FFD9         	movff	??i2_gpio_pin_write_logic+4,fsr2l
  6487  002946  C009  FFDA         	movff	??i2_gpio_pin_write_logic+5,fsr2h
  6488  00294A  5006               	movf	(??i2_gpio_pin_write_logic+2)^0,w,c
  6489  00294C  16DF               	andwf	indf2,f,c
  6490                           
  6491                           ;MCAL_Layer/GPIO/hal_gpio.c: 84:                 break;
  6492  00294E  EFEC  F014         	goto	i2l6214
  6493  002952                     i2l6208:
  6494                           
  6495                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1 << _pin_config->pin));
  6496  002952  C001  FFD9         	movff	i2gpio_pin_write_logic@_pin_config,fsr2l
  6497  002956  C002  FFDA         	movff	i2gpio_pin_write_logic@_pin_config+1,fsr2h
  6498  00295A  30DF               	rrcf	223,w,c
  6499  00295C  32E8               	rrcf	wreg,f,c
  6500  00295E  32E8               	rrcf	wreg,f,c
  6501  002960  0B07               	andlw	7
  6502  002962  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
  6503  002964  0E01               	movlw	1
  6504  002966  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
  6505  002968  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
  6506  00296A  EFB9  F014         	goto	i2u478_44
  6507  00296E                     i2u478_45:
  6508  00296E  90D8               	bcf	status,0,c
  6509  002970  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
  6510  002972                     i2u478_44:
  6511  002972  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
  6512  002974  EFB7  F014         	goto	i2u478_45
  6513  002978  C001  FFD9         	movff	i2gpio_pin_write_logic@_pin_config,fsr2l
  6514  00297C  C002  FFDA         	movff	i2gpio_pin_write_logic@_pin_config+1,fsr2h
  6515  002980  50DF               	movf	223,w,c
  6516  002982  0B07               	andlw	7
  6517  002984  6E06               	movwf	(??i2_gpio_pin_write_logic+2)^0,c
  6518  002986  5006               	movf	(??i2_gpio_pin_write_logic+2)^0,w,c
  6519  002988  0D02               	mullw	2
  6520  00298A  0E37               	movlw	low _lat_registers
  6521  00298C  24F3               	addwf	243,w,c
  6522  00298E  6ED9               	movwf	fsr2l,c
  6523  002990  0E01               	movlw	high _lat_registers
  6524  002992  20F4               	addwfc	prodh,w,c
  6525  002994  6EDA               	movwf	fsr2h,c
  6526  002996  CFDE F007          	movff	postinc2,??i2_gpio_pin_write_logic+3
  6527  00299A  CFDD F008          	movff	postdec2,??i2_gpio_pin_write_logic+4
  6528  00299E  C007  FFD9         	movff	??i2_gpio_pin_write_logic+3,fsr2l
  6529  0029A2  C008  FFDA         	movff	??i2_gpio_pin_write_logic+4,fsr2h
  6530  0029A6  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
  6531  0029A8  12DF               	iorwf	indf2,f,c
  6532                           
  6533                           ;MCAL_Layer/GPIO/hal_gpio.c: 87:                 break;
  6534  0029AA  EFEC  F014         	goto	i2l6214
  6535  0029AE                     i2l6212:
  6536  0029AE  5003               	movf	i2gpio_pin_write_logic@logic^0,w,c
  6537  0029B0  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
  6538  0029B2  6A05               	clrf	(??i2_gpio_pin_write_logic+1)^0,c
  6539                           
  6540                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6541                           ; Switch size 1, requested type "simple"
  6542                           ; Number of cases is 1, Range of values is 0 to 0
  6543                           ; switch strategies available:
  6544                           ; Name         Instructions Cycles
  6545                           ; simple_byte            4     3 (average)
  6546                           ;	Chosen strategy is simple_byte
  6547  0029B4  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
  6548  0029B6  0A00               	xorlw	0	; case 0
  6549  0029B8  B4D8               	btfsc	status,2,c
  6550  0029BA  EFE1  F014         	goto	i2l10036
  6551  0029BE  EF74  F014         	goto	i2l6204
  6552  0029C2                     i2l10036:
  6553                           
  6554                           ; Switch size 1, requested type "simple"
  6555                           ; Number of cases is 2, Range of values is 0 to 1
  6556                           ; switch strategies available:
  6557                           ; Name         Instructions Cycles
  6558                           ; simple_byte            7     4 (average)
  6559                           ;	Chosen strategy is simple_byte
  6560  0029C2  5004               	movf	??i2_gpio_pin_write_logic^0,w,c
  6561  0029C4  0A00               	xorlw	0	; case 0
  6562  0029C6  B4D8               	btfsc	status,2,c
  6563  0029C8  EF78  F014         	goto	i2l6206
  6564  0029CC  0A01               	xorlw	1	; case 1
  6565  0029CE  B4D8               	btfsc	status,2,c
  6566  0029D0  EFA9  F014         	goto	i2l6208
  6567  0029D4  EF74  F014         	goto	i2l6204
  6568  0029D8                     i2l6214:
  6569                           
  6570                           ;MCAL_Layer/GPIO/hal_gpio.c: 91:     return ret;
  6571  0029D8  500A               	movf	i2gpio_pin_write_logic@ret^0,w,c
  6572  0029DA  0012               	return		;funcret
  6573  0029DC                     __end_ofi2_gpio_pin_write_logic:
  6574                           	callstack 0
  6575                           
  6576 ;; *************** function _convert_uint8_to_string *****************
  6577 ;; Defined at:
  6578 ;;		line 398 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  6579 ;; Parameters:    Size  Location     Type
  6580 ;;  value           1    wreg     unsigned char 
  6581 ;;  str             2  108[COMRAM] PTR unsigned char 
  6582 ;;		 -> adcArray(7), 
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;  value           1  110[COMRAM] unsigned char 
  6585 ;;  ret             1  111[COMRAM] unsigned char 
  6586 ;; Return value:  Size  Location     Type
  6587 ;;                  1    wreg      unsigned char 
  6588 ;; Registers used:
  6589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6595 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6596 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6598 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6599 ;;Total ram usage:        4 bytes
  6600 ;; Hardware stack levels used: 1
  6601 ;; Hardware stack levels required when called: 8
  6602 ;; This function calls:
  6603 ;;		_memset
  6604 ;;		_sprintf
  6605 ;; This function is called by:
  6606 ;;		_adcInterruptHandeler
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           
  6610                           	psect	text50
  6611  0035A4                     __ptext50:
  6612                           	callstack 0
  6613  0035A4                     _convert_uint8_to_string:
  6614                           	callstack 13
  6615                           
  6616                           ;incstack = 0
  6617                           ;convert_uint8_to_string@value stored from wreg
  6618  0035A4  6E6F               	movwf	convert_uint8_to_string@value^0,c
  6619  0035A6                     
  6620                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 399:     Std_ReturnType ret = (Std_ReturnType)0x01;
  6621  0035A6  0E01               	movlw	1
  6622  0035A8  6E70               	movwf	convert_uint8_to_string@ret^0,c
  6623  0035AA                     
  6624                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 400:     if(((void*)0) == str){
  6625  0035AA  506D               	movf	convert_uint8_to_string@str^0,w,c
  6626  0035AC  106E               	iorwf	(convert_uint8_to_string@str+1)^0,w,c
  6627  0035AE  A4D8               	btfss	status,2,c
  6628  0035B0  EFDC  F01A         	goto	i2u505_41
  6629  0035B4  EFDE  F01A         	goto	i2u505_40
  6630  0035B8                     i2u505_41:
  6631  0035B8  EFE2  F01A         	goto	i2l6520
  6632  0035BC                     i2u505_40:
  6633  0035BC                     
  6634                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 401:         ret = (Std_ReturnType)0x00;
  6635  0035BC  0E00               	movlw	0
  6636  0035BE  6E70               	movwf	convert_uint8_to_string@ret^0,c
  6637                           
  6638                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 402:     }
  6639  0035C0  EFFD  F01A         	goto	i2l6524
  6640  0035C4                     i2l6520:
  6641                           
  6642                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 404:         memset((char *)str, '\0', 4);
  6643  0035C4  C06D  F001         	movff	convert_uint8_to_string@str,memset@dest
  6644  0035C8  C06E  F002         	movff	convert_uint8_to_string@str+1,memset@dest+1
  6645  0035CC  0E00               	movlw	0
  6646  0035CE  6E04               	movwf	(memset@c+1)^0,c
  6647  0035D0  0E00               	movlw	0
  6648  0035D2  6E03               	movwf	memset@c^0,c
  6649  0035D4  0E00               	movlw	0
  6650  0035D6  6E06               	movwf	(memset@n+1)^0,c
  6651  0035D8  0E04               	movlw	4
  6652  0035DA  6E05               	movwf	memset@n^0,c
  6653  0035DC  EC5F  F010         	call	_memset	;wreg free
  6654  0035E0                     
  6655                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 405:         sprintf(str, "%i", value);
  6656  0035E0  C06D  F058         	movff	convert_uint8_to_string@str,sprintf@s
  6657  0035E4  C06E  F059         	movff	convert_uint8_to_string@str+1,sprintf@s+1
  6658  0035E8  0E2C               	movlw	low STR_1
  6659  0035EA  6E5A               	movwf	sprintf@fmt^0,c
  6660  0035EC  0E10               	movlw	high STR_1
  6661  0035EE  6E5B               	movwf	(sprintf@fmt+1)^0,c
  6662  0035F0  C06F  F05C         	movff	convert_uint8_to_string@value,?_sprintf+4
  6663  0035F4  6A5D               	clrf	(?_sprintf+5)^0,c
  6664  0035F6  EC29  F01B         	call	_sprintf	;wreg free
  6665  0035FA                     i2l6524:
  6666                           
  6667                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 407:     return ret;
  6668  0035FA  5070               	movf	convert_uint8_to_string@ret^0,w,c
  6669  0035FC  0012               	return		;funcret
  6670  0035FE                     __end_of_convert_uint8_to_string:
  6671                           	callstack 0
  6672                           
  6673 ;; *************** function _sprintf *****************
  6674 ;; Defined at:
  6675 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  6676 ;; Parameters:    Size  Location     Type
  6677 ;;  s               2   87[COMRAM] PTR unsigned char 
  6678 ;;		 -> adcArray(7), convert_uint16_to_string@Temp_String(6), 
  6679 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  6680 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  6681 ;; Auto vars:     Size  Location     Type
  6682 ;;  f              11   97[COMRAM] struct _IO_FILE
  6683 ;;  ap              2   95[COMRAM] PTR void [1]
  6684 ;;		 -> ?_sprintf(2), 
  6685 ;;  ret             2    0        int 
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  2   87[COMRAM] int 
  6688 ;; Registers used:
  6689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6695 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6696 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6698 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6699 ;;Total ram usage:       21 bytes
  6700 ;; Hardware stack levels used: 1
  6701 ;; Hardware stack levels required when called: 7
  6702 ;; This function calls:
  6703 ;;		_vfprintf
  6704 ;; This function is called by:
  6705 ;;		_convert_uint8_to_string
  6706 ;;		_convert_uint16_to_string
  6707 ;;		_convert_uint32_to_string
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           
  6711                           	psect	text51
  6712  003652                     __ptext51:
  6713                           	callstack 0
  6714  003652                     _sprintf:
  6715                           	callstack 13
  6716  003652  0E5C               	movlw	low (?_sprintf+4)
  6717  003654  6E60               	movwf	sprintf@ap^0,c
  6718  003656  0E00               	movlw	high (?_sprintf+4)
  6719  003658  6E61               	movwf	(sprintf@ap+1)^0,c
  6720  00365A  C058  F062         	movff	sprintf@s,sprintf@f
  6721  00365E  C059  F063         	movff	sprintf@s+1,sprintf@f+1
  6722  003662  0E00               	movlw	0
  6723  003664  6E66               	movwf	(sprintf@f+4)^0,c
  6724  003666  0E00               	movlw	0
  6725  003668  6E65               	movwf	(sprintf@f+3)^0,c
  6726  00366A  0E00               	movlw	0
  6727  00366C  6E6C               	movwf	(sprintf@f+10)^0,c
  6728  00366E  0E00               	movlw	0
  6729  003670  6E6B               	movwf	(sprintf@f+9)^0,c
  6730  003672  0E62               	movlw	low sprintf@f
  6731  003674  6E50               	movwf	vfprintf@fp^0,c
  6732  003676  0E00               	movlw	high sprintf@f
  6733  003678  6E51               	movwf	(vfprintf@fp+1)^0,c
  6734  00367A  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  6735  00367E  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6736  003682  0E60               	movlw	low sprintf@ap
  6737  003684  6E54               	movwf	vfprintf@ap^0,c
  6738  003686  0E00               	movlw	high sprintf@ap
  6739  003688  6E55               	movwf	(vfprintf@ap+1)^0,c
  6740  00368A  ECA0  F01A         	call	_vfprintf	;wreg free
  6741  00368E  5065               	movf	(sprintf@f+3)^0,w,c
  6742  003690  2458               	addwf	sprintf@s^0,w,c
  6743  003692  6ED9               	movwf	fsr2l,c
  6744  003694  5066               	movf	(sprintf@f+4)^0,w,c
  6745  003696  2059               	addwfc	(sprintf@s+1)^0,w,c
  6746  003698  6EDA               	movwf	fsr2h,c
  6747  00369A  0E00               	movlw	0
  6748  00369C  6EDF               	movwf	indf2,c
  6749  00369E  0012               	return		;funcret
  6750  0036A0                     __end_of_sprintf:
  6751                           	callstack 0
  6752                           
  6753 ;; *************** function _vfprintf *****************
  6754 ;; Defined at:
  6755 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  6758 ;;		 -> sprintf@f(11), 
  6759 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  6760 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  6761 ;;  ap              2   83[COMRAM] PTR PTR void 
  6762 ;;		 -> sprintf@ap(2), 
  6763 ;; Auto vars:     Size  Location     Type
  6764 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  6765 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  6766 ;; Return value:  Size  Location     Type
  6767 ;;                  2   79[COMRAM] int 
  6768 ;; Registers used:
  6769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6770 ;; Tracked objects:
  6771 ;;		On entry : 0/0
  6772 ;;		On exit  : 0/0
  6773 ;;		Unchanged: 0/0
  6774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6775 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6776 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6778 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6779 ;;Total ram usage:        8 bytes
  6780 ;; Hardware stack levels used: 1
  6781 ;; Hardware stack levels required when called: 6
  6782 ;; This function calls:
  6783 ;;		_vfpfcnvrt
  6784 ;; This function is called by:
  6785 ;;		_sprintf
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789                           	psect	text52
  6790  003540                     __ptext52:
  6791                           	callstack 0
  6792  003540                     _vfprintf:
  6793                           	callstack 13
  6794  003540                     
  6795                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6796  003540  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  6797  003544  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6798  003548                     
  6799                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6800  003548  0E00               	movlw	0
  6801  00354A  0100               	movlb	0	; () banked
  6802  00354C  6F81               	movwf	(_nout+1)& (0+255),b
  6803  00354E  0E00               	movlw	0
  6804  003550  6F80               	movwf	_nout& (0+255),b
  6805                           
  6806                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6807  003552  EFBE  F01A         	goto	i2l6338
  6808  003556                     i2l6336:
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6812  003556  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  6813  00355A  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6814  00355E  0E56               	movlw	low vfprintf@cfmt
  6815  003560  6E42               	movwf	vfpfcnvrt@fmt^0,c
  6816  003562  0E00               	movlw	high vfprintf@cfmt
  6817  003564  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  6818  003566  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  6819  00356A  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6820  00356E  ECE2  F00D         	call	_vfpfcnvrt	;wreg free
  6821  003572  5040               	movf	?_vfpfcnvrt^0,w,c
  6822  003574  0100               	movlb	0	; () banked
  6823  003576  2780               	addwf	_nout& (0+255),f,b
  6824  003578  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  6825  00357A  2381               	addwfc	(_nout+1)& (0+255),f,b
  6826  00357C                     i2l6338:
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6830  00357C  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  6831  003580  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6832  003584                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6833  003584  6AF8               	clrf	tblptru,c
  6834  003586                     	endif
  6835  003586                     	if	0	;tblptru may be non-zero
  6836  003586                     	endif
  6837  003586  0008               	tblrd		*
  6838  003588  50F5               	movf	tablat,w,c
  6839  00358A  0900               	iorlw	0
  6840  00358C  A4D8               	btfss	status,2,c
  6841  00358E  EFCB  F01A         	goto	i2u487_41
  6842  003592  EFCD  F01A         	goto	i2u487_40
  6843  003596                     i2u487_41:
  6844  003596  EFAB  F01A         	goto	i2l6336
  6845  00359A                     i2u487_40:
  6846  00359A                     
  6847                           ; BSR set to: 0
  6848                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6849  00359A  C080  F050         	movff	_nout,?_vfprintf
  6850  00359E  C081  F051         	movff	_nout+1,?_vfprintf+1
  6851  0035A2                     
  6852                           ; BSR set to: 0
  6853  0035A2  0012               	return		;funcret
  6854  0035A4                     __end_of_vfprintf:
  6855                           	callstack 0
  6856                           
  6857 ;; *************** function _vfpfcnvrt *****************
  6858 ;; Defined at:
  6859 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  6862 ;;		 -> sprintf@f(11), 
  6863 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  6864 ;;		 -> vfprintf@cfmt(2), 
  6865 ;;  ap              2   67[COMRAM] PTR PTR void 
  6866 ;;		 -> sprintf@ap(2), 
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;  ll              8   71[COMRAM] long long 
  6869 ;;  llu             8    0        unsigned long long 
  6870 ;;  f               4    0        unsigned long long 
  6871 ;;  vp              3    0        PTR void 
  6872 ;;  ct              3    0        unsigned char [3]
  6873 ;;  cp              3    0        PTR unsigned char 
  6874 ;;  i               2    0        int 
  6875 ;;  done            2    0        int 
  6876 ;;  c               1    0        unsigned char 
  6877 ;; Return value:  Size  Location     Type
  6878 ;;                  2   63[COMRAM] int 
  6879 ;; Registers used:
  6880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6881 ;; Tracked objects:
  6882 ;;		On entry : 0/0
  6883 ;;		On exit  : 0/0
  6884 ;;		Unchanged: 0/0
  6885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6886 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6887 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6888 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6889 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6890 ;;Total ram usage:       16 bytes
  6891 ;; Hardware stack levels used: 1
  6892 ;; Hardware stack levels required when called: 5
  6893 ;; This function calls:
  6894 ;;		_dtoa
  6895 ;;		_fputc
  6896 ;; This function is called by:
  6897 ;;		_vfprintf
  6898 ;; This function uses a non-reentrant model
  6899 ;;
  6900                           
  6901                           	psect	text53
  6902  001BC4                     __ptext53:
  6903                           	callstack 0
  6904  001BC4                     _vfpfcnvrt:
  6905                           	callstack 13
  6906  001BC4                     
  6907                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6908  001BC4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6909  001BC8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6910  001BCC  CFDE FFF6          	movff	postinc2,tblptrl
  6911  001BD0  CFDD FFF7          	movff	postdec2,tblptrh
  6912  001BD4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6913  001BD4  6AF8               	clrf	tblptru,c
  6914  001BD6                     	endif
  6915  001BD6                     	if	0	;tblptru may be non-zero
  6916  001BD6                     	endif
  6917  001BD6  0008               	tblrd		*
  6918  001BD8  50F5               	movf	tablat,w,c
  6919  001BDA  0A25               	xorlw	37
  6920  001BDC  A4D8               	btfss	status,2,c
  6921  001BDE  EFF3  F00D         	goto	i2u483_41
  6922  001BE2  EFF5  F00D         	goto	i2u483_40
  6923  001BE6                     i2u483_41:
  6924  001BE6  EFA4  F00E         	goto	i2l6280
  6925  001BEA                     i2u483_40:
  6926  001BEA                     
  6927                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6928  001BEA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6929  001BEE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6930  001BF2  2ADE               	incf	postinc2,f,c
  6931  001BF4  0E00               	movlw	0
  6932  001BF6  22DD               	addwfc	postdec2,f,c
  6933  001BF8                     
  6934                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6935  001BF8  0E00               	movlw	0
  6936  001BFA  0100               	movlb	0	; () banked
  6937  001BFC  6F83               	movwf	(_width+1)& (0+255),b
  6938  001BFE  0E00               	movlw	0
  6939  001C00  6F82               	movwf	_width& (0+255),b
  6940  001C02  C082  F086         	movff	_width,_flags
  6941  001C06  C083  F087         	movff	_width+1,_flags+1
  6942  001C0A                     
  6943                           ; BSR set to: 0
  6944                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6945  001C0A  6984               	setf	_prec& (0+255),b
  6946  001C0C  6985               	setf	(_prec+1)& (0+255),b
  6947  001C0E                     
  6948                           ; BSR set to: 0
  6949                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6950  001C0E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6951  001C12  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6952  001C16  CFDE FFF6          	movff	postinc2,tblptrl
  6953  001C1A  CFDD FFF7          	movff	postdec2,tblptrh
  6954  001C1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6955  001C1E  6AF8               	clrf	tblptru,c
  6956  001C20                     	endif
  6957  001C20                     	if	0	;tblptru may be non-zero
  6958  001C20                     	endif
  6959  001C20  0008               	tblrd		*
  6960  001C22  50F5               	movf	tablat,w,c
  6961  001C24  0A64               	xorlw	100
  6962  001C26  B4D8               	btfsc	status,2,c
  6963  001C28  EF18  F00E         	goto	i2u484_41
  6964  001C2C  EF1A  F00E         	goto	i2u484_40
  6965  001C30                     i2u484_41:
  6966  001C30  EF2D  F00E         	goto	i2l6258
  6967  001C34                     i2u484_40:
  6968  001C34                     
  6969                           ; BSR set to: 0
  6970  001C34  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6971  001C38  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6972  001C3C  CFDE FFF6          	movff	postinc2,tblptrl
  6973  001C40  CFDD FFF7          	movff	postdec2,tblptrh
  6974  001C44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6975  001C44  6AF8               	clrf	tblptru,c
  6976  001C46                     	endif
  6977  001C46                     	if	0	;tblptru may be non-zero
  6978  001C46                     	endif
  6979  001C46  0008               	tblrd		*
  6980  001C48  50F5               	movf	tablat,w,c
  6981  001C4A  0A69               	xorlw	105
  6982  001C4C  A4D8               	btfss	status,2,c
  6983  001C4E  EF2B  F00E         	goto	i2u485_41
  6984  001C52  EF2D  F00E         	goto	i2u485_40
  6985  001C56                     i2u485_41:
  6986  001C56  EF6D  F00E         	goto	i2l6264
  6987  001C5A                     i2u485_40:
  6988  001C5A                     i2l6258:
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6992  001C5A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6993  001C5E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6994  001C62  2ADE               	incf	postinc2,f,c
  6995  001C64  0E00               	movlw	0
  6996  001C66  22DD               	addwfc	postdec2,f,c
  6997                           
  6998                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6999  001C68  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7000  001C6C  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7001  001C70  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7002  001C74  0E02               	movlw	2
  7003  001C76  26DE               	addwf	postinc2,f,c
  7004  001C78  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7005  001C7C  0E00               	movlw	0
  7006  001C7E  22DD               	addwfc	postdec2,f,c
  7007  001C80  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7008  001C84  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7009  001C88  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  7010  001C8C  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  7011  001C90  0E00               	movlw	0
  7012  001C92  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  7013  001C94  0EFF               	movlw	-1
  7014  001C96  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  7015  001C98  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  7016  001C9A  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  7017  001C9C  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  7018  001C9E  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  7019  001CA0  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  7020  001CA2                     
  7021                           ; BSR set to: 0
  7022                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7023  001CA2  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  7024  001CA6  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7025  001CAA  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  7026  001CAE  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7027  001CB2  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7028  001CB6  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7029  001CBA  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7030  001CBE  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7031  001CC2  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7032  001CC6  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7033  001CCA  EC70  F00C         	call	_dtoa	;wreg free
  7034  001CCE  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  7035  001CD2  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7036  001CD6  EFC0  F00E         	goto	i2l2513
  7037  001CDA                     i2l6264:
  7038                           
  7039                           ; BSR set to: 0
  7040                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7041  001CDA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7042  001CDE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7043  001CE2  CFDE FFF6          	movff	postinc2,tblptrl
  7044  001CE6  CFDD FFF7          	movff	postdec2,tblptrh
  7045  001CEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7046  001CEA  6AF8               	clrf	tblptru,c
  7047  001CEC                     	endif
  7048  001CEC                     	if	0	;tblptru may be non-zero
  7049  001CEC                     	endif
  7050  001CEC  0008               	tblrd		*
  7051  001CEE  50F5               	movf	tablat,w,c
  7052  001CF0  0A25               	xorlw	37
  7053  001CF2  A4D8               	btfss	status,2,c
  7054  001CF4  EF7E  F00E         	goto	i2u486_41
  7055  001CF8  EF80  F00E         	goto	i2u486_40
  7056  001CFC                     i2u486_41:
  7057  001CFC  EF97  F00E         	goto	i2l6274
  7058  001D00                     i2u486_40:
  7059  001D00                     
  7060                           ; BSR set to: 0
  7061                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7062  001D00  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7063  001D04  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7064  001D08  2ADE               	incf	postinc2,f,c
  7065  001D0A  0E00               	movlw	0
  7066  001D0C  22DD               	addwfc	postdec2,f,c
  7067  001D0E                     
  7068                           ; BSR set to: 0
  7069                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7070  001D0E  0E00               	movlw	0
  7071  001D10  6E02               	movwf	(fputc@c+1)^0,c
  7072  001D12  0E25               	movlw	37
  7073  001D14  6E01               	movwf	fputc@c^0,c
  7074  001D16  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7075  001D1A  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7076  001D1E  ECDF  F015         	call	_fputc	;wreg free
  7077  001D22                     i2l6270:
  7078                           
  7079                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7080  001D22  0E00               	movlw	0
  7081  001D24  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7082  001D26  0E01               	movlw	1
  7083  001D28  6E40               	movwf	?_vfpfcnvrt^0,c
  7084  001D2A  EFC0  F00E         	goto	i2l2513
  7085  001D2E                     i2l6274:
  7086                           
  7087                           ; BSR set to: 0
  7088                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7089  001D2E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7090  001D32  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7091  001D36  2ADE               	incf	postinc2,f,c
  7092  001D38  0E00               	movlw	0
  7093  001D3A  22DD               	addwfc	postdec2,f,c
  7094  001D3C                     
  7095                           ; BSR set to: 0
  7096                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7097  001D3C  0E00               	movlw	0
  7098  001D3E  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7099  001D40  0E00               	movlw	0
  7100  001D42  6E40               	movwf	?_vfpfcnvrt^0,c
  7101  001D44  EFC0  F00E         	goto	i2l2513
  7102  001D48                     i2l6280:
  7103                           
  7104                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7105  001D48  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7106  001D4C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7107  001D50  CFDE FFF6          	movff	postinc2,tblptrl
  7108  001D54  CFDD FFF7          	movff	postdec2,tblptrh
  7109  001D58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7110  001D58  6AF8               	clrf	tblptru,c
  7111  001D5A                     	endif
  7112  001D5A                     	if	0	;tblptru may be non-zero
  7113  001D5A                     	endif
  7114  001D5A  0008               	tblrd		*
  7115  001D5C  50F5               	movf	tablat,w,c
  7116  001D5E  6E01               	movwf	fputc@c^0,c
  7117  001D60  6A02               	clrf	(fputc@c+1)^0,c
  7118  001D62  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7119  001D66  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7120  001D6A  ECDF  F015         	call	_fputc	;wreg free
  7121  001D6E                     
  7122                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7123  001D6E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7124  001D72  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7125  001D76  2ADE               	incf	postinc2,f,c
  7126  001D78  0E00               	movlw	0
  7127  001D7A  22DD               	addwfc	postdec2,f,c
  7128  001D7C  EF91  F00E         	goto	i2l6270
  7129  001D80                     i2l2513:
  7130  001D80  0012               	return		;funcret
  7131  001D82                     __end_of_vfpfcnvrt:
  7132                           	callstack 0
  7133                           
  7134 ;; *************** function _dtoa *****************
  7135 ;; Defined at:
  7136 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7139 ;;		 -> sprintf@f(11), 
  7140 ;;  d               8   29[COMRAM] long long 
  7141 ;; Auto vars:     Size  Location     Type
  7142 ;;  n               8   53[COMRAM] long long 
  7143 ;;  i               2   61[COMRAM] int 
  7144 ;;  s               2   51[COMRAM] int 
  7145 ;;  w               2   49[COMRAM] int 
  7146 ;;  p               2   47[COMRAM] int 
  7147 ;; Return value:  Size  Location     Type
  7148 ;;                  2   27[COMRAM] int 
  7149 ;; Registers used:
  7150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7151 ;; Tracked objects:
  7152 ;;		On entry : 0/0
  7153 ;;		On exit  : 0/0
  7154 ;;		Unchanged: 0/0
  7155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7156 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7157 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7158 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7159 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7160 ;;Total ram usage:       36 bytes
  7161 ;; Hardware stack levels used: 1
  7162 ;; Hardware stack levels required when called: 4
  7163 ;; This function calls:
  7164 ;;		___aodiv
  7165 ;;		___aomod
  7166 ;;		_abs
  7167 ;;		_pad
  7168 ;; This function is called by:
  7169 ;;		_vfpfcnvrt
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173                           	psect	text54
  7174  0018E0                     __ptext54:
  7175                           	callstack 0
  7176  0018E0                     _dtoa:
  7177                           	callstack 13
  7178  0018E0                     
  7179                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7180  0018E0  C01E  F036         	movff	dtoa@d,dtoa@n
  7181  0018E4  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7182  0018E8  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7183  0018EC  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7184  0018F0  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7185  0018F4  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7186  0018F8  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7187  0018FC  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7188  001900                     
  7189                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7190  001900  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7191  001902  EF85  F00C         	goto	i2u460_41
  7192  001906  EF88  F00C         	goto	i2u460_40
  7193  00190A                     i2u460_41:
  7194  00190A  0E01               	movlw	1
  7195  00190C  EF89  F00C         	goto	i2u461_40
  7196  001910                     i2u460_40:
  7197  001910  0E00               	movlw	0
  7198  001912                     i2u461_40:
  7199  001912  6E34               	movwf	dtoa@s^0,c
  7200  001914  6A35               	clrf	(dtoa@s+1)^0,c
  7201                           
  7202                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7203  001916  5034               	movf	dtoa@s^0,w,c
  7204  001918  1035               	iorwf	(dtoa@s+1)^0,w,c
  7205  00191A  B4D8               	btfsc	status,2,c
  7206  00191C  EF92  F00C         	goto	i2u462_41
  7207  001920  EF94  F00C         	goto	i2u462_40
  7208  001924                     i2u462_41:
  7209  001924  EFA4  F00C         	goto	i2l6142
  7210  001928                     i2u462_40:
  7211  001928                     
  7212                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7213  001928  1E3D               	comf	(dtoa@n+7)^0,f,c
  7214  00192A  1E3C               	comf	(dtoa@n+6)^0,f,c
  7215  00192C  1E3B               	comf	(dtoa@n+5)^0,f,c
  7216  00192E  1E3A               	comf	(dtoa@n+4)^0,f,c
  7217  001930  1E39               	comf	(dtoa@n+3)^0,f,c
  7218  001932  1E38               	comf	(dtoa@n+2)^0,f,c
  7219  001934  1E37               	comf	(dtoa@n+1)^0,f,c
  7220  001936  6C36               	negf	dtoa@n^0,c
  7221  001938  0E00               	movlw	0
  7222  00193A  2237               	addwfc	(dtoa@n+1)^0,f,c
  7223  00193C  2238               	addwfc	(dtoa@n+2)^0,f,c
  7224  00193E  2239               	addwfc	(dtoa@n+3)^0,f,c
  7225  001940  223A               	addwfc	(dtoa@n+4)^0,f,c
  7226  001942  223B               	addwfc	(dtoa@n+5)^0,f,c
  7227  001944  223C               	addwfc	(dtoa@n+6)^0,f,c
  7228  001946  223D               	addwfc	(dtoa@n+7)^0,f,c
  7229  001948                     i2l6142:
  7230                           
  7231                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7232  001948  0100               	movlb	0	; () banked
  7233  00194A  BF85               	btfsc	(_prec+1)& (0+255),7,b
  7234  00194C  EFAA  F00C         	goto	i2u463_41
  7235  001950  EFAC  F00C         	goto	i2u463_40
  7236  001954                     i2u463_41:
  7237  001954  EFAD  F00C         	goto	i2l6146
  7238  001958                     i2u463_40:
  7239  001958                     
  7240                           ; BSR set to: 0
  7241                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7242  001958  9386               	bcf	_flags& (0+255),1,b
  7243  00195A                     i2l6146:
  7244                           
  7245                           ; BSR set to: 0
  7246                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7247  00195A  BF85               	btfsc	(_prec+1)& (0+255),7,b
  7248  00195C  EFBA  F00C         	goto	i2u464_40
  7249  001960  5185               	movf	(_prec+1)& (0+255),w,b
  7250  001962  E106               	bnz	i2u464_41
  7251  001964  0584               	decf	_prec& (0+255),w,b
  7252  001966  B0D8               	btfsc	status,0,c
  7253  001968  EFB8  F00C         	goto	i2u464_41
  7254  00196C  EFBA  F00C         	goto	i2u464_40
  7255  001970                     i2u464_41:
  7256  001970  EFC0  F00C         	goto	i2l2486
  7257  001974                     i2u464_40:
  7258  001974                     
  7259                           ; BSR set to: 0
  7260  001974  0E00               	movlw	0
  7261  001976  6E31               	movwf	(dtoa@p+1)^0,c
  7262  001978  0E01               	movlw	1
  7263  00197A  6E30               	movwf	dtoa@p^0,c
  7264  00197C  EFC4  F00C         	goto	i2l2488
  7265  001980                     i2l2486:
  7266                           
  7267                           ; BSR set to: 0
  7268  001980  C084  F030         	movff	_prec,dtoa@p
  7269  001984  C085  F031         	movff	_prec+1,dtoa@p+1
  7270  001988                     i2l2488:
  7271                           
  7272                           ; BSR set to: 0
  7273                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7274  001988  C082  F032         	movff	_width,dtoa@w
  7275  00198C  C083  F033         	movff	_width+1,dtoa@w+1
  7276  001990                     
  7277                           ; BSR set to: 0
  7278                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7279  001990  5034               	movf	dtoa@s^0,w,c
  7280  001992  1035               	iorwf	(dtoa@s+1)^0,w,c
  7281  001994  A4D8               	btfss	status,2,c
  7282  001996  EFCF  F00C         	goto	i2u465_41
  7283  00199A  EFD1  F00C         	goto	i2u465_40
  7284  00199E                     i2u465_41:
  7285  00199E  EFD8  F00C         	goto	i2l6154
  7286  0019A2                     i2u465_40:
  7287  0019A2                     
  7288                           ; BSR set to: 0
  7289  0019A2  A586               	btfss	_flags& (0+255),2,b
  7290  0019A4  EFD6  F00C         	goto	i2u466_41
  7291  0019A8  EFD8  F00C         	goto	i2u466_40
  7292  0019AC                     i2u466_41:
  7293  0019AC  EFDB  F00C         	goto	i2l6156
  7294  0019B0                     i2u466_40:
  7295  0019B0                     i2l6154:
  7296                           
  7297                           ; BSR set to: 0
  7298                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  7299  0019B0  0632               	decf	dtoa@w^0,f,c
  7300  0019B2  A0D8               	btfss	status,0,c
  7301  0019B4  0633               	decf	(dtoa@w+1)^0,f,c
  7302  0019B6                     i2l6156:
  7303                           
  7304                           ; BSR set to: 0
  7305                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7306  0019B6  0E00               	movlw	0
  7307  0019B8  6E3F               	movwf	(dtoa@i+1)^0,c
  7308  0019BA  0E1F               	movlw	31
  7309  0019BC  6E3E               	movwf	dtoa@i^0,c
  7310  0019BE                     
  7311                           ; BSR set to: 0
  7312                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7313  0019BE  0E00               	movlw	0
  7314  0019C0  0101               	movlb	1	; () banked
  7315  0019C2  6F25               	movwf	(_dbuf+31)& (0+255),b
  7316                           
  7317                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7318  0019C4  EF60  F00D         	goto	i2l6170
  7319  0019C8                     i2l6160:
  7320                           
  7321                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  7322  0019C8  063E               	decf	dtoa@i^0,f,c
  7323  0019CA  A0D8               	btfss	status,0,c
  7324  0019CC  063F               	decf	(dtoa@i+1)^0,f,c
  7325  0019CE                     
  7326                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7327  0019CE  0E06               	movlw	low _dbuf
  7328  0019D0  243E               	addwf	dtoa@i^0,w,c
  7329  0019D2  6ED9               	movwf	fsr2l,c
  7330  0019D4  0E01               	movlw	high _dbuf
  7331  0019D6  203F               	addwfc	(dtoa@i+1)^0,w,c
  7332  0019D8  6EDA               	movwf	fsr2h,c
  7333  0019DA  C036  F001         	movff	dtoa@n,___aomod@dividend
  7334  0019DE  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7335  0019E2  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7336  0019E6  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7337  0019EA  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7338  0019EE  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7339  0019F2  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7340  0019F6  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7341  0019FA  0E0A               	movlw	10
  7342  0019FC  6E09               	movwf	___aomod@divisor^0,c
  7343  0019FE  0E00               	movlw	0
  7344  001A00  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7345  001A02  0E00               	movlw	0
  7346  001A04  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7347  001A06  0E00               	movlw	0
  7348  001A08  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7349  001A0A  0E00               	movlw	0
  7350  001A0C  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7351  001A0E  0E00               	movlw	0
  7352  001A10  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7353  001A12  0E00               	movlw	0
  7354  001A14  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7355  001A16  0E00               	movlw	0
  7356  001A18  6E10               	movwf	(___aomod@divisor+7)^0,c
  7357  001A1A  EC1A  F011         	call	___aomod	;wreg free
  7358  001A1E  C001  F026         	movff	?___aomod,??_dtoa
  7359  001A22  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7360  001A26  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7361  001A2A  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7362  001A2E  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7363  001A32  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7364  001A36  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7365  001A3A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7366  001A3E  C026  F013         	movff	??_dtoa,abs@a
  7367  001A42  C028  F014         	movff	??_dtoa+2,abs@a+1
  7368  001A46  EC8E  F01C         	call	_abs	;wreg free
  7369  001A4A  5013               	movf	?_abs^0,w,c
  7370  001A4C  0F30               	addlw	48
  7371  001A4E  6EDF               	movwf	indf2,c
  7372  001A50                     
  7373                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  7374  001A50  0630               	decf	dtoa@p^0,f,c
  7375  001A52  A0D8               	btfss	status,0,c
  7376  001A54  0631               	decf	(dtoa@p+1)^0,f,c
  7377  001A56                     
  7378                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  7379  001A56  0632               	decf	dtoa@w^0,f,c
  7380  001A58  A0D8               	btfss	status,0,c
  7381  001A5A  0633               	decf	(dtoa@w+1)^0,f,c
  7382  001A5C                     
  7383                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7384  001A5C  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7385  001A60  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7386  001A64  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7387  001A68  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7388  001A6C  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7389  001A70  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7390  001A74  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7391  001A78  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7392  001A7C  0E0A               	movlw	10
  7393  001A7E  6E09               	movwf	___aodiv@divisor^0,c
  7394  001A80  0E00               	movlw	0
  7395  001A82  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7396  001A84  0E00               	movlw	0
  7397  001A86  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7398  001A88  0E00               	movlw	0
  7399  001A8A  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7400  001A8C  0E00               	movlw	0
  7401  001A8E  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7402  001A90  0E00               	movlw	0
  7403  001A92  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7404  001A94  0E00               	movlw	0
  7405  001A96  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7406  001A98  0E00               	movlw	0
  7407  001A9A  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7408  001A9C  EC9B  F00F         	call	___aodiv	;wreg free
  7409  001AA0  C001  F036         	movff	?___aodiv,dtoa@n
  7410  001AA4  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7411  001AA8  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7412  001AAC  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7413  001AB0  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7414  001AB4  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7415  001AB8  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7416  001ABC  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7417  001AC0                     i2l6170:
  7418                           
  7419                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7420  001AC0  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7421  001AC2  EF6B  F00D         	goto	i2u467_41
  7422  001AC6  503F               	movf	(dtoa@i+1)^0,w,c
  7423  001AC8  E108               	bnz	i2u467_40
  7424  001ACA  043E               	decf	dtoa@i^0,w,c
  7425  001ACC  A0D8               	btfss	status,0,c
  7426  001ACE  EF6B  F00D         	goto	i2u467_41
  7427  001AD2  EF6D  F00D         	goto	i2u467_40
  7428  001AD6                     i2u467_41:
  7429  001AD6  EF9E  F00D         	goto	i2l6180
  7430  001ADA                     i2u467_40:
  7431  001ADA  5036               	movf	dtoa@n^0,w,c
  7432  001ADC  1037               	iorwf	(dtoa@n+1)^0,w,c
  7433  001ADE  1038               	iorwf	(dtoa@n+2)^0,w,c
  7434  001AE0  1039               	iorwf	(dtoa@n+3)^0,w,c
  7435  001AE2  103A               	iorwf	(dtoa@n+4)^0,w,c
  7436  001AE4  103B               	iorwf	(dtoa@n+5)^0,w,c
  7437  001AE6  103C               	iorwf	(dtoa@n+6)^0,w,c
  7438  001AE8  103D               	iorwf	(dtoa@n+7)^0,w,c
  7439  001AEA  A4D8               	btfss	status,2,c
  7440  001AEC  EF7A  F00D         	goto	i2u468_41
  7441  001AF0  EF7C  F00D         	goto	i2u468_40
  7442  001AF4                     i2u468_41:
  7443  001AF4  EFE4  F00C         	goto	i2l6160
  7444  001AF8                     i2u468_40:
  7445  001AF8  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7446  001AFA  EF89  F00D         	goto	i2u469_40
  7447  001AFE  5031               	movf	(dtoa@p+1)^0,w,c
  7448  001B00  E106               	bnz	i2u469_41
  7449  001B02  0430               	decf	dtoa@p^0,w,c
  7450  001B04  B0D8               	btfsc	status,0,c
  7451  001B06  EF87  F00D         	goto	i2u469_41
  7452  001B0A  EF89  F00D         	goto	i2u469_40
  7453  001B0E                     i2u469_41:
  7454  001B0E  EFE4  F00C         	goto	i2l6160
  7455  001B12                     i2u469_40:
  7456  001B12  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7457  001B14  EF94  F00D         	goto	i2u470_41
  7458  001B18  5033               	movf	(dtoa@w+1)^0,w,c
  7459  001B1A  E108               	bnz	i2u470_40
  7460  001B1C  0432               	decf	dtoa@w^0,w,c
  7461  001B1E  A0D8               	btfss	status,0,c
  7462  001B20  EF94  F00D         	goto	i2u470_41
  7463  001B24  EF96  F00D         	goto	i2u470_40
  7464  001B28                     i2u470_41:
  7465  001B28  EF9E  F00D         	goto	i2l6180
  7466  001B2C                     i2u470_40:
  7467  001B2C  0100               	movlb	0	; () banked
  7468  001B2E  B386               	btfsc	_flags& (0+255),1,b
  7469  001B30  EF9C  F00D         	goto	i2u471_41
  7470  001B34  EF9E  F00D         	goto	i2u471_40
  7471  001B38                     i2u471_41:
  7472  001B38  EFE4  F00C         	goto	i2l6160
  7473  001B3C                     i2u471_40:
  7474  001B3C                     i2l6180:
  7475                           
  7476                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7477  001B3C  5034               	movf	dtoa@s^0,w,c
  7478  001B3E  1035               	iorwf	(dtoa@s+1)^0,w,c
  7479  001B40  A4D8               	btfss	status,2,c
  7480  001B42  EFA5  F00D         	goto	i2u472_41
  7481  001B46  EFA7  F00D         	goto	i2u472_40
  7482  001B4A                     i2u472_41:
  7483  001B4A  EFAF  F00D         	goto	i2l6184
  7484  001B4E                     i2u472_40:
  7485  001B4E  0100               	movlb	0	; () banked
  7486  001B50  A586               	btfss	_flags& (0+255),2,b
  7487  001B52  EFAD  F00D         	goto	i2u473_41
  7488  001B56  EFAF  F00D         	goto	i2u473_40
  7489  001B5A                     i2u473_41:
  7490  001B5A  EFCD  F00D         	goto	i2l6194
  7491  001B5E                     i2u473_40:
  7492  001B5E                     i2l6184:
  7493                           
  7494                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  7495  001B5E  063E               	decf	dtoa@i^0,f,c
  7496  001B60  A0D8               	btfss	status,0,c
  7497  001B62  063F               	decf	(dtoa@i+1)^0,f,c
  7498  001B64                     
  7499                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7500  001B64  5034               	movf	dtoa@s^0,w,c
  7501  001B66  1035               	iorwf	(dtoa@s+1)^0,w,c
  7502  001B68  A4D8               	btfss	status,2,c
  7503  001B6A  EFB9  F00D         	goto	i2u474_41
  7504  001B6E  EFBB  F00D         	goto	i2u474_40
  7505  001B72                     i2u474_41:
  7506  001B72  EFC1  F00D         	goto	i2l6190
  7507  001B76                     i2u474_40:
  7508  001B76  0E00               	movlw	0
  7509  001B78  6E2F               	movwf	(_dtoa$4992+1)^0,c
  7510  001B7A  0E2B               	movlw	43
  7511  001B7C  6E2E               	movwf	_dtoa$4992^0,c
  7512  001B7E  EFC5  F00D         	goto	i2l6192
  7513  001B82                     i2l6190:
  7514  001B82  0E00               	movlw	0
  7515  001B84  6E2F               	movwf	(_dtoa$4992+1)^0,c
  7516  001B86  0E2D               	movlw	45
  7517  001B88  6E2E               	movwf	_dtoa$4992^0,c
  7518  001B8A                     i2l6192:
  7519  001B8A  0E06               	movlw	low _dbuf
  7520  001B8C  243E               	addwf	dtoa@i^0,w,c
  7521  001B8E  6ED9               	movwf	fsr2l,c
  7522  001B90  0E01               	movlw	high _dbuf
  7523  001B92  203F               	addwfc	(dtoa@i+1)^0,w,c
  7524  001B94  6EDA               	movwf	fsr2h,c
  7525  001B96  C02E  FFDF         	movff	_dtoa$4992,indf2
  7526  001B9A                     i2l6194:
  7527                           
  7528                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7529  001B9A  C01C  F011         	movff	dtoa@fp,pad@fp
  7530  001B9E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7531  001BA2  0E06               	movlw	low _dbuf
  7532  001BA4  243E               	addwf	dtoa@i^0,w,c
  7533  001BA6  6E13               	movwf	pad@buf^0,c
  7534  001BA8  0E01               	movlw	high _dbuf
  7535  001BAA  203F               	addwfc	(dtoa@i+1)^0,w,c
  7536  001BAC  6E14               	movwf	(pad@buf+1)^0,c
  7537  001BAE  C032  F015         	movff	dtoa@w,pad@p
  7538  001BB2  C033  F016         	movff	dtoa@w+1,pad@p+1
  7539  001BB6  ECA7  F016         	call	_pad	;wreg free
  7540  001BBA  C011  F01C         	movff	?_pad,?_dtoa
  7541  001BBE  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7542  001BC2  0012               	return		;funcret
  7543  001BC4                     __end_of_dtoa:
  7544                           	callstack 0
  7545                           
  7546 ;; *************** function _pad *****************
  7547 ;; Defined at:
  7548 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  7549 ;; Parameters:    Size  Location     Type
  7550 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7551 ;;		 -> sprintf@f(11), 
  7552 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7553 ;;		 -> dbuf(32), 
  7554 ;;  p               2   20[COMRAM] int 
  7555 ;; Auto vars:     Size  Location     Type
  7556 ;;  w               2   25[COMRAM] int 
  7557 ;;  i               2   23[COMRAM] int 
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  2   16[COMRAM] int 
  7560 ;; Registers used:
  7561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7567 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7568 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7569 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7570 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7571 ;;Total ram usage:       11 bytes
  7572 ;; Hardware stack levels used: 1
  7573 ;; Hardware stack levels required when called: 3
  7574 ;; This function calls:
  7575 ;;		_fputc
  7576 ;;		_fputs
  7577 ;;		_strlen
  7578 ;; This function is called by:
  7579 ;;		_dtoa
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           	psect	text55
  7584  002D4E                     __ptext55:
  7585                           	callstack 0
  7586  002D4E                     _pad:
  7587                           	callstack 13
  7588  002D4E                     
  7589                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7590  002D4E  0100               	movlb	0	; () banked
  7591  002D50  A186               	btfss	_flags& (0+255),0,b
  7592  002D52  EFAD  F016         	goto	i2u455_41
  7593  002D56  EFAF  F016         	goto	i2u455_40
  7594  002D5A                     i2u455_41:
  7595  002D5A  EFB9  F016         	goto	i2l6114
  7596  002D5E                     i2u455_40:
  7597  002D5E                     
  7598                           ; BSR set to: 0
  7599                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7600  002D5E  C013  F00A         	movff	pad@buf,fputs@s
  7601  002D62  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7602  002D66  C011  F00C         	movff	pad@fp,fputs@fp
  7603  002D6A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7604  002D6E  EC4B  F01C         	call	_fputs	;wreg free
  7605  002D72                     i2l6114:
  7606                           
  7607                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7608  002D72  BE16               	btfsc	(pad@p+1)^0,7,c
  7609  002D74  EFBE  F016         	goto	i2u456_41
  7610  002D78  EFC0  F016         	goto	i2u456_40
  7611  002D7C                     i2u456_41:
  7612  002D7C  EFC6  F016         	goto	i2l6118
  7613  002D80                     i2u456_40:
  7614  002D80  C015  F01A         	movff	pad@p,pad@w
  7615  002D84  C016  F01B         	movff	pad@p+1,pad@w+1
  7616  002D88  EFCA  F016         	goto	i2l2475
  7617  002D8C                     i2l6118:
  7618  002D8C  0E00               	movlw	0
  7619  002D8E  6E1B               	movwf	(pad@w+1)^0,c
  7620  002D90  0E00               	movlw	0
  7621  002D92  6E1A               	movwf	pad@w^0,c
  7622  002D94                     i2l2475:
  7623                           
  7624                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7625  002D94  0E00               	movlw	0
  7626  002D96  6E19               	movwf	(pad@i+1)^0,c
  7627  002D98  0E00               	movlw	0
  7628  002D9A  6E18               	movwf	pad@i^0,c
  7629                           
  7630                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7631  002D9C  EFDC  F016         	goto	i2l6124
  7632  002DA0                     i2l6120:
  7633                           
  7634                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7635  002DA0  0E00               	movlw	0
  7636  002DA2  6E02               	movwf	(fputc@c+1)^0,c
  7637  002DA4  0E20               	movlw	32
  7638  002DA6  6E01               	movwf	fputc@c^0,c
  7639  002DA8  C011  F003         	movff	pad@fp,fputc@fp
  7640  002DAC  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7641  002DB0  ECDF  F015         	call	_fputc	;wreg free
  7642  002DB4                     
  7643                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7644  002DB4  4A18               	infsnz	pad@i^0,f,c
  7645  002DB6  2A19               	incf	(pad@i+1)^0,f,c
  7646  002DB8                     i2l6124:
  7647                           
  7648                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7649  002DB8  501A               	movf	pad@w^0,w,c
  7650  002DBA  5C18               	subwf	pad@i^0,w,c
  7651  002DBC  5019               	movf	(pad@i+1)^0,w,c
  7652  002DBE  0A80               	xorlw	128
  7653  002DC0  6E17               	movwf	??_pad^0,c
  7654  002DC2  501B               	movf	(pad@w+1)^0,w,c
  7655  002DC4  0A80               	xorlw	128
  7656  002DC6  5817               	subwfb	??_pad^0,w,c
  7657  002DC8  A0D8               	btfss	status,0,c
  7658  002DCA  EFE9  F016         	goto	i2u457_41
  7659  002DCE  EFEB  F016         	goto	i2u457_40
  7660  002DD2                     i2u457_41:
  7661  002DD2  EFD0  F016         	goto	i2l6120
  7662  002DD6                     i2u457_40:
  7663  002DD6                     
  7664                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7665  002DD6  0100               	movlb	0	; () banked
  7666  002DD8  B186               	btfsc	_flags& (0+255),0,b
  7667  002DDA  EFF1  F016         	goto	i2u458_41
  7668  002DDE  EFF3  F016         	goto	i2u458_40
  7669  002DE2                     i2u458_41:
  7670  002DE2  EFFD  F016         	goto	i2l6128
  7671  002DE6                     i2u458_40:
  7672  002DE6                     
  7673                           ; BSR set to: 0
  7674                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7675  002DE6  C013  F00A         	movff	pad@buf,fputs@s
  7676  002DEA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7677  002DEE  C011  F00C         	movff	pad@fp,fputs@fp
  7678  002DF2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7679  002DF6  EC4B  F01C         	call	_fputs	;wreg free
  7680  002DFA                     i2l6128:
  7681                           
  7682                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7683  002DFA  C013  F001         	movff	pad@buf,strlen@s
  7684  002DFE  C014  F002         	movff	pad@buf+1,strlen@s+1
  7685  002E02  ECCB  F01C         	call	_strlen	;wreg free
  7686  002E06  501A               	movf	pad@w^0,w,c
  7687  002E08  2401               	addwf	?_strlen^0,w,c
  7688  002E0A  6E11               	movwf	?_pad^0,c
  7689  002E0C  501B               	movf	(pad@w+1)^0,w,c
  7690  002E0E  2002               	addwfc	(?_strlen+1)^0,w,c
  7691  002E10  6E12               	movwf	(?_pad+1)^0,c
  7692  002E12  0012               	return		;funcret
  7693  002E14                     __end_of_pad:
  7694                           	callstack 0
  7695                           
  7696 ;; *************** function _strlen *****************
  7697 ;; Defined at:
  7698 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  7699 ;; Parameters:    Size  Location     Type
  7700 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7701 ;;		 -> dbuf(32), 
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7704 ;;		 -> dbuf(32), 
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  2    0[COMRAM] unsigned int 
  7707 ;; Registers used:
  7708 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7715 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7717 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7718 ;;Total ram usage:        4 bytes
  7719 ;; Hardware stack levels used: 1
  7720 ;; This function calls:
  7721 ;;		Nothing
  7722 ;; This function is called by:
  7723 ;;		_pad
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           	psect	text56
  7728  003996                     __ptext56:
  7729                           	callstack 0
  7730  003996                     _strlen:
  7731                           	callstack 15
  7732  003996  C001  F003         	movff	strlen@s,strlen@a
  7733  00399A  C002  F004         	movff	strlen@s+1,strlen@a+1
  7734  00399E  EFD3  F01C         	goto	i2l6024
  7735  0039A2                     i2l6022:
  7736  0039A2  4A01               	infsnz	strlen@s^0,f,c
  7737  0039A4  2A02               	incf	(strlen@s+1)^0,f,c
  7738  0039A6                     i2l6024:
  7739  0039A6  C001  FFD9         	movff	strlen@s,fsr2l
  7740  0039AA  C002  FFDA         	movff	strlen@s+1,fsr2h
  7741  0039AE  50DF               	movf	indf2,w,c
  7742  0039B0  A4D8               	btfss	status,2,c
  7743  0039B2  EFDD  F01C         	goto	i2u441_41
  7744  0039B6  EFDF  F01C         	goto	i2u441_40
  7745  0039BA                     i2u441_41:
  7746  0039BA  EFD1  F01C         	goto	i2l6022
  7747  0039BE                     i2u441_40:
  7748  0039BE  5003               	movf	strlen@a^0,w,c
  7749  0039C0  5C01               	subwf	strlen@s^0,w,c
  7750  0039C2  6E01               	movwf	?_strlen^0,c
  7751  0039C4  5004               	movf	(strlen@a+1)^0,w,c
  7752  0039C6  5802               	subwfb	(strlen@s+1)^0,w,c
  7753  0039C8  6E02               	movwf	(?_strlen+1)^0,c
  7754  0039CA  0012               	return		;funcret
  7755  0039CC                     __end_of_strlen:
  7756                           	callstack 0
  7757                           
  7758 ;; *************** function _fputs *****************
  7759 ;; Defined at:
  7760 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7763 ;;		 -> dbuf(32), 
  7764 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7765 ;;		 -> sprintf@f(11), 
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;  i               2   14[COMRAM] int 
  7768 ;;  c               1   13[COMRAM] unsigned char 
  7769 ;; Return value:  Size  Location     Type
  7770 ;;                  2    9[COMRAM] int 
  7771 ;; Registers used:
  7772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7773 ;; Tracked objects:
  7774 ;;		On entry : 0/0
  7775 ;;		On exit  : 0/0
  7776 ;;		Unchanged: 0/0
  7777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7778 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7779 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7781 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7782 ;;Total ram usage:        7 bytes
  7783 ;; Hardware stack levels used: 1
  7784 ;; Hardware stack levels required when called: 2
  7785 ;; This function calls:
  7786 ;;		_fputc
  7787 ;; This function is called by:
  7788 ;;		_pad
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           	psect	text57
  7793  003896                     __ptext57:
  7794                           	callstack 0
  7795  003896                     _fputs:
  7796                           	callstack 13
  7797  003896  0E00               	movlw	0
  7798  003898  6E10               	movwf	(fputs@i+1)^0,c
  7799  00389A  0E00               	movlw	0
  7800  00389C  6E0F               	movwf	fputs@i^0,c
  7801  00389E  EF5C  F01C         	goto	i2l6018
  7802  0038A2                     i2l6014:
  7803  0038A2  C00E  F001         	movff	fputs@c,fputc@c
  7804  0038A6  6A02               	clrf	(fputc@c+1)^0,c
  7805  0038A8  C00C  F003         	movff	fputs@fp,fputc@fp
  7806  0038AC  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7807  0038B0  ECDF  F015         	call	_fputc	;wreg free
  7808  0038B4  4A0F               	infsnz	fputs@i^0,f,c
  7809  0038B6  2A10               	incf	(fputs@i+1)^0,f,c
  7810  0038B8                     i2l6018:
  7811  0038B8  500F               	movf	fputs@i^0,w,c
  7812  0038BA  240A               	addwf	fputs@s^0,w,c
  7813  0038BC  6ED9               	movwf	fsr2l,c
  7814  0038BE  5010               	movf	(fputs@i+1)^0,w,c
  7815  0038C0  200B               	addwfc	(fputs@s+1)^0,w,c
  7816  0038C2  6EDA               	movwf	fsr2h,c
  7817  0038C4  50DF               	movf	indf2,w,c
  7818  0038C6  6E0E               	movwf	fputs@c^0,c
  7819  0038C8  500E               	movf	fputs@c^0,w,c
  7820  0038CA  A4D8               	btfss	status,2,c
  7821  0038CC  EF6A  F01C         	goto	i2u440_41
  7822  0038D0  EF6C  F01C         	goto	i2u440_40
  7823  0038D4                     i2u440_41:
  7824  0038D4  EF51  F01C         	goto	i2l6014
  7825  0038D8                     i2u440_40:
  7826  0038D8  0012               	return		;funcret
  7827  0038DA                     __end_of_fputs:
  7828                           	callstack 0
  7829                           
  7830 ;; *************** function _fputc *****************
  7831 ;; Defined at:
  7832 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;  c               2    0[COMRAM] int 
  7835 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7836 ;;		 -> sprintf@f(11), 
  7837 ;; Auto vars:     Size  Location     Type
  7838 ;;		None
  7839 ;; Return value:  Size  Location     Type
  7840 ;;                  2    0[COMRAM] int 
  7841 ;; Registers used:
  7842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7843 ;; Tracked objects:
  7844 ;;		On entry : 0/0
  7845 ;;		On exit  : 0/0
  7846 ;;		Unchanged: 0/0
  7847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7848 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7850 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7851 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7852 ;;Total ram usage:        9 bytes
  7853 ;; Hardware stack levels used: 1
  7854 ;; Hardware stack levels required when called: 1
  7855 ;; This function calls:
  7856 ;;		_putch
  7857 ;; This function is called by:
  7858 ;;		_pad
  7859 ;;		_vfpfcnvrt
  7860 ;;		_fputs
  7861 ;; This function uses a non-reentrant model
  7862 ;;
  7863                           
  7864                           	psect	text58
  7865  002BBE                     __ptext58:
  7866                           	callstack 0
  7867  002BBE                     _fputc:
  7868                           	callstack 16
  7869  002BBE  5003               	movf	fputc@fp^0,w,c
  7870  002BC0  1004               	iorwf	(fputc@fp+1)^0,w,c
  7871  002BC2  B4D8               	btfsc	status,2,c
  7872  002BC4  EFE6  F015         	goto	i2u436_41
  7873  002BC8  EFE8  F015         	goto	i2u436_40
  7874  002BCC                     i2u436_41:
  7875  002BCC  EFF1  F015         	goto	i2l6002
  7876  002BD0                     i2u436_40:
  7877  002BD0  5003               	movf	fputc@fp^0,w,c
  7878  002BD2  1004               	iorwf	(fputc@fp+1)^0,w,c
  7879  002BD4  A4D8               	btfss	status,2,c
  7880  002BD6  EFEF  F015         	goto	i2u437_41
  7881  002BDA  EFF1  F015         	goto	i2u437_40
  7882  002BDE                     i2u437_41:
  7883  002BDE  EFF6  F015         	goto	i2l6004
  7884  002BE2                     i2u437_40:
  7885  002BE2                     i2l6002:
  7886  002BE2  5001               	movf	fputc@c^0,w,c
  7887  002BE4  ECA8  F01D         	call	_putch
  7888  002BE8  EF43  F016         	goto	i2l2539
  7889  002BEC                     i2l6004:
  7890  002BEC  EE20 F009          	lfsr	2,9
  7891  002BF0  5003               	movf	fputc@fp^0,w,c
  7892  002BF2  26D9               	addwf	fsr2l,f,c
  7893  002BF4  5004               	movf	(fputc@fp+1)^0,w,c
  7894  002BF6  22DA               	addwfc	fsr2h,f,c
  7895  002BF8  50DE               	movf	postinc2,w,c
  7896  002BFA  10DE               	iorwf	postinc2,w,c
  7897  002BFC  B4D8               	btfsc	status,2,c
  7898  002BFE  EF03  F016         	goto	i2u438_41
  7899  002C02  EF05  F016         	goto	i2u438_40
  7900  002C06                     i2u438_41:
  7901  002C06  EF20  F016         	goto	i2l6008
  7902  002C0A                     i2u438_40:
  7903  002C0A  EE20 F009          	lfsr	2,9
  7904  002C0E  5003               	movf	fputc@fp^0,w,c
  7905  002C10  26D9               	addwf	fsr2l,f,c
  7906  002C12  5004               	movf	(fputc@fp+1)^0,w,c
  7907  002C14  22DA               	addwfc	fsr2h,f,c
  7908  002C16  EE10 F003          	lfsr	1,3
  7909  002C1A  5003               	movf	fputc@fp^0,w,c
  7910  002C1C  26E1               	addwf	fsr1l,f,c
  7911  002C1E  5004               	movf	(fputc@fp+1)^0,w,c
  7912  002C20  22E2               	addwfc	fsr1h,f,c
  7913  002C22  50DE               	movf	postinc2,w,c
  7914  002C24  5CE6               	subwf	postinc1,w,c
  7915  002C26  50E6               	movf	postinc1,w,c
  7916  002C28  0A80               	xorlw	128
  7917  002C2A  6E09               	movwf	(??_fputc+4)^0,c
  7918  002C2C  50DE               	movf	postinc2,w,c
  7919  002C2E  0A80               	xorlw	128
  7920  002C30  5809               	subwfb	(??_fputc+4)^0,w,c
  7921  002C32  B0D8               	btfsc	status,0,c
  7922  002C34  EF1E  F016         	goto	i2u439_41
  7923  002C38  EF20  F016         	goto	i2u439_40
  7924  002C3C                     i2u439_41:
  7925  002C3C  EF43  F016         	goto	i2l2539
  7926  002C40                     i2u439_40:
  7927  002C40                     i2l6008:
  7928  002C40  EE20 F003          	lfsr	2,3
  7929  002C44  5003               	movf	fputc@fp^0,w,c
  7930  002C46  26D9               	addwf	fsr2l,f,c
  7931  002C48  5004               	movf	(fputc@fp+1)^0,w,c
  7932  002C4A  22DA               	addwfc	fsr2h,f,c
  7933  002C4C  CFDE F005          	movff	postinc2,??_fputc
  7934  002C50  CFDD F006          	movff	postdec2,??_fputc+1
  7935  002C54  C003  FFD9         	movff	fputc@fp,fsr2l
  7936  002C58  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7937  002C5C  CFDE F007          	movff	postinc2,??_fputc+2
  7938  002C60  CFDD F008          	movff	postdec2,??_fputc+3
  7939  002C64  5005               	movf	??_fputc^0,w,c
  7940  002C66  2407               	addwf	(??_fputc+2)^0,w,c
  7941  002C68  6ED9               	movwf	fsr2l,c
  7942  002C6A  5006               	movf	(??_fputc+1)^0,w,c
  7943  002C6C  2008               	addwfc	(??_fputc+3)^0,w,c
  7944  002C6E  6EDA               	movwf	fsr2h,c
  7945  002C70  C001  FFDF         	movff	fputc@c,indf2
  7946  002C74  EE20 F003          	lfsr	2,3
  7947  002C78  5003               	movf	fputc@fp^0,w,c
  7948  002C7A  26D9               	addwf	fsr2l,f,c
  7949  002C7C  5004               	movf	(fputc@fp+1)^0,w,c
  7950  002C7E  22DA               	addwfc	fsr2h,f,c
  7951  002C80  2ADE               	incf	postinc2,f,c
  7952  002C82  0E00               	movlw	0
  7953  002C84  22DD               	addwfc	postdec2,f,c
  7954  002C86                     i2l2539:
  7955  002C86  0012               	return		;funcret
  7956  002C88                     __end_of_fputc:
  7957                           	callstack 0
  7958                           
  7959 ;; *************** function _putch *****************
  7960 ;; Defined at:
  7961 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;  c               1    wreg     unsigned char 
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;  c               1    0[COMRAM] unsigned char 
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  1    wreg      void 
  7968 ;; Registers used:
  7969 ;;		wreg
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7979 ;;Total ram usage:        0 bytes
  7980 ;; Hardware stack levels used: 1
  7981 ;; This function calls:
  7982 ;;		Nothing
  7983 ;; This function is called by:
  7984 ;;		_fputc
  7985 ;; This function uses a non-reentrant model
  7986 ;;
  7987                           
  7988                           	psect	text59
  7989  003B50                     __ptext59:
  7990                           	callstack 0
  7991  003B50                     _putch:
  7992                           	callstack 16
  7993  003B50  0012               	return		;funcret
  7994  003B52                     __end_of_putch:
  7995                           	callstack 0
  7996                           
  7997 ;; *************** function _abs *****************
  7998 ;; Defined at:
  7999 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  8000 ;; Parameters:    Size  Location     Type
  8001 ;;  a               2   18[COMRAM] int 
  8002 ;; Auto vars:     Size  Location     Type
  8003 ;;		None
  8004 ;; Return value:  Size  Location     Type
  8005 ;;                  2   18[COMRAM] int 
  8006 ;; Registers used:
  8007 ;;		wreg, status,2, status,0
  8008 ;; Tracked objects:
  8009 ;;		On entry : 0/0
  8010 ;;		On exit  : 0/0
  8011 ;;		Unchanged: 0/0
  8012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8013 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8015 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8016 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8017 ;;Total ram usage:        4 bytes
  8018 ;; Hardware stack levels used: 1
  8019 ;; This function calls:
  8020 ;;		Nothing
  8021 ;; This function is called by:
  8022 ;;		_dtoa
  8023 ;; This function uses a non-reentrant model
  8024 ;;
  8025                           
  8026                           	psect	text60
  8027  00391C                     __ptext60:
  8028                           	callstack 0
  8029  00391C                     _abs:
  8030                           	callstack 16
  8031  00391C  BE14               	btfsc	(abs@a+1)^0,7,c
  8032  00391E  EF9B  F01C         	goto	i2u459_40
  8033  003922  5014               	movf	(abs@a+1)^0,w,c
  8034  003924  E106               	bnz	i2u459_41
  8035  003926  0413               	decf	abs@a^0,w,c
  8036  003928  B0D8               	btfsc	status,0,c
  8037  00392A  EF99  F01C         	goto	i2u459_41
  8038  00392E  EF9B  F01C         	goto	i2u459_40
  8039  003932                     i2u459_41:
  8040  003932  EFA9  F01C         	goto	i2l2524
  8041  003936                     i2u459_40:
  8042  003936  C013  F015         	movff	abs@a,??_abs
  8043  00393A  C014  F016         	movff	abs@a+1,??_abs+1
  8044  00393E  1E15               	comf	??_abs^0,f,c
  8045  003940  1E16               	comf	(??_abs+1)^0,f,c
  8046  003942  4A15               	infsnz	??_abs^0,f,c
  8047  003944  2A16               	incf	(??_abs+1)^0,f,c
  8048  003946  C015  F013         	movff	??_abs,?_abs
  8049  00394A  C016  F014         	movff	??_abs+1,?_abs+1
  8050  00394E  EFAD  F01C         	goto	i2l2527
  8051  003952                     i2l2524:
  8052  003952  C013  F013         	movff	abs@a,?_abs
  8053  003956  C014  F014         	movff	abs@a+1,?_abs+1
  8054  00395A                     i2l2527:
  8055  00395A  0012               	return		;funcret
  8056  00395C                     __end_of_abs:
  8057                           	callstack 0
  8058                           
  8059 ;; *************** function ___aomod *****************
  8060 ;; Defined at:
  8061 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  8062 ;; Parameters:    Size  Location     Type
  8063 ;;  dividend        8    0[COMRAM] long long 
  8064 ;;  divisor         8    8[COMRAM] long long 
  8065 ;; Auto vars:     Size  Location     Type
  8066 ;;  sign            1   17[COMRAM] unsigned char 
  8067 ;;  counter         1   16[COMRAM] unsigned char 
  8068 ;; Return value:  Size  Location     Type
  8069 ;;                  8    0[COMRAM] long long 
  8070 ;; Registers used:
  8071 ;;		wreg, status,2, status,0
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8077 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8078 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8080 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8081 ;;Total ram usage:       18 bytes
  8082 ;; Hardware stack levels used: 1
  8083 ;; This function calls:
  8084 ;;		Nothing
  8085 ;; This function is called by:
  8086 ;;		_dtoa
  8087 ;; This function uses a non-reentrant model
  8088 ;;
  8089                           
  8090                           	psect	text61
  8091  002234                     __ptext61:
  8092                           	callstack 0
  8093  002234                     ___aomod:
  8094                           	callstack 16
  8095  002234  0E00               	movlw	0
  8096  002236  6E12               	movwf	___aomod@sign^0,c
  8097  002238  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8098  00223A  EF23  F011         	goto	i2u449_40
  8099  00223E  EF21  F011         	goto	i2u449_41
  8100  002242                     i2u449_41:
  8101  002242  EF35  F011         	goto	i2l6082
  8102  002246                     i2u449_40:
  8103  002246  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8104  002248  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8105  00224A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8106  00224C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8107  00224E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8108  002250  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8109  002252  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8110  002254  6C01               	negf	___aomod@dividend^0,c
  8111  002256  0E00               	movlw	0
  8112  002258  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8113  00225A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8114  00225C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8115  00225E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8116  002260  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8117  002262  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8118  002264  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8119  002266  0E01               	movlw	1
  8120  002268  6E12               	movwf	___aomod@sign^0,c
  8121  00226A                     i2l6082:
  8122  00226A  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8123  00226C  EF3C  F011         	goto	i2u450_40
  8124  002270  EF3A  F011         	goto	i2u450_41
  8125  002274                     i2u450_41:
  8126  002274  EF4C  F011         	goto	i2l6086
  8127  002278                     i2u450_40:
  8128  002278  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8129  00227A  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8130  00227C  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8131  00227E  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8132  002280  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8133  002282  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8134  002284  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8135  002286  6C09               	negf	___aomod@divisor^0,c
  8136  002288  0E00               	movlw	0
  8137  00228A  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8138  00228C  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8139  00228E  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8140  002290  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8141  002292  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8142  002294  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8143  002296  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8144  002298                     i2l6086:
  8145  002298  5009               	movf	___aomod@divisor^0,w,c
  8146  00229A  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8147  00229C  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8148  00229E  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8149  0022A0  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8150  0022A2  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8151  0022A4  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8152  0022A6  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8153  0022A8  B4D8               	btfsc	status,2,c
  8154  0022AA  EF59  F011         	goto	i2u451_41
  8155  0022AE  EF5B  F011         	goto	i2u451_40
  8156  0022B2                     i2u451_41:
  8157  0022B2  EFA3  F011         	goto	i2l6102
  8158  0022B6                     i2u451_40:
  8159  0022B6  0E01               	movlw	1
  8160  0022B8  6E11               	movwf	___aomod@counter^0,c
  8161  0022BA  EF69  F011         	goto	i2l6092
  8162  0022BE                     i2l6090:
  8163  0022BE  90D8               	bcf	status,0,c
  8164  0022C0  3609               	rlcf	___aomod@divisor^0,f,c
  8165  0022C2  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8166  0022C4  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8167  0022C6  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8168  0022C8  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8169  0022CA  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8170  0022CC  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8171  0022CE  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8172  0022D0  2A11               	incf	___aomod@counter^0,f,c
  8173  0022D2                     i2l6092:
  8174  0022D2  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8175  0022D4  EF6E  F011         	goto	i2u452_41
  8176  0022D8  EF70  F011         	goto	i2u452_40
  8177  0022DC                     i2u452_41:
  8178  0022DC  EF5F  F011         	goto	i2l6090
  8179  0022E0                     i2u452_40:
  8180  0022E0                     i2l6094:
  8181  0022E0  5009               	movf	___aomod@divisor^0,w,c
  8182  0022E2  5C01               	subwf	___aomod@dividend^0,w,c
  8183  0022E4  500A               	movf	(___aomod@divisor+1)^0,w,c
  8184  0022E6  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8185  0022E8  500B               	movf	(___aomod@divisor+2)^0,w,c
  8186  0022EA  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8187  0022EC  500C               	movf	(___aomod@divisor+3)^0,w,c
  8188  0022EE  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8189  0022F0  500D               	movf	(___aomod@divisor+4)^0,w,c
  8190  0022F2  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8191  0022F4  500E               	movf	(___aomod@divisor+5)^0,w,c
  8192  0022F6  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8193  0022F8  500F               	movf	(___aomod@divisor+6)^0,w,c
  8194  0022FA  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8195  0022FC  5010               	movf	(___aomod@divisor+7)^0,w,c
  8196  0022FE  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8197  002300  A0D8               	btfss	status,0,c
  8198  002302  EF85  F011         	goto	i2u453_41
  8199  002306  EF87  F011         	goto	i2u453_40
  8200  00230A                     i2u453_41:
  8201  00230A  EF97  F011         	goto	i2l6098
  8202  00230E                     i2u453_40:
  8203  00230E  5009               	movf	___aomod@divisor^0,w,c
  8204  002310  5E01               	subwf	___aomod@dividend^0,f,c
  8205  002312  500A               	movf	(___aomod@divisor+1)^0,w,c
  8206  002314  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8207  002316  500B               	movf	(___aomod@divisor+2)^0,w,c
  8208  002318  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8209  00231A  500C               	movf	(___aomod@divisor+3)^0,w,c
  8210  00231C  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8211  00231E  500D               	movf	(___aomod@divisor+4)^0,w,c
  8212  002320  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8213  002322  500E               	movf	(___aomod@divisor+5)^0,w,c
  8214  002324  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8215  002326  500F               	movf	(___aomod@divisor+6)^0,w,c
  8216  002328  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8217  00232A  5010               	movf	(___aomod@divisor+7)^0,w,c
  8218  00232C  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8219  00232E                     i2l6098:
  8220  00232E  90D8               	bcf	status,0,c
  8221  002330  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8222  002332  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8223  002334  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8224  002336  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8225  002338  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8226  00233A  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8227  00233C  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8228  00233E  3209               	rrcf	___aomod@divisor^0,f,c
  8229  002340  2E11               	decfsz	___aomod@counter^0,f,c
  8230  002342  EF70  F011         	goto	i2l6094
  8231  002346                     i2l6102:
  8232  002346  5012               	movf	___aomod@sign^0,w,c
  8233  002348  B4D8               	btfsc	status,2,c
  8234  00234A  EFA9  F011         	goto	i2u454_41
  8235  00234E  EFAB  F011         	goto	i2u454_40
  8236  002352                     i2u454_41:
  8237  002352  EFBB  F011         	goto	i2l6106
  8238  002356                     i2u454_40:
  8239  002356  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8240  002358  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8241  00235A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8242  00235C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8243  00235E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8244  002360  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8245  002362  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8246  002364  6C01               	negf	___aomod@dividend^0,c
  8247  002366  0E00               	movlw	0
  8248  002368  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8249  00236A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8250  00236C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8251  00236E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8252  002370  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8253  002372  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8254  002374  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8255  002376                     i2l6106:
  8256  002376  C001  F001         	movff	___aomod@dividend,?___aomod
  8257  00237A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8258  00237E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8259  002382  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8260  002386  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8261  00238A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8262  00238E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8263  002392  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8264  002396  0012               	return		;funcret
  8265  002398                     __end_of___aomod:
  8266                           	callstack 0
  8267                           
  8268 ;; *************** function ___aodiv *****************
  8269 ;; Defined at:
  8270 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;  dividend        8    0[COMRAM] long long 
  8273 ;;  divisor         8    8[COMRAM] long long 
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;  quotient        8   18[COMRAM] long long 
  8276 ;;  sign            1   17[COMRAM] unsigned char 
  8277 ;;  counter         1   16[COMRAM] unsigned char 
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  8    0[COMRAM] long long 
  8280 ;; Registers used:
  8281 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8287 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8288 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8290 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8291 ;;Total ram usage:       26 bytes
  8292 ;; Hardware stack levels used: 1
  8293 ;; This function calls:
  8294 ;;		Nothing
  8295 ;; This function is called by:
  8296 ;;		_dtoa
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           	psect	text62
  8301  001F36                     __ptext62:
  8302                           	callstack 0
  8303  001F36                     ___aodiv:
  8304                           	callstack 16
  8305  001F36  0E00               	movlw	0
  8306  001F38  6E12               	movwf	___aodiv@sign^0,c
  8307  001F3A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8308  001F3C  EFA4  F00F         	goto	i2u442_40
  8309  001F40  EFA2  F00F         	goto	i2u442_41
  8310  001F44                     i2u442_41:
  8311  001F44  EFB6  F00F         	goto	i2l6038
  8312  001F48                     i2u442_40:
  8313  001F48  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8314  001F4A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8315  001F4C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8316  001F4E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8317  001F50  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8318  001F52  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8319  001F54  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8320  001F56  6C09               	negf	___aodiv@divisor^0,c
  8321  001F58  0E00               	movlw	0
  8322  001F5A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8323  001F5C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8324  001F5E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8325  001F60  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8326  001F62  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8327  001F64  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8328  001F66  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8329  001F68  0E01               	movlw	1
  8330  001F6A  6E12               	movwf	___aodiv@sign^0,c
  8331  001F6C                     i2l6038:
  8332  001F6C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8333  001F6E  EFBD  F00F         	goto	i2u443_40
  8334  001F72  EFBB  F00F         	goto	i2u443_41
  8335  001F76                     i2u443_41:
  8336  001F76  EFCF  F00F         	goto	i2l6044
  8337  001F7A                     i2u443_40:
  8338  001F7A  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8339  001F7C  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8340  001F7E  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8341  001F80  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8342  001F82  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8343  001F84  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8344  001F86  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8345  001F88  6C01               	negf	___aodiv@dividend^0,c
  8346  001F8A  0E00               	movlw	0
  8347  001F8C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8348  001F8E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8349  001F90  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8350  001F92  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8351  001F94  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8352  001F96  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8353  001F98  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8354  001F9A  0E01               	movlw	1
  8355  001F9C  1A12               	xorwf	___aodiv@sign^0,f,c
  8356  001F9E                     i2l6044:
  8357  001F9E  EE20  F013         	lfsr	2,___aodiv@quotient
  8358  001FA2  0E07               	movlw	7
  8359  001FA4                     i2u444_41:
  8360  001FA4  6ADE               	clrf	postinc2,c
  8361  001FA6  06E8               	decf	wreg,f,c
  8362  001FA8  E2FD               	bc	i2u444_41
  8363  001FAA  5009               	movf	___aodiv@divisor^0,w,c
  8364  001FAC  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8365  001FAE  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8366  001FB0  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8367  001FB2  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8368  001FB4  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8369  001FB6  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8370  001FB8  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8371  001FBA  B4D8               	btfsc	status,2,c
  8372  001FBC  EFE2  F00F         	goto	i2u445_41
  8373  001FC0  EFE4  F00F         	goto	i2u445_40
  8374  001FC4                     i2u445_41:
  8375  001FC4  EF36  F010         	goto	i2l6066
  8376  001FC8                     i2u445_40:
  8377  001FC8  0E01               	movlw	1
  8378  001FCA  6E11               	movwf	___aodiv@counter^0,c
  8379  001FCC  EFF2  F00F         	goto	i2l6052
  8380  001FD0                     i2l6050:
  8381  001FD0  90D8               	bcf	status,0,c
  8382  001FD2  3609               	rlcf	___aodiv@divisor^0,f,c
  8383  001FD4  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8384  001FD6  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8385  001FD8  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8386  001FDA  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8387  001FDC  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8388  001FDE  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8389  001FE0  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8390  001FE2  2A11               	incf	___aodiv@counter^0,f,c
  8391  001FE4                     i2l6052:
  8392  001FE4  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8393  001FE6  EFF7  F00F         	goto	i2u446_41
  8394  001FEA  EFF9  F00F         	goto	i2u446_40
  8395  001FEE                     i2u446_41:
  8396  001FEE  EFE8  F00F         	goto	i2l6050
  8397  001FF2                     i2u446_40:
  8398  001FF2                     i2l6054:
  8399  001FF2  90D8               	bcf	status,0,c
  8400  001FF4  3613               	rlcf	___aodiv@quotient^0,f,c
  8401  001FF6  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8402  001FF8  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8403  001FFA  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8404  001FFC  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8405  001FFE  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8406  002000  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8407  002002  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8408  002004  5009               	movf	___aodiv@divisor^0,w,c
  8409  002006  5C01               	subwf	___aodiv@dividend^0,w,c
  8410  002008  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8411  00200A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8412  00200C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8413  00200E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8414  002010  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8415  002012  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8416  002014  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8417  002016  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8418  002018  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8419  00201A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8420  00201C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8421  00201E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8422  002020  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8423  002022  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8424  002024  A0D8               	btfss	status,0,c
  8425  002026  EF17  F010         	goto	i2u447_41
  8426  00202A  EF19  F010         	goto	i2u447_40
  8427  00202E                     i2u447_41:
  8428  00202E  EF2A  F010         	goto	i2l6062
  8429  002032                     i2u447_40:
  8430  002032  5009               	movf	___aodiv@divisor^0,w,c
  8431  002034  5E01               	subwf	___aodiv@dividend^0,f,c
  8432  002036  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8433  002038  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8434  00203A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8435  00203C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8436  00203E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8437  002040  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8438  002042  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8439  002044  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8440  002046  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8441  002048  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8442  00204A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8443  00204C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8444  00204E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8445  002050  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8446  002052  8013               	bsf	___aodiv@quotient^0,0,c
  8447  002054                     i2l6062:
  8448  002054  90D8               	bcf	status,0,c
  8449  002056  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8450  002058  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8451  00205A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8452  00205C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8453  00205E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8454  002060  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8455  002062  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8456  002064  3209               	rrcf	___aodiv@divisor^0,f,c
  8457  002066  2E11               	decfsz	___aodiv@counter^0,f,c
  8458  002068  EFF9  F00F         	goto	i2l6054
  8459  00206C                     i2l6066:
  8460  00206C  5012               	movf	___aodiv@sign^0,w,c
  8461  00206E  B4D8               	btfsc	status,2,c
  8462  002070  EF3C  F010         	goto	i2u448_41
  8463  002074  EF3E  F010         	goto	i2u448_40
  8464  002078                     i2u448_41:
  8465  002078  EF4E  F010         	goto	i2l6070
  8466  00207C                     i2u448_40:
  8467  00207C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8468  00207E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8469  002080  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8470  002082  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8471  002084  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8472  002086  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8473  002088  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8474  00208A  6C13               	negf	___aodiv@quotient^0,c
  8475  00208C  0E00               	movlw	0
  8476  00208E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8477  002090  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8478  002092  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8479  002094  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8480  002096  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8481  002098  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8482  00209A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8483  00209C                     i2l6070:
  8484  00209C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8485  0020A0  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8486  0020A4  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8487  0020A8  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8488  0020AC  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8489  0020B0  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8490  0020B4  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8491  0020B8  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8492  0020BC  0012               	return		;funcret
  8493  0020BE                     __end_of___aodiv:
  8494                           	callstack 0
  8495                           
  8496 ;; *************** function _memset *****************
  8497 ;; Defined at:
  8498 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memset.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;  dest            2    0[COMRAM] PTR void 
  8501 ;;		 -> adcArray(7), 
  8502 ;;  c               2    2[COMRAM] int 
  8503 ;;  n               2    4[COMRAM] unsigned int 
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;  s               2   10[COMRAM] PTR unsigned char 
  8506 ;;		 -> adcArray(7), 
  8507 ;;  k               2    8[COMRAM] unsigned int 
  8508 ;; Return value:  Size  Location     Type
  8509 ;;                  2    0[COMRAM] PTR void 
  8510 ;; Registers used:
  8511 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8512 ;; Tracked objects:
  8513 ;;		On entry : 0/0
  8514 ;;		On exit  : 0/0
  8515 ;;		Unchanged: 0/0
  8516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8517 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8518 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8519 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8520 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8521 ;;Total ram usage:       12 bytes
  8522 ;; Hardware stack levels used: 1
  8523 ;; This function calls:
  8524 ;;		Nothing
  8525 ;; This function is called by:
  8526 ;;		_convert_uint8_to_string
  8527 ;;		_convert_uint16_to_string
  8528 ;;		_convert_uint32_to_string
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           
  8532                           	psect	text63
  8533  0020BE                     __ptext63:
  8534                           	callstack 0
  8535  0020BE                     _memset:
  8536                           	callstack 20
  8537  0020BE  C001  F00B         	movff	memset@dest,memset@s
  8538  0020C2  C002  F00C         	movff	memset@dest+1,memset@s+1
  8539  0020C6  5005               	movf	memset@n^0,w,c
  8540  0020C8  1006               	iorwf	(memset@n+1)^0,w,c
  8541  0020CA  A4D8               	btfss	status,2,c
  8542  0020CC  EF6A  F010         	goto	i2u496_41
  8543  0020D0  EF6C  F010         	goto	i2u496_40
  8544  0020D4                     i2u496_41:
  8545  0020D4  EF6E  F010         	goto	i2l6392
  8546  0020D8                     i2u496_40:
  8547  0020D8  EF19  F011         	goto	i2l2435
  8548  0020DC                     i2l6392:
  8549  0020DC  C00B  FFD9         	movff	memset@s,fsr2l
  8550  0020E0  C00C  FFDA         	movff	memset@s+1,fsr2h
  8551  0020E4  C003  FFDF         	movff	memset@c,indf2
  8552  0020E8  5005               	movf	memset@n^0,w,c
  8553  0020EA  240B               	addwf	memset@s^0,w,c
  8554  0020EC  6E07               	movwf	??_memset^0,c
  8555  0020EE  5006               	movf	(memset@n+1)^0,w,c
  8556  0020F0  200C               	addwfc	(memset@s+1)^0,w,c
  8557  0020F2  6E08               	movwf	(??_memset+1)^0,c
  8558  0020F4  0EFF               	movlw	255
  8559  0020F6  2407               	addwf	??_memset^0,w,c
  8560  0020F8  6ED9               	movwf	fsr2l,c
  8561  0020FA  0EFF               	movlw	255
  8562  0020FC  2008               	addwfc	(??_memset+1)^0,w,c
  8563  0020FE  6EDA               	movwf	fsr2h,c
  8564  002100  C003  FFDF         	movff	memset@c,indf2
  8565  002104  5006               	movf	(memset@n+1)^0,w,c
  8566  002106  E107               	bnz	i2u497_41
  8567  002108  0E03               	movlw	3
  8568  00210A  5C05               	subwf	memset@n^0,w,c
  8569  00210C  B0D8               	btfsc	status,0,c
  8570  00210E  EF8B  F010         	goto	i2u497_41
  8571  002112  EF8D  F010         	goto	i2u497_40
  8572  002116                     i2u497_41:
  8573  002116  EF8F  F010         	goto	i2l6398
  8574  00211A                     i2u497_40:
  8575  00211A  EF19  F011         	goto	i2l2435
  8576  00211E                     i2l6398:
  8577  00211E  EE20 F001          	lfsr	2,1
  8578  002122  500B               	movf	memset@s^0,w,c
  8579  002124  26D9               	addwf	fsr2l,f,c
  8580  002126  500C               	movf	(memset@s+1)^0,w,c
  8581  002128  22DA               	addwfc	fsr2h,f,c
  8582  00212A  C003  FFDF         	movff	memset@c,indf2
  8583  00212E  EE20 F002          	lfsr	2,2
  8584  002132  500B               	movf	memset@s^0,w,c
  8585  002134  26D9               	addwf	fsr2l,f,c
  8586  002136  500C               	movf	(memset@s+1)^0,w,c
  8587  002138  22DA               	addwfc	fsr2h,f,c
  8588  00213A  C003  FFDF         	movff	memset@c,indf2
  8589  00213E  5005               	movf	memset@n^0,w,c
  8590  002140  240B               	addwf	memset@s^0,w,c
  8591  002142  6E07               	movwf	??_memset^0,c
  8592  002144  5006               	movf	(memset@n+1)^0,w,c
  8593  002146  200C               	addwfc	(memset@s+1)^0,w,c
  8594  002148  6E08               	movwf	(??_memset+1)^0,c
  8595  00214A  0EFE               	movlw	254
  8596  00214C  2407               	addwf	??_memset^0,w,c
  8597  00214E  6ED9               	movwf	fsr2l,c
  8598  002150  0EFF               	movlw	255
  8599  002152  2008               	addwfc	(??_memset+1)^0,w,c
  8600  002154  6EDA               	movwf	fsr2h,c
  8601  002156  C003  FFDF         	movff	memset@c,indf2
  8602  00215A  5005               	movf	memset@n^0,w,c
  8603  00215C  240B               	addwf	memset@s^0,w,c
  8604  00215E  6E07               	movwf	??_memset^0,c
  8605  002160  5006               	movf	(memset@n+1)^0,w,c
  8606  002162  200C               	addwfc	(memset@s+1)^0,w,c
  8607  002164  6E08               	movwf	(??_memset+1)^0,c
  8608  002166  0EFD               	movlw	253
  8609  002168  2407               	addwf	??_memset^0,w,c
  8610  00216A  6ED9               	movwf	fsr2l,c
  8611  00216C  0EFF               	movlw	255
  8612  00216E  2008               	addwfc	(??_memset+1)^0,w,c
  8613  002170  6EDA               	movwf	fsr2h,c
  8614  002172  C003  FFDF         	movff	memset@c,indf2
  8615  002176  5006               	movf	(memset@n+1)^0,w,c
  8616  002178  E107               	bnz	i2u498_41
  8617  00217A  0E07               	movlw	7
  8618  00217C  5C05               	subwf	memset@n^0,w,c
  8619  00217E  B0D8               	btfsc	status,0,c
  8620  002180  EFC4  F010         	goto	i2u498_41
  8621  002184  EFC6  F010         	goto	i2u498_40
  8622  002188                     i2u498_41:
  8623  002188  EFC8  F010         	goto	i2l6404
  8624  00218C                     i2u498_40:
  8625  00218C  EF19  F011         	goto	i2l2435
  8626  002190                     i2l6404:
  8627  002190  EE20 F003          	lfsr	2,3
  8628  002194  500B               	movf	memset@s^0,w,c
  8629  002196  26D9               	addwf	fsr2l,f,c
  8630  002198  500C               	movf	(memset@s+1)^0,w,c
  8631  00219A  22DA               	addwfc	fsr2h,f,c
  8632  00219C  C003  FFDF         	movff	memset@c,indf2
  8633  0021A0  5005               	movf	memset@n^0,w,c
  8634  0021A2  240B               	addwf	memset@s^0,w,c
  8635  0021A4  6E07               	movwf	??_memset^0,c
  8636  0021A6  5006               	movf	(memset@n+1)^0,w,c
  8637  0021A8  200C               	addwfc	(memset@s+1)^0,w,c
  8638  0021AA  6E08               	movwf	(??_memset+1)^0,c
  8639  0021AC  0EFC               	movlw	252
  8640  0021AE  2407               	addwf	??_memset^0,w,c
  8641  0021B0  6ED9               	movwf	fsr2l,c
  8642  0021B2  0EFF               	movlw	255
  8643  0021B4  2008               	addwfc	(??_memset+1)^0,w,c
  8644  0021B6  6EDA               	movwf	fsr2h,c
  8645  0021B8  C003  FFDF         	movff	memset@c,indf2
  8646  0021BC  5006               	movf	(memset@n+1)^0,w,c
  8647  0021BE  E107               	bnz	i2u499_41
  8648  0021C0  0E09               	movlw	9
  8649  0021C2  5C05               	subwf	memset@n^0,w,c
  8650  0021C4  B0D8               	btfsc	status,0,c
  8651  0021C6  EFE7  F010         	goto	i2u499_41
  8652  0021CA  EFE9  F010         	goto	i2u499_40
  8653  0021CE                     i2u499_41:
  8654  0021CE  EFEB  F010         	goto	i2l6410
  8655  0021D2                     i2u499_40:
  8656  0021D2  EF19  F011         	goto	i2l2435
  8657  0021D6                     i2l6410:
  8658  0021D6  C00B  F007         	movff	memset@s,??_memset
  8659  0021DA  C00C  F008         	movff	memset@s+1,??_memset+1
  8660  0021DE  1E07               	comf	??_memset^0,f,c
  8661  0021E0  1E08               	comf	(??_memset+1)^0,f,c
  8662  0021E2  4A07               	infsnz	??_memset^0,f,c
  8663  0021E4  2A08               	incf	(??_memset+1)^0,f,c
  8664  0021E6  0E03               	movlw	3
  8665  0021E8  1407               	andwf	??_memset^0,w,c
  8666  0021EA  6E09               	movwf	memset@k^0,c
  8667  0021EC  6A0A               	clrf	(memset@k+1)^0,c
  8668  0021EE  5009               	movf	memset@k^0,w,c
  8669  0021F0  260B               	addwf	memset@s^0,f,c
  8670  0021F2  500A               	movf	(memset@k+1)^0,w,c
  8671  0021F4  220C               	addwfc	(memset@s+1)^0,f,c
  8672  0021F6  5009               	movf	memset@k^0,w,c
  8673  0021F8  5E05               	subwf	memset@n^0,f,c
  8674  0021FA  500A               	movf	(memset@k+1)^0,w,c
  8675  0021FC  5A06               	subwfb	(memset@n+1)^0,f,c
  8676  0021FE  0EFC               	movlw	252
  8677  002200  1605               	andwf	memset@n^0,f,c
  8678  002202  0EFF               	movlw	255
  8679  002204  1606               	andwf	(memset@n+1)^0,f,c
  8680  002206  EF10  F011         	goto	i2l6418
  8681  00220A                     i2l6412:
  8682  00220A  C00B  FFD9         	movff	memset@s,fsr2l
  8683  00220E  C00C  FFDA         	movff	memset@s+1,fsr2h
  8684  002212  C003  FFDF         	movff	memset@c,indf2
  8685  002216  0605               	decf	memset@n^0,f,c
  8686  002218  A0D8               	btfss	status,0,c
  8687  00221A  0606               	decf	(memset@n+1)^0,f,c
  8688  00221C  4A0B               	infsnz	memset@s^0,f,c
  8689  00221E  2A0C               	incf	(memset@s+1)^0,f,c
  8690  002220                     i2l6418:
  8691  002220  5005               	movf	memset@n^0,w,c
  8692  002222  1006               	iorwf	(memset@n+1)^0,w,c
  8693  002224  A4D8               	btfss	status,2,c
  8694  002226  EF17  F011         	goto	i2u500_41
  8695  00222A  EF19  F011         	goto	i2u500_40
  8696  00222E                     i2u500_41:
  8697  00222E  EF05  F011         	goto	i2l6412
  8698  002232                     i2u500_40:
  8699  002232                     i2l2435:
  8700  002232  0012               	return		;funcret
  8701  002234                     __end_of_memset:
  8702                           	callstack 0
  8703                           
  8704 ;; *************** function ___xxtofl *****************
  8705 ;; Defined at:
  8706 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  8707 ;; Parameters:    Size  Location     Type
  8708 ;;  sign            1    wreg     unsigned char 
  8709 ;;  val             4    0[COMRAM] long 
  8710 ;; Auto vars:     Size  Location     Type
  8711 ;;  sign            1    8[COMRAM] unsigned char 
  8712 ;;  arg             4   10[COMRAM] unsigned long 
  8713 ;;  exp             1    9[COMRAM] unsigned char 
  8714 ;; Return value:  Size  Location     Type
  8715 ;;                  4    0[COMRAM] unsigned char 
  8716 ;; Registers used:
  8717 ;;		wreg, status,2, status,0
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8723 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8724 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8725 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8726 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8727 ;;Total ram usage:       14 bytes
  8728 ;; Hardware stack levels used: 1
  8729 ;; This function calls:
  8730 ;;		Nothing
  8731 ;; This function is called by:
  8732 ;;		_adcInterruptHandeler
  8733 ;;		_Ultrasonic_Calculate_Distance
  8734 ;;		_CCP_PWM_Set_Duty
  8735 ;;		_CCP_PWM_Mode_Config
  8736 ;;		_I2C_Master_Mode_Clock_Configurations
  8737 ;;		_EUSART_Baud_Rate_Calculation
  8738 ;; This function uses a non-reentrant model
  8739 ;;
  8740                           
  8741                           	psect	text64
  8742  001D82                     __ptext64:
  8743                           	callstack 0
  8744  001D82                     ___xxtofl:
  8745                           	callstack 21
  8746                           
  8747                           ;incstack = 0
  8748                           ;___xxtofl@sign stored from wreg
  8749  001D82  6E09               	movwf	___xxtofl@sign^0,c
  8750  001D84  5009               	movf	___xxtofl@sign^0,w,c
  8751  001D86  B4D8               	btfsc	status,2,c
  8752  001D88  EFC8  F00E         	goto	i2u544_41
  8753  001D8C  EFCA  F00E         	goto	i2u544_40
  8754  001D90                     i2u544_41:
  8755  001D90  EFEC  F00E         	goto	i2l2415
  8756  001D94                     i2u544_40:
  8757  001D94  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8758  001D96  EFD1  F00E         	goto	i2u545_40
  8759  001D9A  EFCF  F00E         	goto	i2u545_41
  8760  001D9E                     i2u545_41:
  8761  001D9E  EFEC  F00E         	goto	i2l2415
  8762  001DA2                     i2u545_40:
  8763  001DA2  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8764  001DA6  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8765  001DAA  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8766  001DAE  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8767  001DB2  1E05               	comf	??___xxtofl^0,f,c
  8768  001DB4  1E06               	comf	(??___xxtofl+1)^0,f,c
  8769  001DB6  1E07               	comf	(??___xxtofl+2)^0,f,c
  8770  001DB8  1E08               	comf	(??___xxtofl+3)^0,f,c
  8771  001DBA  2A05               	incf	??___xxtofl^0,f,c
  8772  001DBC  0E00               	movlw	0
  8773  001DBE  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8774  001DC0  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8775  001DC2  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8776  001DC4  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8777  001DC8  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8778  001DCC  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8779  001DD0  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8780  001DD4  EFF4  F00E         	goto	i2l6816
  8781  001DD8                     i2l2415:
  8782  001DD8  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8783  001DDC  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8784  001DE0  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8785  001DE4  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8786  001DE8                     i2l6816:
  8787  001DE8  5001               	movf	___xxtofl@val^0,w,c
  8788  001DEA  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8789  001DEC  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8790  001DEE  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8791  001DF0  A4D8               	btfss	status,2,c
  8792  001DF2  EFFD  F00E         	goto	i2u546_41
  8793  001DF6  EFFF  F00E         	goto	i2u546_40
  8794  001DFA                     i2u546_41:
  8795  001DFA  EF09  F00F         	goto	i2l6822
  8796  001DFE                     i2u546_40:
  8797  001DFE  0E00               	movlw	0
  8798  001E00  6E01               	movwf	?___xxtofl^0,c
  8799  001E02  0E00               	movlw	0
  8800  001E04  6E02               	movwf	(?___xxtofl+1)^0,c
  8801  001E06  0E00               	movlw	0
  8802  001E08  6E03               	movwf	(?___xxtofl+2)^0,c
  8803  001E0A  0E00               	movlw	0
  8804  001E0C  6E04               	movwf	(?___xxtofl+3)^0,c
  8805  001E0E  EF9A  F00F         	goto	i2l2418
  8806  001E12                     i2l6822:
  8807  001E12  0E96               	movlw	150
  8808  001E14  6E0A               	movwf	___xxtofl@exp^0,c
  8809  001E16  EF13  F00F         	goto	i2l6826
  8810  001E1A                     i2l6824:
  8811  001E1A  2A0A               	incf	___xxtofl@exp^0,f,c
  8812  001E1C  90D8               	bcf	status,0,c
  8813  001E1E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8814  001E20  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8815  001E22  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8816  001E24  320B               	rrcf	___xxtofl@arg^0,f,c
  8817  001E26                     i2l6826:
  8818  001E26  0E00               	movlw	0
  8819  001E28  140B               	andwf	___xxtofl@arg^0,w,c
  8820  001E2A  6E05               	movwf	??___xxtofl^0,c
  8821  001E2C  0E00               	movlw	0
  8822  001E2E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8823  001E30  6E06               	movwf	(??___xxtofl+1)^0,c
  8824  001E32  0E00               	movlw	0
  8825  001E34  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8826  001E36  6E07               	movwf	(??___xxtofl+2)^0,c
  8827  001E38  0EFE               	movlw	254
  8828  001E3A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8829  001E3C  6E08               	movwf	(??___xxtofl+3)^0,c
  8830  001E3E  5005               	movf	??___xxtofl^0,w,c
  8831  001E40  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8832  001E42  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8833  001E44  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8834  001E46  A4D8               	btfss	status,2,c
  8835  001E48  EF28  F00F         	goto	i2u547_41
  8836  001E4C  EF2A  F00F         	goto	i2u547_40
  8837  001E50                     i2u547_41:
  8838  001E50  EF0D  F00F         	goto	i2l6824
  8839  001E54                     i2u547_40:
  8840  001E54  EF38  F00F         	goto	i2l2422
  8841  001E58                     i2l6828:
  8842  001E58  2A0A               	incf	___xxtofl@exp^0,f,c
  8843  001E5A  0E01               	movlw	1
  8844  001E5C  260B               	addwf	___xxtofl@arg^0,f,c
  8845  001E5E  0E00               	movlw	0
  8846  001E60  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8847  001E62  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8848  001E64  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8849  001E66  90D8               	bcf	status,0,c
  8850  001E68  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8851  001E6A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8852  001E6C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8853  001E6E  320B               	rrcf	___xxtofl@arg^0,f,c
  8854  001E70                     i2l2422:
  8855  001E70  0E00               	movlw	0
  8856  001E72  140B               	andwf	___xxtofl@arg^0,w,c
  8857  001E74  6E05               	movwf	??___xxtofl^0,c
  8858  001E76  0E00               	movlw	0
  8859  001E78  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8860  001E7A  6E06               	movwf	(??___xxtofl+1)^0,c
  8861  001E7C  0E00               	movlw	0
  8862  001E7E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8863  001E80  6E07               	movwf	(??___xxtofl+2)^0,c
  8864  001E82  0EFF               	movlw	255
  8865  001E84  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8866  001E86  6E08               	movwf	(??___xxtofl+3)^0,c
  8867  001E88  5005               	movf	??___xxtofl^0,w,c
  8868  001E8A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8869  001E8C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8870  001E8E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8871  001E90  A4D8               	btfss	status,2,c
  8872  001E92  EF4D  F00F         	goto	i2u548_41
  8873  001E96  EF4F  F00F         	goto	i2u548_40
  8874  001E9A                     i2u548_41:
  8875  001E9A  EF2C  F00F         	goto	i2l6828
  8876  001E9E                     i2u548_40:
  8877  001E9E  EF57  F00F         	goto	i2l6836
  8878  001EA2                     i2l6834:
  8879  001EA2  060A               	decf	___xxtofl@exp^0,f,c
  8880  001EA4  90D8               	bcf	status,0,c
  8881  001EA6  360B               	rlcf	___xxtofl@arg^0,f,c
  8882  001EA8  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8883  001EAA  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8884  001EAC  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8885  001EAE                     i2l6836:
  8886  001EAE  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8887  001EB0  EF5C  F00F         	goto	i2u549_41
  8888  001EB4  EF5E  F00F         	goto	i2u549_40
  8889  001EB8                     i2u549_41:
  8890  001EB8  EF66  F00F         	goto	i2l2429
  8891  001EBC                     i2u549_40:
  8892  001EBC  0E02               	movlw	2
  8893  001EBE  600A               	cpfslt	___xxtofl@exp^0,c
  8894  001EC0  EF64  F00F         	goto	i2u550_41
  8895  001EC4  EF66  F00F         	goto	i2u550_40
  8896  001EC8                     i2u550_41:
  8897  001EC8  EF51  F00F         	goto	i2l6834
  8898  001ECC                     i2u550_40:
  8899  001ECC                     i2l2429:
  8900  001ECC  B00A               	btfsc	___xxtofl@exp^0,0,c
  8901  001ECE  EF6B  F00F         	goto	i2u551_41
  8902  001ED2  EF6D  F00F         	goto	i2u551_40
  8903  001ED6                     i2u551_41:
  8904  001ED6  EF6E  F00F         	goto	i2l6842
  8905  001EDA                     i2u551_40:
  8906  001EDA  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8907  001EDC                     i2l6842:
  8908  001EDC  90D8               	bcf	status,0,c
  8909  001EDE  320A               	rrcf	___xxtofl@exp^0,f,c
  8910  001EE0  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8911  001EE4  6A06               	clrf	(??___xxtofl+1)^0,c
  8912  001EE6  6A07               	clrf	(??___xxtofl+2)^0,c
  8913  001EE8  6A08               	clrf	(??___xxtofl+3)^0,c
  8914  001EEA  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8915  001EEE  6A07               	clrf	(??___xxtofl+2)^0,c
  8916  001EF0  6A06               	clrf	(??___xxtofl+1)^0,c
  8917  001EF2  6A05               	clrf	??___xxtofl^0,c
  8918  001EF4  5005               	movf	??___xxtofl^0,w,c
  8919  001EF6  120B               	iorwf	___xxtofl@arg^0,f,c
  8920  001EF8  5006               	movf	(??___xxtofl+1)^0,w,c
  8921  001EFA  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8922  001EFC  5007               	movf	(??___xxtofl+2)^0,w,c
  8923  001EFE  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8924  001F00  5008               	movf	(??___xxtofl+3)^0,w,c
  8925  001F02  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8926  001F04  5009               	movf	___xxtofl@sign^0,w,c
  8927  001F06  B4D8               	btfsc	status,2,c
  8928  001F08  EF88  F00F         	goto	i2u552_41
  8929  001F0C  EF8A  F00F         	goto	i2u552_40
  8930  001F10                     i2u552_41:
  8931  001F10  EF92  F00F         	goto	i2l6852
  8932  001F14                     i2u552_40:
  8933  001F14  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8934  001F16  EF91  F00F         	goto	i2u553_40
  8935  001F1A  EF8F  F00F         	goto	i2u553_41
  8936  001F1E                     i2u553_41:
  8937  001F1E  EF92  F00F         	goto	i2l6852
  8938  001F22                     i2u553_40:
  8939  001F22  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8940  001F24                     i2l6852:
  8941  001F24  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8942  001F28  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8943  001F2C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8944  001F30  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8945  001F34                     i2l2418:
  8946  001F34  0012               	return		;funcret
  8947  001F36                     __end_of___xxtofl:
  8948                           	callstack 0
  8949                           
  8950 ;; *************** function ___fltol *****************
  8951 ;; Defined at:
  8952 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  8953 ;; Parameters:    Size  Location     Type
  8954 ;;  f1              4   39[COMRAM] unsigned char 
  8955 ;; Auto vars:     Size  Location     Type
  8956 ;;  exp1            1   48[COMRAM] unsigned char 
  8957 ;;  sign1           1   47[COMRAM] unsigned char 
  8958 ;; Return value:  Size  Location     Type
  8959 ;;                  4   39[COMRAM] long 
  8960 ;; Registers used:
  8961 ;;		wreg, status,2, status,0
  8962 ;; Tracked objects:
  8963 ;;		On entry : 0/0
  8964 ;;		On exit  : 0/0
  8965 ;;		Unchanged: 0/0
  8966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8967 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8968 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8969 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8970 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8971 ;;Total ram usage:       10 bytes
  8972 ;; Hardware stack levels used: 1
  8973 ;; This function calls:
  8974 ;;		Nothing
  8975 ;; This function is called by:
  8976 ;;		_adcInterruptHandeler
  8977 ;;		_Ultrasonic_Calculate_Distance
  8978 ;;		_CCP_PWM_Set_Duty
  8979 ;;		_CCP_PWM_Mode_Config
  8980 ;;		_I2C_Master_Mode_Clock_Configurations
  8981 ;;		_EUSART_Baud_Rate_Calculation
  8982 ;; This function uses a non-reentrant model
  8983 ;;
  8984                           
  8985                           	psect	text65
  8986  0029DC                     __ptext65:
  8987                           	callstack 0
  8988  0029DC                     ___fltol:
  8989                           	callstack 21
  8990  0029DC  342A               	rlcf	(___fltol@f1+2)^0,w,c
  8991  0029DE  342B               	rlcf	(___fltol@f1+3)^0,w,c
  8992  0029E0  6E31               	movwf	___fltol@exp1^0,c
  8993  0029E2  5031               	movf	___fltol@exp1^0,w,c
  8994  0029E4  A4D8               	btfss	status,2,c
  8995  0029E6  EFF7  F014         	goto	i2u537_41
  8996  0029EA  EFF9  F014         	goto	i2u537_40
  8997  0029EE                     i2u537_41:
  8998  0029EE  EF03  F015         	goto	i2l6772
  8999  0029F2                     i2u537_40:
  9000  0029F2                     i2l6768:
  9001  0029F2  0E00               	movlw	0
  9002  0029F4  6E28               	movwf	?___fltol^0,c
  9003  0029F6  0E00               	movlw	0
  9004  0029F8  6E29               	movwf	(?___fltol+1)^0,c
  9005  0029FA  0E00               	movlw	0
  9006  0029FC  6E2A               	movwf	(?___fltol+2)^0,c
  9007  0029FE  0E00               	movlw	0
  9008  002A00  6E2B               	movwf	(?___fltol+3)^0,c
  9009  002A02  EF70  F015         	goto	i2l2057
  9010  002A06                     i2l6772:
  9011  002A06  C028  F02C         	movff	___fltol@f1,??___fltol
  9012  002A0A  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  9013  002A0E  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  9014  002A12  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  9015  002A16  0E20               	movlw	32
  9016  002A18  EF13  F015         	goto	i2u538_40
  9017  002A1C                     i2u538_45:
  9018  002A1C  90D8               	bcf	status,0,c
  9019  002A1E  322F               	rrcf	(??___fltol+3)^0,f,c
  9020  002A20  322E               	rrcf	(??___fltol+2)^0,f,c
  9021  002A22  322D               	rrcf	(??___fltol+1)^0,f,c
  9022  002A24  322C               	rrcf	??___fltol^0,f,c
  9023  002A26                     i2u538_40:
  9024  002A26  2EE8               	decfsz	wreg,f,c
  9025  002A28  EF0E  F015         	goto	i2u538_45
  9026  002A2C  502C               	movf	??___fltol^0,w,c
  9027  002A2E  6E30               	movwf	___fltol@sign1^0,c
  9028  002A30  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  9029  002A32  0EFF               	movlw	255
  9030  002A34  1628               	andwf	___fltol@f1^0,f,c
  9031  002A36  0EFF               	movlw	255
  9032  002A38  1629               	andwf	(___fltol@f1+1)^0,f,c
  9033  002A3A  0EFF               	movlw	255
  9034  002A3C  162A               	andwf	(___fltol@f1+2)^0,f,c
  9035  002A3E  0E00               	movlw	0
  9036  002A40  162B               	andwf	(___fltol@f1+3)^0,f,c
  9037  002A42  0E96               	movlw	150
  9038  002A44  5E31               	subwf	___fltol@exp1^0,f,c
  9039  002A46  BE31               	btfsc	___fltol@exp1^0,7,c
  9040  002A48  EF2A  F015         	goto	i2u539_40
  9041  002A4C  EF28  F015         	goto	i2u539_41
  9042  002A50                     i2u539_41:
  9043  002A50  EF40  F015         	goto	i2l6792
  9044  002A54                     i2u539_40:
  9045  002A54  5031               	movf	___fltol@exp1^0,w,c
  9046  002A56  0A80               	xorlw	128
  9047  002A58  0F97               	addlw	151
  9048  002A5A  B0D8               	btfsc	status,0,c
  9049  002A5C  EF32  F015         	goto	i2u540_41
  9050  002A60  EF34  F015         	goto	i2u540_40
  9051  002A64                     i2u540_41:
  9052  002A64  EF36  F015         	goto	i2l6788
  9053  002A68                     i2u540_40:
  9054  002A68  EFF9  F014         	goto	i2l6768
  9055  002A6C                     i2l6788:
  9056  002A6C  90D8               	bcf	status,0,c
  9057  002A6E  322B               	rrcf	(___fltol@f1+3)^0,f,c
  9058  002A70  322A               	rrcf	(___fltol@f1+2)^0,f,c
  9059  002A72  3229               	rrcf	(___fltol@f1+1)^0,f,c
  9060  002A74  3228               	rrcf	___fltol@f1^0,f,c
  9061  002A76  3E31               	incfsz	___fltol@exp1^0,f,c
  9062  002A78  EF36  F015         	goto	i2l6788
  9063  002A7C  EF58  F015         	goto	i2l6802
  9064  002A80                     i2l6792:
  9065  002A80  0E1F               	movlw	31
  9066  002A82  6431               	cpfsgt	___fltol@exp1^0,c
  9067  002A84  EF46  F015         	goto	i2u541_41
  9068  002A88  EF48  F015         	goto	i2u541_40
  9069  002A8C                     i2u541_41:
  9070  002A8C  EF50  F015         	goto	i2l6800
  9071  002A90                     i2u541_40:
  9072  002A90  EFF9  F014         	goto	i2l6768
  9073  002A94                     i2l6798:
  9074  002A94  90D8               	bcf	status,0,c
  9075  002A96  3628               	rlcf	___fltol@f1^0,f,c
  9076  002A98  3629               	rlcf	(___fltol@f1+1)^0,f,c
  9077  002A9A  362A               	rlcf	(___fltol@f1+2)^0,f,c
  9078  002A9C  362B               	rlcf	(___fltol@f1+3)^0,f,c
  9079  002A9E  0631               	decf	___fltol@exp1^0,f,c
  9080  002AA0                     i2l6800:
  9081  002AA0  5031               	movf	___fltol@exp1^0,w,c
  9082  002AA2  A4D8               	btfss	status,2,c
  9083  002AA4  EF56  F015         	goto	i2u542_41
  9084  002AA8  EF58  F015         	goto	i2u542_40
  9085  002AAC                     i2u542_41:
  9086  002AAC  EF4A  F015         	goto	i2l6798
  9087  002AB0                     i2u542_40:
  9088  002AB0                     i2l6802:
  9089  002AB0  5030               	movf	___fltol@sign1^0,w,c
  9090  002AB2  B4D8               	btfsc	status,2,c
  9091  002AB4  EF5E  F015         	goto	i2u543_41
  9092  002AB8  EF60  F015         	goto	i2u543_40
  9093  002ABC                     i2u543_41:
  9094  002ABC  EF68  F015         	goto	i2l6806
  9095  002AC0                     i2u543_40:
  9096  002AC0  1E2B               	comf	(___fltol@f1+3)^0,f,c
  9097  002AC2  1E2A               	comf	(___fltol@f1+2)^0,f,c
  9098  002AC4  1E29               	comf	(___fltol@f1+1)^0,f,c
  9099  002AC6  6C28               	negf	___fltol@f1^0,c
  9100  002AC8  0E00               	movlw	0
  9101  002ACA  2229               	addwfc	(___fltol@f1+1)^0,f,c
  9102  002ACC  222A               	addwfc	(___fltol@f1+2)^0,f,c
  9103  002ACE  222B               	addwfc	(___fltol@f1+3)^0,f,c
  9104  002AD0                     i2l6806:
  9105  002AD0  C028  F028         	movff	___fltol@f1,?___fltol
  9106  002AD4  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  9107  002AD8  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  9108  002ADC  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  9109  002AE0                     i2l2057:
  9110  002AE0  0012               	return		;funcret
  9111  002AE2                     __end_of___fltol:
  9112                           	callstack 0
  9113                           
  9114 ;; *************** function ___flmul *****************
  9115 ;; Defined at:
  9116 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  9117 ;; Parameters:    Size  Location     Type
  9118 ;;  b               4   14[COMRAM] long 
  9119 ;;  a               4   18[COMRAM] long 
  9120 ;; Auto vars:     Size  Location     Type
  9121 ;;  prod            4   33[COMRAM] struct .
  9122 ;;  grs             4   27[COMRAM] unsigned long 
  9123 ;;  temp            2   37[COMRAM] struct .
  9124 ;;  bexp            1   32[COMRAM] unsigned char 
  9125 ;;  aexp            1   31[COMRAM] unsigned char 
  9126 ;;  sign            1   26[COMRAM] unsigned char 
  9127 ;; Return value:  Size  Location     Type
  9128 ;;                  4   14[COMRAM] unsigned char 
  9129 ;; Registers used:
  9130 ;;		wreg, status,2, status,0, prodl, prodh
  9131 ;; Tracked objects:
  9132 ;;		On entry : 0/0
  9133 ;;		On exit  : 0/0
  9134 ;;		Unchanged: 0/0
  9135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9136 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9137 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9138 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9139 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9140 ;;Total ram usage:       25 bytes
  9141 ;; Hardware stack levels used: 1
  9142 ;; This function calls:
  9143 ;;		Nothing
  9144 ;; This function is called by:
  9145 ;;		_adcInterruptHandeler
  9146 ;;		_CCP_PWM_Set_Duty
  9147 ;;		_CCP_PWM_Mode_Config
  9148 ;; This function uses a non-reentrant model
  9149 ;;
  9150                           
  9151                           	psect	text66
  9152  0014B6                     __ptext66:
  9153                           	callstack 0
  9154  0014B6                     ___flmul:
  9155                           	callstack 21
  9156  0014B6  5012               	movf	(___flmul@b+3)^0,w,c
  9157  0014B8  0B80               	andlw	128
  9158  0014BA  6E1B               	movwf	___flmul@sign^0,c
  9159  0014BC  5012               	movf	(___flmul@b+3)^0,w,c
  9160  0014BE  2412               	addwf	(___flmul@b+3)^0,w,c
  9161  0014C0  6E21               	movwf	___flmul@bexp^0,c
  9162  0014C2  AE11               	btfss	(___flmul@b+2)^0,7,c
  9163  0014C4  EF66  F00A         	goto	i2u518_41
  9164  0014C8  EF68  F00A         	goto	i2u518_40
  9165  0014CC                     i2u518_41:
  9166  0014CC  EF69  F00A         	goto	i2l6642
  9167  0014D0                     i2u518_40:
  9168  0014D0  8021               	bsf	___flmul@bexp^0,0,c
  9169  0014D2                     i2l6642:
  9170  0014D2  5021               	movf	___flmul@bexp^0,w,c
  9171  0014D4  B4D8               	btfsc	status,2,c
  9172  0014D6  EF6F  F00A         	goto	i2u519_41
  9173  0014DA  EF71  F00A         	goto	i2u519_40
  9174  0014DE                     i2u519_41:
  9175  0014DE  EF84  F00A         	goto	i2l6650
  9176  0014E2                     i2u519_40:
  9177  0014E2  2821               	incf	___flmul@bexp^0,w,c
  9178  0014E4  A4D8               	btfss	status,2,c
  9179  0014E6  EF77  F00A         	goto	i2u520_41
  9180  0014EA  EF79  F00A         	goto	i2u520_40
  9181  0014EE                     i2u520_41:
  9182  0014EE  EF81  F00A         	goto	i2l6648
  9183  0014F2                     i2u520_40:
  9184  0014F2  0E00               	movlw	0
  9185  0014F4  6E0F               	movwf	___flmul@b^0,c
  9186  0014F6  0E00               	movlw	0
  9187  0014F8  6E10               	movwf	(___flmul@b+1)^0,c
  9188  0014FA  0E00               	movlw	0
  9189  0014FC  6E11               	movwf	(___flmul@b+2)^0,c
  9190  0014FE  0E00               	movlw	0
  9191  001500  6E12               	movwf	(___flmul@b+3)^0,c
  9192  001502                     i2l6648:
  9193  001502  8E11               	bsf	(___flmul@b+2)^0,7,c
  9194  001504  EF8C  F00A         	goto	i2l6652
  9195  001508                     i2l6650:
  9196  001508  0E00               	movlw	0
  9197  00150A  6E0F               	movwf	___flmul@b^0,c
  9198  00150C  0E00               	movlw	0
  9199  00150E  6E10               	movwf	(___flmul@b+1)^0,c
  9200  001510  0E00               	movlw	0
  9201  001512  6E11               	movwf	(___flmul@b+2)^0,c
  9202  001514  0E00               	movlw	0
  9203  001516  6E12               	movwf	(___flmul@b+3)^0,c
  9204  001518                     i2l6652:
  9205  001518  5016               	movf	(___flmul@a+3)^0,w,c
  9206  00151A  0B80               	andlw	128
  9207  00151C  1A1B               	xorwf	___flmul@sign^0,f,c
  9208  00151E  5016               	movf	(___flmul@a+3)^0,w,c
  9209  001520  2416               	addwf	(___flmul@a+3)^0,w,c
  9210  001522  6E20               	movwf	___flmul@aexp^0,c
  9211  001524  AE15               	btfss	(___flmul@a+2)^0,7,c
  9212  001526  EF97  F00A         	goto	i2u521_41
  9213  00152A  EF99  F00A         	goto	i2u521_40
  9214  00152E                     i2u521_41:
  9215  00152E  EF9A  F00A         	goto	i2l6660
  9216  001532                     i2u521_40:
  9217  001532  8020               	bsf	___flmul@aexp^0,0,c
  9218  001534                     i2l6660:
  9219  001534  5020               	movf	___flmul@aexp^0,w,c
  9220  001536  B4D8               	btfsc	status,2,c
  9221  001538  EFA0  F00A         	goto	i2u522_41
  9222  00153C  EFA2  F00A         	goto	i2u522_40
  9223  001540                     i2u522_41:
  9224  001540  EFB5  F00A         	goto	i2l6668
  9225  001544                     i2u522_40:
  9226  001544  2820               	incf	___flmul@aexp^0,w,c
  9227  001546  A4D8               	btfss	status,2,c
  9228  001548  EFA8  F00A         	goto	i2u523_41
  9229  00154C  EFAA  F00A         	goto	i2u523_40
  9230  001550                     i2u523_41:
  9231  001550  EFB2  F00A         	goto	i2l6666
  9232  001554                     i2u523_40:
  9233  001554  0E00               	movlw	0
  9234  001556  6E13               	movwf	___flmul@a^0,c
  9235  001558  0E00               	movlw	0
  9236  00155A  6E14               	movwf	(___flmul@a+1)^0,c
  9237  00155C  0E00               	movlw	0
  9238  00155E  6E15               	movwf	(___flmul@a+2)^0,c
  9239  001560  0E00               	movlw	0
  9240  001562  6E16               	movwf	(___flmul@a+3)^0,c
  9241  001564                     i2l6666:
  9242  001564  8E15               	bsf	(___flmul@a+2)^0,7,c
  9243  001566  EFBD  F00A         	goto	i2l2374
  9244  00156A                     i2l6668:
  9245  00156A  0E00               	movlw	0
  9246  00156C  6E13               	movwf	___flmul@a^0,c
  9247  00156E  0E00               	movlw	0
  9248  001570  6E14               	movwf	(___flmul@a+1)^0,c
  9249  001572  0E00               	movlw	0
  9250  001574  6E15               	movwf	(___flmul@a+2)^0,c
  9251  001576  0E00               	movlw	0
  9252  001578  6E16               	movwf	(___flmul@a+3)^0,c
  9253  00157A                     i2l2374:
  9254  00157A  5020               	movf	___flmul@aexp^0,w,c
  9255  00157C  B4D8               	btfsc	status,2,c
  9256  00157E  EFC3  F00A         	goto	i2u524_41
  9257  001582  EFC5  F00A         	goto	i2u524_40
  9258  001586                     i2u524_41:
  9259  001586  EFCD  F00A         	goto	i2l6672
  9260  00158A                     i2u524_40:
  9261  00158A  5021               	movf	___flmul@bexp^0,w,c
  9262  00158C  A4D8               	btfss	status,2,c
  9263  00158E  EFCB  F00A         	goto	i2u525_41
  9264  001592  EFCD  F00A         	goto	i2u525_40
  9265  001596                     i2u525_41:
  9266  001596  EFD7  F00A         	goto	i2l6676
  9267  00159A                     i2u525_40:
  9268  00159A                     i2l6672:
  9269  00159A  0E00               	movlw	0
  9270  00159C  6E0F               	movwf	?___flmul^0,c
  9271  00159E  0E00               	movlw	0
  9272  0015A0  6E10               	movwf	(?___flmul+1)^0,c
  9273  0015A2  0E00               	movlw	0
  9274  0015A4  6E11               	movwf	(?___flmul+2)^0,c
  9275  0015A6  0E00               	movlw	0
  9276  0015A8  6E12               	movwf	(?___flmul+3)^0,c
  9277  0015AA  EF6F  F00C         	goto	i2l2378
  9278  0015AE                     i2l6676:
  9279  0015AE  5015               	movf	(___flmul@a+2)^0,w,c
  9280  0015B0  020F               	mulwf	___flmul@b^0,c
  9281  0015B2  CFF3 F026          	movff	prodl,___flmul@temp
  9282  0015B6  CFF4 F027          	movff	prodh,___flmul@temp+1
  9283  0015BA  5026               	movf	___flmul@temp^0,w,c
  9284  0015BC  6E1C               	movwf	___flmul@grs^0,c
  9285  0015BE  6A1D               	clrf	(___flmul@grs+1)^0,c
  9286  0015C0  6A1E               	clrf	(___flmul@grs+2)^0,c
  9287  0015C2  6A1F               	clrf	(___flmul@grs+3)^0,c
  9288  0015C4  5027               	movf	(___flmul@temp+1)^0,w,c
  9289  0015C6  6E22               	movwf	___flmul@prod^0,c
  9290  0015C8  6A23               	clrf	(___flmul@prod+1)^0,c
  9291  0015CA  6A24               	clrf	(___flmul@prod+2)^0,c
  9292  0015CC  6A25               	clrf	(___flmul@prod+3)^0,c
  9293  0015CE  5014               	movf	(___flmul@a+1)^0,w,c
  9294  0015D0  0210               	mulwf	(___flmul@b+1)^0,c
  9295  0015D2  CFF3 F026          	movff	prodl,___flmul@temp
  9296  0015D6  CFF4 F027          	movff	prodh,___flmul@temp+1
  9297  0015DA  5026               	movf	___flmul@temp^0,w,c
  9298  0015DC  261C               	addwf	___flmul@grs^0,f,c
  9299  0015DE  0E00               	movlw	0
  9300  0015E0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9301  0015E2  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9302  0015E4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9303  0015E6  5027               	movf	(___flmul@temp+1)^0,w,c
  9304  0015E8  2622               	addwf	___flmul@prod^0,f,c
  9305  0015EA  0E00               	movlw	0
  9306  0015EC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9307  0015EE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9308  0015F0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9309  0015F2  5013               	movf	___flmul@a^0,w,c
  9310  0015F4  0211               	mulwf	(___flmul@b+2)^0,c
  9311  0015F6  CFF3 F026          	movff	prodl,___flmul@temp
  9312  0015FA  CFF4 F027          	movff	prodh,___flmul@temp+1
  9313  0015FE  5026               	movf	___flmul@temp^0,w,c
  9314  001600  261C               	addwf	___flmul@grs^0,f,c
  9315  001602  0E00               	movlw	0
  9316  001604  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9317  001606  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9318  001608  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9319  00160A  5027               	movf	(___flmul@temp+1)^0,w,c
  9320  00160C  2622               	addwf	___flmul@prod^0,f,c
  9321  00160E  0E00               	movlw	0
  9322  001610  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9323  001612  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9324  001614  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9325  001616  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9326  00161A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9327  00161E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9328  001622  6A1C               	clrf	___flmul@grs^0,c
  9329  001624  5013               	movf	___flmul@a^0,w,c
  9330  001626  0210               	mulwf	(___flmul@b+1)^0,c
  9331  001628  CFF3 F026          	movff	prodl,___flmul@temp
  9332  00162C  CFF4 F027          	movff	prodh,___flmul@temp+1
  9333  001630  5026               	movf	___flmul@temp^0,w,c
  9334  001632  261C               	addwf	___flmul@grs^0,f,c
  9335  001634  5027               	movf	(___flmul@temp+1)^0,w,c
  9336  001636  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9337  001638  0E00               	movlw	0
  9338  00163A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9339  00163C  0E00               	movlw	0
  9340  00163E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9341  001640  5014               	movf	(___flmul@a+1)^0,w,c
  9342  001642  020F               	mulwf	___flmul@b^0,c
  9343  001644  CFF3 F026          	movff	prodl,___flmul@temp
  9344  001648  CFF4 F027          	movff	prodh,___flmul@temp+1
  9345  00164C  5026               	movf	___flmul@temp^0,w,c
  9346  00164E  261C               	addwf	___flmul@grs^0,f,c
  9347  001650  5027               	movf	(___flmul@temp+1)^0,w,c
  9348  001652  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9349  001654  0E00               	movlw	0
  9350  001656  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9351  001658  0E00               	movlw	0
  9352  00165A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9353  00165C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9354  001660  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9355  001664  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9356  001668  6A1C               	clrf	___flmul@grs^0,c
  9357  00166A  5013               	movf	___flmul@a^0,w,c
  9358  00166C  020F               	mulwf	___flmul@b^0,c
  9359  00166E  CFF3 F026          	movff	prodl,___flmul@temp
  9360  001672  CFF4 F027          	movff	prodh,___flmul@temp+1
  9361  001676  5026               	movf	___flmul@temp^0,w,c
  9362  001678  261C               	addwf	___flmul@grs^0,f,c
  9363  00167A  5027               	movf	(___flmul@temp+1)^0,w,c
  9364  00167C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9365  00167E  0E00               	movlw	0
  9366  001680  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9367  001682  0E00               	movlw	0
  9368  001684  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9369  001686  5015               	movf	(___flmul@a+2)^0,w,c
  9370  001688  0210               	mulwf	(___flmul@b+1)^0,c
  9371  00168A  CFF3 F026          	movff	prodl,___flmul@temp
  9372  00168E  CFF4 F027          	movff	prodh,___flmul@temp+1
  9373  001692  5026               	movf	___flmul@temp^0,w,c
  9374  001694  2622               	addwf	___flmul@prod^0,f,c
  9375  001696  5027               	movf	(___flmul@temp+1)^0,w,c
  9376  001698  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9377  00169A  0E00               	movlw	0
  9378  00169C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9379  00169E  0E00               	movlw	0
  9380  0016A0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9381  0016A2  5014               	movf	(___flmul@a+1)^0,w,c
  9382  0016A4  0211               	mulwf	(___flmul@b+2)^0,c
  9383  0016A6  CFF3 F026          	movff	prodl,___flmul@temp
  9384  0016AA  CFF4 F027          	movff	prodh,___flmul@temp+1
  9385  0016AE  5026               	movf	___flmul@temp^0,w,c
  9386  0016B0  2622               	addwf	___flmul@prod^0,f,c
  9387  0016B2  5027               	movf	(___flmul@temp+1)^0,w,c
  9388  0016B4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9389  0016B6  0E00               	movlw	0
  9390  0016B8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9391  0016BA  0E00               	movlw	0
  9392  0016BC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9393  0016BE  5015               	movf	(___flmul@a+2)^0,w,c
  9394  0016C0  0211               	mulwf	(___flmul@b+2)^0,c
  9395  0016C2  CFF3 F026          	movff	prodl,___flmul@temp
  9396  0016C6  CFF4 F027          	movff	prodh,___flmul@temp+1
  9397  0016CA  5026               	movf	___flmul@temp^0,w,c
  9398  0016CC  6E17               	movwf	??___flmul^0,c
  9399  0016CE  5027               	movf	(___flmul@temp+1)^0,w,c
  9400  0016D0  6E18               	movwf	(??___flmul+1)^0,c
  9401  0016D2  6A19               	clrf	(??___flmul+2)^0,c
  9402  0016D4  6A1A               	clrf	(??___flmul+3)^0,c
  9403  0016D6  C019  F01A         	movff	??___flmul+2,??___flmul+3
  9404  0016DA  C018  F019         	movff	??___flmul+1,??___flmul+2
  9405  0016DE  C017  F018         	movff	??___flmul,??___flmul+1
  9406  0016E2  6A17               	clrf	??___flmul^0,c
  9407  0016E4  5017               	movf	??___flmul^0,w,c
  9408  0016E6  2622               	addwf	___flmul@prod^0,f,c
  9409  0016E8  5018               	movf	(??___flmul+1)^0,w,c
  9410  0016EA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9411  0016EC  5019               	movf	(??___flmul+2)^0,w,c
  9412  0016EE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9413  0016F0  501A               	movf	(??___flmul+3)^0,w,c
  9414  0016F2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9415  0016F4  C01C  F017         	movff	___flmul@grs,??___flmul
  9416  0016F8  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  9417  0016FC  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  9418  001700  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  9419  001704  0E19               	movlw	25
  9420  001706  EF8A  F00B         	goto	i2u526_40
  9421  00170A                     i2u526_45:
  9422  00170A  90D8               	bcf	status,0,c
  9423  00170C  321A               	rrcf	(??___flmul+3)^0,f,c
  9424  00170E  3219               	rrcf	(??___flmul+2)^0,f,c
  9425  001710  3218               	rrcf	(??___flmul+1)^0,f,c
  9426  001712  3217               	rrcf	??___flmul^0,f,c
  9427  001714                     i2u526_40:
  9428  001714  2EE8               	decfsz	wreg,f,c
  9429  001716  EF85  F00B         	goto	i2u526_45
  9430  00171A  5017               	movf	??___flmul^0,w,c
  9431  00171C  2622               	addwf	___flmul@prod^0,f,c
  9432  00171E  5018               	movf	(??___flmul+1)^0,w,c
  9433  001720  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9434  001722  5019               	movf	(??___flmul+2)^0,w,c
  9435  001724  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9436  001726  501A               	movf	(??___flmul+3)^0,w,c
  9437  001728  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9438  00172A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9439  00172E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9440  001732  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9441  001736  6A1C               	clrf	___flmul@grs^0,c
  9442  001738  5020               	movf	___flmul@aexp^0,w,c
  9443  00173A  C021  F017         	movff	___flmul@bexp,??___flmul
  9444  00173E  6A18               	clrf	(??___flmul+1)^0,c
  9445  001740  2617               	addwf	??___flmul^0,f,c
  9446  001742  0E00               	movlw	0
  9447  001744  2218               	addwfc	(??___flmul+1)^0,f,c
  9448  001746  0E82               	movlw	130
  9449  001748  2417               	addwf	??___flmul^0,w,c
  9450  00174A  6E26               	movwf	___flmul@temp^0,c
  9451  00174C  0EFF               	movlw	255
  9452  00174E  2018               	addwfc	(??___flmul+1)^0,w,c
  9453  001750  6E27               	movwf	(___flmul@temp+1)^0,c
  9454  001752  EFC0  F00B         	goto	i2l6724
  9455  001756                     i2l6718:
  9456  001756  90D8               	bcf	status,0,c
  9457  001758  3622               	rlcf	___flmul@prod^0,f,c
  9458  00175A  3623               	rlcf	(___flmul@prod+1)^0,f,c
  9459  00175C  3624               	rlcf	(___flmul@prod+2)^0,f,c
  9460  00175E  3625               	rlcf	(___flmul@prod+3)^0,f,c
  9461  001760  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  9462  001762  EFB5  F00B         	goto	i2u527_41
  9463  001766  EFB7  F00B         	goto	i2u527_40
  9464  00176A                     i2u527_41:
  9465  00176A  EFB8  F00B         	goto	i2l2381
  9466  00176E                     i2u527_40:
  9467  00176E  8022               	bsf	___flmul@prod^0,0,c
  9468  001770                     i2l2381:
  9469  001770  90D8               	bcf	status,0,c
  9470  001772  361C               	rlcf	___flmul@grs^0,f,c
  9471  001774  361D               	rlcf	(___flmul@grs+1)^0,f,c
  9472  001776  361E               	rlcf	(___flmul@grs+2)^0,f,c
  9473  001778  361F               	rlcf	(___flmul@grs+3)^0,f,c
  9474  00177A  0626               	decf	___flmul@temp^0,f,c
  9475  00177C  A0D8               	btfss	status,0,c
  9476  00177E  0627               	decf	(___flmul@temp+1)^0,f,c
  9477  001780                     i2l6724:
  9478  001780  AE24               	btfss	(___flmul@prod+2)^0,7,c
  9479  001782  EFC5  F00B         	goto	i2u528_41
  9480  001786  EFC7  F00B         	goto	i2u528_40
  9481  00178A                     i2u528_41:
  9482  00178A  EFAB  F00B         	goto	i2l6718
  9483  00178E                     i2u528_40:
  9484  00178E  0E00               	movlw	0
  9485  001790  6E20               	movwf	___flmul@aexp^0,c
  9486  001792  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  9487  001794  EFCE  F00B         	goto	i2u529_41
  9488  001798  EFD0  F00B         	goto	i2u529_40
  9489  00179C                     i2u529_41:
  9490  00179C  EFF4  F00B         	goto	i2l2383
  9491  0017A0                     i2u529_40:
  9492  0017A0  0EFF               	movlw	255
  9493  0017A2  141C               	andwf	___flmul@grs^0,w,c
  9494  0017A4  6E17               	movwf	??___flmul^0,c
  9495  0017A6  0EFF               	movlw	255
  9496  0017A8  141D               	andwf	(___flmul@grs+1)^0,w,c
  9497  0017AA  6E18               	movwf	(??___flmul+1)^0,c
  9498  0017AC  0EFF               	movlw	255
  9499  0017AE  141E               	andwf	(___flmul@grs+2)^0,w,c
  9500  0017B0  6E19               	movwf	(??___flmul+2)^0,c
  9501  0017B2  0E7F               	movlw	127
  9502  0017B4  141F               	andwf	(___flmul@grs+3)^0,w,c
  9503  0017B6  6E1A               	movwf	(??___flmul+3)^0,c
  9504  0017B8  5017               	movf	??___flmul^0,w,c
  9505  0017BA  1018               	iorwf	(??___flmul+1)^0,w,c
  9506  0017BC  1019               	iorwf	(??___flmul+2)^0,w,c
  9507  0017BE  101A               	iorwf	(??___flmul+3)^0,w,c
  9508  0017C0  B4D8               	btfsc	status,2,c
  9509  0017C2  EFE5  F00B         	goto	i2u530_41
  9510  0017C6  EFE7  F00B         	goto	i2u530_40
  9511  0017CA                     i2u530_41:
  9512  0017CA  EFEB  F00B         	goto	i2l2384
  9513  0017CE                     i2u530_40:
  9514  0017CE                     i2l6732:
  9515  0017CE  0E01               	movlw	1
  9516  0017D0  6E20               	movwf	___flmul@aexp^0,c
  9517  0017D2  EFF4  F00B         	goto	i2l2383
  9518  0017D6                     i2l2384:
  9519  0017D6  A022               	btfss	___flmul@prod^0,0,c
  9520  0017D8  EFF0  F00B         	goto	i2u531_41
  9521  0017DC  EFF2  F00B         	goto	i2u531_40
  9522  0017E0                     i2u531_41:
  9523  0017E0  EFF4  F00B         	goto	i2l2383
  9524  0017E4                     i2u531_40:
  9525  0017E4  EFE7  F00B         	goto	i2l6732
  9526  0017E8                     i2l2383:
  9527  0017E8  5020               	movf	___flmul@aexp^0,w,c
  9528  0017EA  B4D8               	btfsc	status,2,c
  9529  0017EC  EFFA  F00B         	goto	i2u532_41
  9530  0017F0  EFFC  F00B         	goto	i2u532_40
  9531  0017F4                     i2u532_41:
  9532  0017F4  EF20  F00C         	goto	i2l6744
  9533  0017F8                     i2u532_40:
  9534  0017F8  0E01               	movlw	1
  9535  0017FA  2622               	addwf	___flmul@prod^0,f,c
  9536  0017FC  0E00               	movlw	0
  9537  0017FE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9538  001800  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9539  001802  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9540  001804  A025               	btfss	(___flmul@prod+3)^0,0,c
  9541  001806  EF07  F00C         	goto	i2u533_41
  9542  00180A  EF09  F00C         	goto	i2u533_40
  9543  00180E                     i2u533_41:
  9544  00180E  EF20  F00C         	goto	i2l6744
  9545  001812                     i2u533_40:
  9546  001812  C022  F017         	movff	___flmul@prod,??___flmul
  9547  001816  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  9548  00181A  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  9549  00181E  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  9550  001822  341A               	rlcf	(??___flmul+3)^0,w,c
  9551  001824  321A               	rrcf	(??___flmul+3)^0,f,c
  9552  001826  3219               	rrcf	(??___flmul+2)^0,f,c
  9553  001828  3218               	rrcf	(??___flmul+1)^0,f,c
  9554  00182A  3217               	rrcf	??___flmul^0,f,c
  9555  00182C  C017  F022         	movff	??___flmul,___flmul@prod
  9556  001830  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  9557  001834  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  9558  001838  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  9559  00183C  4A26               	infsnz	___flmul@temp^0,f,c
  9560  00183E  2A27               	incf	(___flmul@temp+1)^0,f,c
  9561  001840                     i2l6744:
  9562  001840  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  9563  001842  EF2B  F00C         	goto	i2u534_41
  9564  001846  5027               	movf	(___flmul@temp+1)^0,w,c
  9565  001848  E108               	bnz	i2u534_40
  9566  00184A  2826               	incf	___flmul@temp^0,w,c
  9567  00184C  A0D8               	btfss	status,0,c
  9568  00184E  EF2B  F00C         	goto	i2u534_41
  9569  001852  EF2D  F00C         	goto	i2u534_40
  9570  001856                     i2u534_41:
  9571  001856  EF37  F00C         	goto	i2l6748
  9572  00185A                     i2u534_40:
  9573  00185A  0E00               	movlw	0
  9574  00185C  6E22               	movwf	___flmul@prod^0,c
  9575  00185E  0E00               	movlw	0
  9576  001860  6E23               	movwf	(___flmul@prod+1)^0,c
  9577  001862  0E80               	movlw	128
  9578  001864  6E24               	movwf	(___flmul@prod+2)^0,c
  9579  001866  0E7F               	movlw	127
  9580  001868  6E25               	movwf	(___flmul@prod+3)^0,c
  9581  00186A  EF65  F00C         	goto	i2l6760
  9582  00186E                     i2l6748:
  9583  00186E  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  9584  001870  EF44  F00C         	goto	i2u535_40
  9585  001874  5027               	movf	(___flmul@temp+1)^0,w,c
  9586  001876  E106               	bnz	i2u535_41
  9587  001878  0426               	decf	___flmul@temp^0,w,c
  9588  00187A  B0D8               	btfsc	status,0,c
  9589  00187C  EF42  F00C         	goto	i2u535_41
  9590  001880  EF44  F00C         	goto	i2u535_40
  9591  001884                     i2u535_41:
  9592  001884  EF50  F00C         	goto	i2l2391
  9593  001888                     i2u535_40:
  9594  001888  0E00               	movlw	0
  9595  00188A  6E22               	movwf	___flmul@prod^0,c
  9596  00188C  0E00               	movlw	0
  9597  00188E  6E23               	movwf	(___flmul@prod+1)^0,c
  9598  001890  0E00               	movlw	0
  9599  001892  6E24               	movwf	(___flmul@prod+2)^0,c
  9600  001894  0E00               	movlw	0
  9601  001896  6E25               	movwf	(___flmul@prod+3)^0,c
  9602  001898  0E00               	movlw	0
  9603  00189A  6E1B               	movwf	___flmul@sign^0,c
  9604  00189C  EF65  F00C         	goto	i2l6760
  9605  0018A0                     i2l2391:
  9606  0018A0  C026  F021         	movff	___flmul@temp,___flmul@bexp
  9607  0018A4  0EFF               	movlw	255
  9608  0018A6  1622               	andwf	___flmul@prod^0,f,c
  9609  0018A8  0EFF               	movlw	255
  9610  0018AA  1623               	andwf	(___flmul@prod+1)^0,f,c
  9611  0018AC  0E7F               	movlw	127
  9612  0018AE  1624               	andwf	(___flmul@prod+2)^0,f,c
  9613  0018B0  0E00               	movlw	0
  9614  0018B2  1625               	andwf	(___flmul@prod+3)^0,f,c
  9615  0018B4  A021               	btfss	___flmul@bexp^0,0,c
  9616  0018B6  EF5F  F00C         	goto	i2u536_41
  9617  0018BA  EF61  F00C         	goto	i2u536_40
  9618  0018BE                     i2u536_41:
  9619  0018BE  EF62  F00C         	goto	i2l6758
  9620  0018C2                     i2u536_40:
  9621  0018C2  8E24               	bsf	(___flmul@prod+2)^0,7,c
  9622  0018C4                     i2l6758:
  9623  0018C4  90D8               	bcf	status,0,c
  9624  0018C6  3021               	rrcf	___flmul@bexp^0,w,c
  9625  0018C8  6E25               	movwf	(___flmul@prod+3)^0,c
  9626  0018CA                     i2l6760:
  9627  0018CA  501B               	movf	___flmul@sign^0,w,c
  9628  0018CC  1225               	iorwf	(___flmul@prod+3)^0,f,c
  9629  0018CE  C022  F00F         	movff	___flmul@prod,?___flmul
  9630  0018D2  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  9631  0018D6  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  9632  0018DA  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  9633  0018DE                     i2l2378:
  9634  0018DE  0012               	return		;funcret
  9635  0018E0                     __end_of___flmul:
  9636                           	callstack 0
  9637                           
  9638 ;; *************** function _ADC_GetConversionResult *****************
  9639 ;; Defined at:
  9640 ;;		line 181 in file "MCAL_Layer/ADC/hal_adc.c"
  9641 ;; Parameters:    Size  Location     Type
  9642 ;;  _adc            2    0[COMRAM] PTR const struct .
  9643 ;;		 -> adc_1(7), 
  9644 ;;  conversion_r    2    2[COMRAM] PTR unsigned short 
  9645 ;;		 -> LM35(2), 
  9646 ;; Auto vars:     Size  Location     Type
  9647 ;;  ret             1    7[COMRAM] unsigned char 
  9648 ;; Return value:  Size  Location     Type
  9649 ;;                  1    wreg      unsigned char 
  9650 ;; Registers used:
  9651 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9652 ;; Tracked objects:
  9653 ;;		On entry : 0/0
  9654 ;;		On exit  : 0/0
  9655 ;;		Unchanged: 0/0
  9656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9657 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9659 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9660 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9661 ;;Total ram usage:        8 bytes
  9662 ;; Hardware stack levels used: 1
  9663 ;; This function calls:
  9664 ;;		Nothing
  9665 ;; This function is called by:
  9666 ;;		_adcInterruptHandeler
  9667 ;;		_ADC_GetConversion_Blocking
  9668 ;; This function uses a non-reentrant model
  9669 ;;
  9670                           
  9671                           	psect	text67
  9672  002E14                     __ptext67:
  9673                           	callstack 0
  9674  002E14                     _ADC_GetConversionResult:
  9675                           	callstack 21
  9676  002E14                     
  9677                           ;MCAL_Layer/ADC/hal_adc.c: 183:     if((((void*)0) == _adc) || (((void*)0) == conversion
      +                          _result)){
  9678  002E14  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  9679  002E16  1002               	iorwf	(ADC_GetConversionResult@_adc+1)^0,w,c
  9680  002E18  B4D8               	btfsc	status,2,c
  9681  002E1A  EF11  F017         	goto	i2u513_41
  9682  002E1E  EF13  F017         	goto	i2u513_40
  9683  002E22                     i2u513_41:
  9684  002E22  EF1C  F017         	goto	i2l6618
  9685  002E26                     i2u513_40:
  9686  002E26  5003               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  9687  002E28  1004               	iorwf	(ADC_GetConversionResult@conversion_result+1)^0,w,c
  9688  002E2A  A4D8               	btfss	status,2,c
  9689  002E2C  EF1A  F017         	goto	i2u514_41
  9690  002E30  EF1C  F017         	goto	i2u514_40
  9691  002E34                     i2u514_41:
  9692  002E34  EF20  F017         	goto	i2l6620
  9693  002E38                     i2u514_40:
  9694  002E38                     i2l6618:
  9695                           
  9696                           ;MCAL_Layer/ADC/hal_adc.c: 184:         ret = (Std_ReturnType)0x00;
  9697  002E38  0E00               	movlw	0
  9698  002E3A  6E08               	movwf	ADC_GetConversionResult@ret^0,c
  9699                           
  9700                           ;MCAL_Layer/ADC/hal_adc.c: 185:     }
  9701  002E3C  EF6A  F017         	goto	i2l6632
  9702  002E40                     i2l6620:
  9703                           
  9704                           ;MCAL_Layer/ADC/hal_adc.c: 187:         if(0x01U == _adc->result_format){
  9705  002E40  EE20 F006          	lfsr	2,6
  9706  002E44  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  9707  002E46  26D9               	addwf	fsr2l,f,c
  9708  002E48  5002               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  9709  002E4A  22DA               	addwfc	fsr2h,f,c
  9710  002E4C  A2DF               	btfss	indf2,1,c
  9711  002E4E  EF2B  F017         	goto	i2u515_41
  9712  002E52  EF2D  F017         	goto	i2u515_40
  9713  002E56                     i2u515_41:
  9714  002E56  EF41  F017         	goto	i2l6624
  9715  002E5A                     i2u515_40:
  9716  002E5A                     i2l6622:
  9717                           
  9718                           ;MCAL_Layer/ADC/hal_adc.c: 188:             *conversion_result = (adc_result_t)((ADRESH 
      +                          << 8) + ADRESL);
  9719  002E5A  50C3               	movf	195,w,c	;volatile
  9720  002E5C  CFC4 F005          	movff	4036,??_ADC_GetConversionResult	;volatile
  9721  002E60  6A06               	clrf	(??_ADC_GetConversionResult+1)^0,c
  9722  002E62  C005  F006         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  9723  002E66  6A05               	clrf	??_ADC_GetConversionResult^0,c
  9724  002E68  2605               	addwf	??_ADC_GetConversionResult^0,f,c
  9725  002E6A  0E00               	movlw	0
  9726  002E6C  2206               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  9727  002E6E  C003  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  9728  002E72  C004  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  9729  002E76  C005  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  9730  002E7A  C006  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  9731                           
  9732                           ;MCAL_Layer/ADC/hal_adc.c: 189:         }
  9733  002E7E  EF68  F017         	goto	i2l6630
  9734  002E82                     i2l6624:
  9735  002E82  EE20 F006          	lfsr	2,6
  9736  002E86  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  9737  002E88  26D9               	addwf	fsr2l,f,c
  9738  002E8A  5002               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  9739  002E8C  22DA               	addwfc	fsr2h,f,c
  9740  002E8E  B2DF               	btfsc	indf2,1,c
  9741  002E90  EF4C  F017         	goto	i2u516_41
  9742  002E94  EF4E  F017         	goto	i2u516_40
  9743  002E98                     i2u516_41:
  9744  002E98  EF2D  F017         	goto	i2l6622
  9745  002E9C                     i2u516_40:
  9746  002E9C                     
  9747                           ;MCAL_Layer/ADC/hal_adc.c: 191:             *conversion_result = (adc_result_t)(((ADRESH
      +                           << 8) + ADRESL) >> 6);
  9748  002E9C  50C3               	movf	195,w,c	;volatile
  9749  002E9E  CFC4 F005          	movff	4036,??_ADC_GetConversionResult	;volatile
  9750  002EA2  6A06               	clrf	(??_ADC_GetConversionResult+1)^0,c
  9751  002EA4  C005  F006         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  9752  002EA8  6A05               	clrf	??_ADC_GetConversionResult^0,c
  9753  002EAA  2605               	addwf	??_ADC_GetConversionResult^0,f,c
  9754  002EAC  0E00               	movlw	0
  9755  002EAE  2206               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  9756  002EB0  0E06               	movlw	6
  9757  002EB2  6E07               	movwf	(??_ADC_GetConversionResult+2)^0,c
  9758  002EB4                     i2u517_45:
  9759  002EB4  3406               	rlcf	(??_ADC_GetConversionResult+1)^0,w,c
  9760  002EB6  3206               	rrcf	(??_ADC_GetConversionResult+1)^0,f,c
  9761  002EB8  3205               	rrcf	??_ADC_GetConversionResult^0,f,c
  9762  002EBA  2E07               	decfsz	(??_ADC_GetConversionResult+2)^0,f,c
  9763  002EBC  EF5A  F017         	goto	i2u517_45
  9764  002EC0  C003  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  9765  002EC4  C004  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  9766  002EC8  C005  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  9767  002ECC  C006  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  9768  002ED0                     i2l6630:
  9769                           
  9770                           ;MCAL_Layer/ADC/hal_adc.c: 196:         ret = (Std_ReturnType)0x01;
  9771  002ED0  0E01               	movlw	1
  9772  002ED2  6E08               	movwf	ADC_GetConversionResult@ret^0,c
  9773  002ED4                     i2l6632:
  9774                           
  9775                           ;MCAL_Layer/ADC/hal_adc.c: 198:     return ret;
  9776  002ED4  5008               	movf	ADC_GetConversionResult@ret^0,w,c
  9777  002ED6  0012               	return		;funcret
  9778  002ED8                     __end_of_ADC_GetConversionResult:
  9779                           	callstack 0
  9780                           
  9781                           	psect	text68
  9782  000000                     __ptext68:
  9783                           	callstack 0
  9784  000000                     
  9785                           	psect	rparam
  9786  0000                     
  9787                           	psect	temp
  9788  000073                     btemp:
  9789                           	callstack 0
  9790  000073                     	ds	1
  9791  0000                     int$flags	set	btemp
  9792  0000                     wtemp8	set	btemp+1
  9793  0000                     ttemp5	set	btemp+1
  9794  0000                     ttemp6	set	btemp+4
  9795  0000                     ttemp7	set	btemp+8
  9796                           
  9797                           	psect	idloc
  9798                           
  9799                           ;Config register IDLOC0 @ 0x200000
  9800                           ;	unspecified, using default values
  9801  200000                     	org	2097152
  9802  200000  FF                 	db	255
  9803                           
  9804                           ;Config register IDLOC1 @ 0x200001
  9805                           ;	unspecified, using default values
  9806  200001                     	org	2097153
  9807  200001  FF                 	db	255
  9808                           
  9809                           ;Config register IDLOC2 @ 0x200002
  9810                           ;	unspecified, using default values
  9811  200002                     	org	2097154
  9812  200002  FF                 	db	255
  9813                           
  9814                           ;Config register IDLOC3 @ 0x200003
  9815                           ;	unspecified, using default values
  9816  200003                     	org	2097155
  9817  200003  FF                 	db	255
  9818                           
  9819                           ;Config register IDLOC4 @ 0x200004
  9820                           ;	unspecified, using default values
  9821  200004                     	org	2097156
  9822  200004  FF                 	db	255
  9823                           
  9824                           ;Config register IDLOC5 @ 0x200005
  9825                           ;	unspecified, using default values
  9826  200005                     	org	2097157
  9827  200005  FF                 	db	255
  9828                           
  9829                           ;Config register IDLOC6 @ 0x200006
  9830                           ;	unspecified, using default values
  9831  200006                     	org	2097158
  9832  200006  FF                 	db	255
  9833                           
  9834                           ;Config register IDLOC7 @ 0x200007
  9835                           ;	unspecified, using default values
  9836  200007                     	org	2097159
  9837  200007  FF                 	db	255
  9838                           
  9839                           	psect	config
  9840                           
  9841                           ; Padding undefined space
  9842  300000                     	org	3145728
  9843  300000  FF                 	db	255
  9844                           
  9845                           ;Config register CONFIG1H @ 0x300001
  9846                           ;	Oscillator Selection bits
  9847                           ;	OSC = HS, HS oscillator
  9848                           ;	Fail-Safe Clock Monitor Enable bit
  9849                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9850                           ;	Internal/External Oscillator Switchover bit
  9851                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9852  300001                     	org	3145729
  9853  300001  02                 	db	2
  9854                           
  9855                           ;Config register CONFIG2L @ 0x300002
  9856                           ;	Power-up Timer Enable bit
  9857                           ;	PWRT = OFF, PWRT disabled
  9858                           ;	Brown-out Reset Enable bits
  9859                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  9860                           ;	Brown Out Reset Voltage bits
  9861                           ;	BORV = 1, 
  9862  300002                     	org	3145730
  9863  300002  09                 	db	9
  9864                           
  9865                           ;Config register CONFIG2H @ 0x300003
  9866                           ;	Watchdog Timer Enable bit
  9867                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9868                           ;	Watchdog Timer Postscale Select bits
  9869                           ;	WDTPS = 512, 1:512
  9870  300003                     	org	3145731
  9871  300003  12                 	db	18
  9872                           
  9873                           ; Padding undefined space
  9874  300004                     	org	3145732
  9875  300004  FF                 	db	255
  9876                           
  9877                           ;Config register CONFIG3H @ 0x300005
  9878                           ;	CCP2 MUX bit
  9879                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  9880                           ;	PORTB A/D Enable bit
  9881                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9882                           ;	Low-Power Timer1 Oscillator Enable bit
  9883                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9884                           ;	MCLR Pin Enable bit
  9885                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9886  300005                     	org	3145733
  9887  300005  81                 	db	129
  9888                           
  9889                           ;Config register CONFIG4L @ 0x300006
  9890                           ;	Stack Full/Underflow Reset Enable bit
  9891                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9892                           ;	Single-Supply ICSP Enable bit
  9893                           ;	LVP = OFF, Single-Supply ICSP disabled
  9894                           ;	Extended Instruction Set Enable bit
  9895                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9896                           ;	Background Debugger Enable bit
  9897                           ;	DEBUG = 0x1, unprogrammed default
  9898  300006                     	org	3145734
  9899  300006  81                 	db	129
  9900                           
  9901                           ; Padding undefined space
  9902  300007                     	org	3145735
  9903  300007  FF                 	db	255
  9904                           
  9905                           ;Config register CONFIG5L @ 0x300008
  9906                           ;	Code Protection bit
  9907                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  9908                           ;	Code Protection bit
  9909                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  9910                           ;	Code Protection bit
  9911                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  9912                           ;	Code Protection bit
  9913                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  9914  300008                     	org	3145736
  9915  300008  0F                 	db	15
  9916                           
  9917                           ;Config register CONFIG5H @ 0x300009
  9918                           ;	Boot Block Code Protection bit
  9919                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  9920                           ;	Data EEPROM Code Protection bit
  9921                           ;	CPD = OFF, Data EEPROM not code-protected
  9922  300009                     	org	3145737
  9923  300009  C0                 	db	192
  9924                           
  9925                           ;Config register CONFIG6L @ 0x30000A
  9926                           ;	Write Protection bit
  9927                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  9928                           ;	Write Protection bit
  9929                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  9930                           ;	Write Protection bit
  9931                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  9932                           ;	Write Protection bit
  9933                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  9934  30000A                     	org	3145738
  9935  30000A  0F                 	db	15
  9936                           
  9937                           ;Config register CONFIG6H @ 0x30000B
  9938                           ;	Configuration Register Write Protection bit
  9939                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  9940                           ;	Boot Block Write Protection bit
  9941                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  9942                           ;	Data EEPROM Write Protection bit
  9943                           ;	WRTD = OFF, Data EEPROM not write-protected
  9944  30000B                     	org	3145739
  9945  30000B  E0                 	db	224
  9946                           
  9947                           ;Config register CONFIG7L @ 0x30000C
  9948                           ;	Table Read Protection bit
  9949                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  9950                           ;	Table Read Protection bit
  9951                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  9952                           ;	Table Read Protection bit
  9953                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  9954                           ;	Table Read Protection bit
  9955                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  9956  30000C                     	org	3145740
  9957  30000C  0F                 	db	15
  9958                           
  9959                           ;Config register CONFIG7H @ 0x30000D
  9960                           ;	Boot Block Table Read Protection bit
  9961                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  9962  30000D                     	org	3145741
  9963  30000D  40                 	db	64
  9964                           tosu	equ	0xFFF
  9965                           tosh	equ	0xFFE
  9966                           tosl	equ	0xFFD
  9967                           stkptr	equ	0xFFC
  9968                           pclatu	equ	0xFFB
  9969                           pclath	equ	0xFFA
  9970                           pcl	equ	0xFF9
  9971                           tblptru	equ	0xFF8
  9972                           tblptrh	equ	0xFF7
  9973                           tblptrl	equ	0xFF6
  9974                           tablat	equ	0xFF5
  9975                           prodh	equ	0xFF4
  9976                           prodl	equ	0xFF3
  9977                           indf0	equ	0xFEF
  9978                           postinc0	equ	0xFEE
  9979                           postdec0	equ	0xFED
  9980                           preinc0	equ	0xFEC
  9981                           plusw0	equ	0xFEB
  9982                           fsr0h	equ	0xFEA
  9983                           fsr0l	equ	0xFE9
  9984                           wreg	equ	0xFE8
  9985                           indf1	equ	0xFE7
  9986                           postinc1	equ	0xFE6
  9987                           postdec1	equ	0xFE5
  9988                           preinc1	equ	0xFE4
  9989                           plusw1	equ	0xFE3
  9990                           fsr1h	equ	0xFE2
  9991                           fsr1l	equ	0xFE1
  9992                           bsr	equ	0xFE0
  9993                           indf2	equ	0xFDF
  9994                           postinc2	equ	0xFDE
  9995                           postdec2	equ	0xFDD
  9996                           preinc2	equ	0xFDC
  9997                           plusw2	equ	0xFDB
  9998                           fsr2h	equ	0xFDA
  9999                           fsr2l	equ	0xFD9
 10000                           status	equ	0xFD8

Data Sizes:
    Strings     30
    Constant    16
    Data        58
    BSS         119
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    112     114
    BANK0           128     20     114
    BANK1           256     29     111
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 7
		 -> adcArray(BANK1[7]), convert_uint16_to_string@Temp_String(COMRAM[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S4910$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S4910$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 7
		 -> adcArray(BANK1[7]), 

    memset@s	PTR unsigned char  size(2) Largest target is 7
		 -> adcArray(BANK1[7]), 

    adc_1.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcInterruptHandeler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_ASYNC_RX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_ASYNC_TX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3908$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3908$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3908$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3908$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Mode_Select@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3714$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Init@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3585$TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Init@_timer.TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Mode_Select@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR1_InterruptHandler	PTR FTN()volatile void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3395$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Register_Size_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_Select@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3230$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Init@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2356$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2472$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S2472$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Report_Receive_Overflow_InterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    MSSP_I2C_Interrupt_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Write_Collision_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_DefaultInterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S1835$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S1835$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1835$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    gpio_pin_intialize@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> motor_2.dc_motor_pin(BANK0[2]), motor_2(BANK0[2]), motor_1.dc_motor_pin(BANK0[2]), motor_1(BANK0[2]), 
		 -> lcd_1.lcd_data(BANK0[4]), lcd_1(BANK0[6]), relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> motor_2.dc_motor_pin(BANK0[2]), motor_2(BANK0[2]), motor_1.dc_motor_pin(BANK0[2]), motor_1(BANK0[2]), 
		 -> lcd_1.lcd_data(BANK0[4]), lcd_1(BANK0[6]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> motor_2.dc_motor_pin(BANK0[2]), motor_2(BANK0[2]), motor_1.dc_motor_pin(BANK0[2]), motor_1(BANK0[2]), 
		 -> lcd_1.lcd_data(BANK0[4]), lcd_1(BANK0[6]), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SS(COMRAM[1]), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_CLK(COMRAM[1]), 
		 -> MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDI(COMRAM[1]), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDO(COMRAM[1]), MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_CLK(COMRAM[1]), MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDI(COMRAM[1]), 
		 -> MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDO(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATB(BITBIGSFRllllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    CCP_Compare_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Capture_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Capture_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    CCP_PWM_Stop@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Stop@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Start@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Start@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Set_Duty@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Set_Duty@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1124$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1124$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    configure_voltage_reference@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcInterruptHandeler(), 

    configure_voltage_reference@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK1[7]), 

    select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcInterruptHandeler(), 

    select_result_format@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK1[7]), 

    ADC_GetConversionResult@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcInterruptHandeler(), 

    ADC_GetConversionResult@conversion_result	PTR unsigned short  size(2) Largest target is 2
		 -> LM35(COMRAM[2]), 

    ADC_GetConversionResult@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK1[7]), 

    ADC_StartConversion@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK1[7]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcInterruptHandeler(), Absolute function(), 

    S706$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcInterruptHandeler(), 

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcInterruptHandeler(), 

    ADC_Init@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK1[7]), 

    dc_motor_stop@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_2(BANK0[2]), motor_1(BANK0[2]), 

    dc_motor_move_left@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_2(BANK0[2]), motor_1(BANK0[2]), 

    dc_motor_move_right@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_2(BANK0[2]), motor_1(BANK0[2]), 

    dc_motor_initialize@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_2(BANK0[2]), motor_1(BANK0[2]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    sp__memset	PTR void  size(2) Largest target is 7
		 -> adcArray(BANK1[7]), 

    convert_uint8_to_string@str	PTR unsigned char  size(2) Largest target is 7
		 -> adcArray(BANK1[7]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 18
		 -> adcArray(BANK1[7]), STR_5(CODE[9]), STR_4(CODE[18]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptManager in COMRAM

    _adcInterruptHandeler->_convert_uint8_to_string
    i2_lcd_4bit_send_string_pos->i2_lcd_4bit_set_cursor
    i2_lcd_4bit_set_cursor->i2_lcd_4bit_send_command
    i2_lcd_4bit_send_command->i2_lcd_send_4bits
    i2_lcd_4bit_send_char_data->i2_lcd_send_4bits
    i2_lcd_send_4bits->i2_gpio_pin_write_logic
    i2_lcd_4bit_send_enable_signal->i2_gpio_pin_write_logic
    _dc_motor_stop->i2_gpio_pin_write_logic
    _dc_motor_move_right->i2_gpio_pin_write_logic
    _dc_motor_move_left->i2_gpio_pin_write_logic
    _convert_uint8_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    _application_intialize->_ADC_Init
    _lcd_4bit_intialize->_gpio_pin_intialize
    _dc_motor_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic
    _ADC_Init->_adc_input_channel_port_configure
    _lcd_4bit_send_command->_lcd_4bit_send_enable_signal
    _lcd_4bit_send_char_data->_lcd_4bit_send_enable_signal
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_WelcomingMessage
    _application_intialize->_lcd_4bit_intialize
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _dc_motor_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_direction_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic
    _WelcomingMessage->_lcd_4bit_send_string_pos
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  150854
                _ADC_StartConversion
                   _WelcomingMessage
              _application_intialize
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0   41362
                           _ADC_Init
                _dc_motor_initialize
                 _lcd_4bit_intialize
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_intialize                                   6     4      2   31407
                                             13 BANK1      6     4      2
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _dc_motor_initialize                                  3     1      2    9242
                                              8 BANK1      3     1      2
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   4     2      2    8932
                                             18 BANK0      2     0      2
                                              6 BANK1      2     2      0
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         9     7      2    1337
                                             14 BANK0      3     1      2
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             4     2      2     713
                                             17 BANK0      3     1      2
                                              0 BANK1      1     1      0
   _adc_input_channel_port_configure
        _configure_voltage_reference
               _select_result_format
 ---------------------------------------------------------------------------------
 (3) _select_result_format                                 2     0      2     152
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _configure_voltage_reference                          2     0      2     152
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _adc_input_channel_port_configure                     3     3      0      31
                                             14 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _WelcomingMessage                                     2     2      0   65512
                                             27 BANK1      2     2      0
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             7     1      6   43705
                                             20 BANK1      7     1      6
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  7     3      4   22675
                                             13 BANK1      7     3      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   21807
                                              9 BANK1      4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   19827
                                              9 BANK1      4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    6791
                                             18 BANK0      1     1      0
                                              6 BANK1      3     0      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          3     1      2    6239
                                             18 BANK0      2     0      2
                                              6 BANK1      1     1      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    5777
                                             14 BANK0      4     1      3
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  3     1      2     275
                                             14 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManager                                    14    14      0   24977
                                              0 BANK0     14    14      0
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                      _EUSART_RX_ISR
                      _EUSART_TX_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _MSSP_I2C_BC_ISR
                       _MSSP_I2C_ISR
                       _MSSP_SPI_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR3_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RB7_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB6_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB5_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _MSSP_SPI_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MSSP_I2C_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MSSP_I2C_BC_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_TX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_RX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CCP2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0   24801
                   Absolute function *
               _adcInterruptHandeler *
 ---------------------------------------------------------------------------------
 (9) _adcInterruptHandeler                                 0     0      0   24801
            _ADC_GetConversionResult
                            ___flmul
                            ___fltol
                           ___xxtofl
            _convert_uint8_to_string
                 _dc_motor_move_left
                _dc_motor_move_right
                      _dc_motor_stop
         i2_lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (10) i2_lcd_4bit_send_string_pos                          7     1      6    7869
                                             25 COMRAM     7     1      6
          i2_lcd_4bit_send_char_data
              i2_lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (11) i2_lcd_4bit_set_cursor                               7     3      4    4022
                                             18 COMRAM     7     3      4
            i2_lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (12) i2_lcd_4bit_send_command                             4     1      3    3718
                                             14 COMRAM     4     1      3
             i2_gpio_pin_write_logic
      i2_lcd_4bit_send_enable_signal
                   i2_lcd_send_4bits
 ---------------------------------------------------------------------------------
 (11) i2_lcd_4bit_send_char_data                           4     1      3    3562
                                             14 COMRAM     4     1      3
             i2_gpio_pin_write_logic
      i2_lcd_4bit_send_enable_signal
                   i2_lcd_send_4bits
 ---------------------------------------------------------------------------------
 (13) i2_lcd_send_4bits                                    4     1      3    1318
                                             10 COMRAM     4     1      3
             i2_gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (13) i2_lcd_4bit_send_enable_signal                       3     1      2    1080
                                             10 COMRAM     3     1      2
             i2_gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (10) _dc_motor_stop                                       3     1      2    1149
                                             10 COMRAM     3     1      2
             i2_gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (10) _dc_motor_move_right                                 3     1      2    1149
                                             10 COMRAM     3     1      2
             i2_gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (10) _dc_motor_move_left                                  3     1      2    1149
                                             10 COMRAM     3     1      2
             i2_gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (14) i2_gpio_pin_write_logic                             10     7      3     907
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (10) _convert_uint8_to_string                             4     2      2    8351
                                            108 COMRAM     4     2      2
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (11) _sprintf                                            23    15      8    6760
                                             87 COMRAM    21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (12) _vfprintf                                            8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (13) _vfpfcnvrt                                          42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (14) _dtoa                                               36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (15) _pad                                                11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (16) _strlen                                              4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _fputs                                               7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (14) _fputc                                               9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (15) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (15) _abs                                                 4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (15) ___aomod                                            18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (15) ___aodiv                                            26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (11) _memset                                             12     6      6    1403
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (10) ___xxtofl                                           14    10      4    1386
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (10) ___fltol                                            10     6      4     761
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) ___flmul                                            25    17      8    2504
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) _ADC_GetConversionResult                             8     4      4     483
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_StartConversion
   _WelcomingMessage
     _lcd_4bit_send_command
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
         _gpio_pin_write_logic
       _lcd_send_4bits
         _gpio_pin_write_logic
     _lcd_4bit_send_string_pos
       _lcd_4bit_send_char_data
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
         _lcd_send_4bits
       _lcd_4bit_set_cursor
         _lcd_4bit_send_command
   _application_intialize
     _ADC_Init
       _adc_input_channel_port_configure
       _configure_voltage_reference
       _select_result_format
     _dc_motor_initialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
     _lcd_4bit_intialize
       _gpio_pin_intialize
       _lcd_4bit_send_command
   _lcd_4bit_send_string_pos

 _InterruptManager (ROOT)
   _ADC_ISR
     Absolute function(Fake) *
     _adcInterruptHandeler *
       _ADC_GetConversionResult
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _convert_uint8_to_string
         _memset
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                   _strlen
               _fputc
       _dc_motor_move_left
         i2_gpio_pin_write_logic
       _dc_motor_move_right
         i2_gpio_pin_write_logic
       _dc_motor_stop
         i2_gpio_pin_write_logic
       i2_lcd_4bit_send_string_pos
         i2_lcd_4bit_send_char_data
           i2_gpio_pin_write_logic
           i2_lcd_4bit_send_enable_signal
             i2_gpio_pin_write_logic
           i2_lcd_send_4bits
             i2_gpio_pin_write_logic
         i2_lcd_4bit_set_cursor
           i2_lcd_4bit_send_command
             i2_gpio_pin_write_logic
             i2_lcd_4bit_send_enable_signal
             i2_lcd_send_4bits
   _CCP1_ISR
   _CCP2_ISR
   _EUSART_RX_ISR
   _EUSART_TX_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _MSSP_I2C_BC_ISR
   _MSSP_I2C_ISR
   _MSSP_SPI_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
   _TMR1_ISR
   _TMR2_ISR
   _TMR3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1D      6F       7       43.4%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     14      72       5       89.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     70      72       1       90.5%
BITBIGSFRhlhhlh     18      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlllhh       6      0       0      46        0.0%
BITBIGSFRhlhhll      5      0       0      39        0.0%
BITBIGSFRllhllh      4      0       0      43        0.0%
BITBIGSFRllllh       4      0       0      47        0.0%
BITBIGSFRllhllh      4      0       0      44        0.0%
BITBIGSFRlllll       4      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      42        0.0%
BITBIGSFRllhlh       1      0       0      41        0.0%
BITBIGSFRllhh        1      0       0      40        0.0%
BITBIGSFRllhlll      1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     153      12        0.0%
DATA                 0      0     153       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Feb 04 15:59:58 2023

                               ??_InterruptManager 00DD                                    ?_lcd_send_4bits 0158  
                                      _SSPSTATbits 000FC7                                                 l74 3294  
                                               l69 24EC                                                 l79 3314  
                       i2lcd_4bit_send_command@lcd 000F                         i2lcd_4bit_send_command@ret 0012  
                                              l100 3032                                                l202 2F88  
                                              l211 3734                                                l176 3214  
                                              l179 3994                                                l460 36BC  
                                              l380 2CA6                                                l454 37C0  
                                              l382 2D4C                                                l464 36DE  
                                              l456 37C2                                                l449 2BBC  
                                              l714 2640                                                l395 3A4C  
                                              l467 36E6                                                l396 3A52  
                                              l397 3A54                                                l733 277C  
                                              l469 36EA                                                l754 338C  
              __end_of_configure_voltage_reference 36EC                        _configure_voltage_reference 36A0  
                                              _PR2 000FCB                                                _abs 391C  
                                              _pad 2D4E                          _RB5_InterruptHandler_HIGH 00A8  
                                  __end_of_ADC_ISR 3A30                                                _ret 00F1  
              __end_of_lcd_4bit_send_enable_signal 3996                     ?i2_lcd_4bit_send_enable_signal 000B  
                      _lcd_4bit_send_enable_signal 395C                                led_initialize@F3013 00C7  
                                              prod 000FF3                              relay_initialize@F3007 00C3  
                                              tosl 000FFD                                                wreg 000FE8  
                                     ___flmul@aexp 0020                                       ___flmul@bexp 0021  
                      lcd_send_4bits@_data_command 015A                                       ___flmul@sign 001B  
                                     ___flmul@temp 0026                                       ___flmul@prod 0022  
                                  __end_of_RB4_ISR 3AE4                                    __end_of_RB5_ISR 3ACA  
                                  __end_of_RB6_ISR 3AB0                                    __end_of_RB7_ISR 3A96  
                                     ___fltol@exp1 0031                                               ?_abs 0013  
                                             l1750 377C                                               l1747 3650  
                                             ?_pad 0011                                               l7120 3A30  
                                             l7122 3A44                                               l7124 3A4E  
                                             l7118 3A30                                               l9040 3730  
                                             l9032 36EC                                               l9050 2CA8  
                                             l9034 36F2                                               l9060 2D18  
                                             l9052 2D00                                               l9044 2C88  
                                             l9036 3704                                               l9070 2D44  
                                             l9062 2D1A                                               l9054 2D12  
                                             l9046 2C88                                               l9038 370C  
                                             l9064 2D2A                                               l9056 2D14  
                                             l9072 2D4A                                               l9048 2C9C  
                                             l9160 376C                                               l9162 35FE  
                                             l9066 2D36                                               l9058 2D16  
                                             l9164 3620                                               l9068 2D42  
                                             l9166 363A                                               l9158 3736  
                                             l8800 24EE                                               l8810 2598  
                                             l8802 24F4                                               l8900 2B14  
                                             l8804 2506                                               l8830 3232  
                                             l8910 2B32                                               l8902 2B1A  
                                             l8814 25F6                                               l8806 252A  
                                             l8760 267E                                               l8832 3292  
                                             l8824 3216                                               l8904 2B20  
                                             l8912 2B38                                               l8920 377E  
                                             l8808 2534                                               l8816 263C  
                                             l8840 332A                                               l8762 2688  
                                             l8770 2778                                               l8754 2642  
                                             l8850 3296                                               l8826 3216  
                                             l8906 2B26                                               l8930 36C4  
                                             l8922 379A                                               l8842 334E  
                                             l8764 26EC                                               l8756 2648  
                                             l8780 317C                                               l8852 3296  
                                             l8828 322A                                               l8908 2B2C  
                                             l8924 37A0                                               l8844 3358  
                                             l8836 3316                                               l8940 23E2  
                                             l8932 2398                                               l8758 265A  
                                             l8790 395C                                               l8782 319E  
                                             l8854 32AA                                               l8870 2F18  
                                             l8862 2ED8                                               l8926 37BA  
                                             l8846 338A                                               l8838 3316  
                                             l8950 240C                                               l8934 239E  
                                             l8768 274A                                               l8792 395C  
                                             l8784 31C2                                               l8856 32B2  
                                             l8872 2F32                                               l8864 2EDE  
                                             l8928 36A0                                               l8960 2468  
                                             l8952 241C                                               l8936 23B0  
                                             l8794 3972                                               l8786 31E8  
                                             l8778 317C                                               l8858 3312  
                                             l8866 2EE4                                               l8874 2F4C  
                                             l8890 2AF6                                               l8970 24C2  
                                             l8962 247A                                               l8954 242E  
                                             l8946 23E6                                               l8938 23B8  
                                             l8796 3978                                               l8868 2EFE  
                                             l8876 2F86                                               l8980 2F8A  
                                             l8892 2AFC                                               l8884 2AE6  
                                             l8972 24D4                                               l8964 248C  
                                             l8956 2440                                               l8948 2408  
                                             l8990 2FFC                                               l8982 2F9E  
                                             l8894 2B02                                               l8886 2AEA  
                                             l8966 249E                                               l8958 2462  
                                             l8974 24EA                                               STR_1 102C  
                                             l8992 302E                                               l8984 2FA6  
                                             l8896 2B08                                               l8888 2AF0  
                                             l8968 24B0                                               l8986 2FC2  
                                             l8978 2F8A                                               l8898 2B0E  
                                             l9890 38DE                                               STR_4 1011  
                                             STR_5 1023                                               l8988 2FF8  
                                             l9892 38E2                                               l9894 3904  
                                             l9888 38DA                                               _LM35 0071  
                                             _LATA 000F89                                               _LATB 000F8A  
                                             _LATC 000F8B                                               _LATD 000F8C  
                                             _LATE 000F8D                                               u8000 379A  
                                             u8001 3796                                               u8010 37BA  
                                             u8011 37B6                                               u8020 36BC  
                                             u8021 36B8                                               u8030 36DE  
                                             u8031 36DA                                               u8040 23B0  
                                             u8041 23AC                                               u8130 3704  
                                             u8050 241C                                               u8131 3700  
                                             u8051 2418                                               u8060 2F9E  
                                             u8140 2C9C                                               u8061 2F9A  
                                             u8141 2C98                                               u8070 2FEC  
                                             u8080 301E                                               i2l74 33FE  
                                             u8090 302E                                               u8091 302A  
                                             u8077 2FE2                                               u5790 3A44  
                                             i2l79 3470                                               u5791 3A40  
                                             u8087 3014                                               u7900 2506  
                                             u7901 2502                                               u7910 252A  
                                             u7911 2526                                               u7860 265A  
                                             u7940 2610                                               u7924 2554  
                                             u7861 2656                                               u7941 260A  
                                             u7925 2550                                               u7870 267E  
                                             u7950 2612                                               u7934 25B8  
                                             u7871 267A                                               u7935 25B4  
                                             u7960 322A                                               u7961 3226  
                                             u9457 2424                                               u7970 332A  
                                             u7971 3326                                               u9467 2448  
                                             u7884 26A8                                               u7980 334E  
                                             u7885 26A4                                               u7981 334A  
                                             u9477 2464                                               u7894 270C  
                                             u7990 32AA                                               u7895 2708  
                                             u7991 32A6                                               u9487 362C  
                                             _TMR2 000FCC                            ??_application_intialize 00F1  
                    ??_lcd_4bit_send_enable_signal 00F1                           _RB4_InterruptHandler_LOW 00AA  
                                             abs@a 0013                                               _dbuf 0106  
                                             _main 38DA                                               _dtoa 18E0  
                                 __end_of_CCP1_ISR 3B4C                                   __end_of_CCP2_ISR 3B48  
                                             _prec 0084                                               _nout 0080  
                         _RB7_InterruptHandler_LOW 009E                                               pad@i 0018  
                                             pad@p 0015                                               fsr0h 000FEA  
                                             fsr1h 000FE2                                               indf0 000FEF  
                                             fsr2h 000FDA                                               fsr0l 000FE9  
                                             indf2 000FDF                                               fsr1l 000FE1  
                                             pad@w 001A                                               fsr2l 000FD9  
                                             btemp 0073                                   __end_of_ADC_Init 2D4E  
                                             prodh 000FF4                                               prodl 000FF3  
                                             start 000E                                       ___param_bank 000000  
                            _lcd_4bit_send_command 3216                             dc_motor_initialize@ret 015C  
                                            ??_abs 0015                               _gpio_pin_write_logic 2642  
                 i2lcd_4bit_send_string_pos@column 001D                     lcd_4bit_send_string_pos@column 0169  
                                            ??_pad 0017                              lcd_4bit_intialize@lcd 015F  
                            lcd_4bit_intialize@ret 0164                                   __end_of_INT0_ISR 3B40  
                                 __end_of_INT1_ISR 3B3C                                   __end_of_INT2_ISR 3B38  
                                            l10030 2F60                                              l10032 2762  
                                            l10026 2626                                              l10028 2B4E  
                                    _EUSART_RX_ISR 3B4E                                      ___fltol@sign1 0030  
                                    _EUSART_TX_ISR 3B40                                    __end_of___aodiv 20BE  
                                            ?_main 0001                                              ?_dtoa 001C  
                                  __end_of___aomod 2398                                              _EEADR 000FA9  
                                  __end_of___flmul 18E0                                    __end_of___fltol 2AE2  
                                            i2l100 317A                                              i2l202 30DA  
                                            i2l221 3894                                              i2l216 384E  
                                            i2l226 3808                                              i2l158 35FC  
                                            i2l415 2ED6                                              i2l176 34D8  
                                            i2l179 39FE                                              i2l473 3A2E  
                                            i2l733 29DA                                              i2l574 3B46  
                                            i2l569 3B4A                                              i2l923 3B32  
                                            i2l919 3B2E                                              i2l992 3B3A  
                                            i2l987 3B3E                                              i2l997 3B36  
                                            _RCREG 000FAE                                relay_turn_off@F3017 00C1  
                                     vfpfcnvrt@fmt 0042                                              _TMR0H 000FD7  
                                            _TMR1H 000FCF                                              _TMR0L 000FD6  
                                            _TMR1L 000FCE                                              _TMR3H 000FB3  
                                            _TMR3L 000FB2                                              _SPBRG 000FAF  
                                            _PORTA 000F80                                              _PORTB 000F81  
                                            _PORTC 000F82                                              _PORTD 000F83  
                                            _PORTE 000F84                                              _TRISA 000F92  
                                            _TRISB 000F93                                              _TRISC 000F94  
                                            _TRISD 000F95                                              _TRISE 000F96  
                                            _TXREG 000FAD                          lcd_4bit_set_cursor@coulmn 0162  
                                 _WelcomingMessage 35FE                                   __end_of_TMR0_ISR 3B24  
                                 __end_of_TMR1_ISR 3B16                                   __end_of_TMR2_ISR 3B2C  
                                            _adc_1 014B                                   __end_of_TMR3_ISR 3B08  
                                            _lcd_1 00D3                                              _flags 0086  
                                            _fputc 2BBE                                              _fputs 3896  
                                            pad@fp 0011                                              _width 0082  
                                            _putch 3B50                                              dtoa@d 001E  
                                            dtoa@i 003E                                              dtoa@n 0036  
                                            dtoa@p 0030                                              dtoa@s 0034  
                                            dtoa@w 0032                                              pclath 000FFA  
                                            pclatu 000FFB                                              tablat 000FF5  
                                            ttemp5 0074                                              ttemp6 0077  
                                            ttemp7 007B                                              status 000FD8  
                                            wtemp8 0074                                    __end_of_sprintf 36A0  
                                  __initialization 34DA                                       __end_of_main 391C  
                                     __end_of_dtoa 1BC4                          i2gpio_pin_write_logic@ret 000A  
                            ?_gpio_pin_write_logic 00EB                                i2lcd_send_4bits@lcd 000B  
                              i2lcd_send_4bits@ret 000E                        i2gpio_pin_write_logic@logic 0003  
                                        ??_ADC_ISR 0071                                     ?_EUSART_RX_ISR 0001  
                                   ?_EUSART_TX_ISR 0001                                      _lat_registers 0137  
                      __end_of_dc_motor_initialize 3736                                             ??_main 00F1  
                                           ??_dtoa 0026                                      __activetblptr 000003  
                            _TMR3_InterruptHandler 0092                                   led_turn_on@F3018 00C6  
                                        ??_RB4_ISR 0001                                          ??_RB5_ISR 0001  
                                        ??_RB6_ISR 0001                                          ??_RB7_ISR 0001  
                       _EUSART_OverrunErrorHandler 0088                                             ?_fputc 0001  
                                           ?_fputs 000A                                             _ADRESH 000FC4  
                                           _EEADRH 000FAA                                             _ADRESL 000FC3  
                                           _EEDATA 000FA8                                             _CCPR1L 000FBE  
                                           _CCPR2L 000FBB                                             _EECON2 000FA7  
                                           ?_putch 0001                                             i2l1030 3AAE  
                                           i2l1008 3AE2                                             i2l1041 3A94  
                                           i2l1019 3AC8                                             i2l1220 10CA  
                                           i2l1230 1228                                             i2l1222 1110  
                                           i2l1240 133A                                             i2l1232 126E  
                                           i2l1224 1156                                             i2l1216 108A  
                                           i2l1321 3B4C                                             i2l1250 13DA  
                                           i2l1242 135A                                             i2l1234 12B4  
                                           i2l1226 119C                                             i2l1218 10AA  
                                           i2l1252 13FA                                             i2l1244 137A  
                                           i2l1236 12FA                                             i2l1228 11E2  
                                           i2l1261 147A                                             i2l1254 141A  
                                           i2l1246 139A                                             i2l1238 131A  
                                           i2l1256 143A                                             i2l1248 13BA  
                                           i2l2057 2AE0                                             i2l1258 145A  
                                           i2l1507 3B2A                                             i2l2422 1E70  
                                           i2l2415 1DD8                                             i2l1551 3B06  
                                           i2l2520 35A2                                             i2l1456 3B14  
                                           i2l2513 1D80                                             i2l2418 1F34  
                                           i2l2506 1BC2                                             i2l2435 2232  
                                           i2l1387 3B22                                             i2l2524 3952  
                                           i2l2381 1770                                             i2l2429 1ECC  
                                           i2l2374 157A                                             i2l2550 3B50  
                                           i2l2391 18A0                                             i2l2383 17E8  
                                           i2l2527 395A                                             i2l2519 359A  
                                           i2l2384 17D6                                             i2l6000 2BD0  
                                           i2l2480 2E12                                             i2l2448 369E  
                                           i2l2378 18DE                                             i2l6002 2BE2  
                                           i2l2539 2C86                                             i2l2547 38D8  
                                           i2l2475 2D94                                             i2l1683 3B42  
                                           i2l6100 2340                                             i2l6004 2BEC  
                                           i2l6012 3896                                             i2l2556 39CA  
                                           i2l6020 3996                                             i2l1692 3B4E  
                                           i2l1757 28AE                                             i2l6030 1F36  
                                           i2l6102 2346                                             i2l6006 2C0A  
                                           i2l6014 38A2                                             i2l6022 39A2  
                                           i2l2478 2DD6                                             i2l6110 2D4E  
                                           i2l2486 1980                                             i2l6040 1F7A  
                                           i2l6032 1F3A                                             i2l6104 2356  
                                           i2l6008 2C40                                             i2l6016 38B4  
                                           i2l6024 39A6                                             i2l6120 2DA0  
                                           i2l6112 2D5E                                             i2l2488 1988  
                                           i2l6200 28B4                                             i2l1874 20BC  
                                           i2l6050 1FD0                                             i2l6042 1F9A  
                                           i2l6034 1F48                                             i2l6106 2376  
                                           i2l6018 38B8                                             i2l6026 39BE  
                                           i2l6122 2DB4                                             i2l6114 2D72  
                                           i2l6202 28C6                                             i2l6060 2052  
                                           i2l6052 1FE4                                             i2l6044 1F9E  
                                           i2l6036 1F68                                             i2l6132 391C  
                                           i2l6124 2DB8                                             i2l6116 2D80  
                                           i2l6140 1928                                             i2l6212 29AE  
                                           i2l6204 28E8                                             i2l6300 39CC  
                                           i2l7020 2796                                             i2l6070 209C  
                                           i2l6062 2054                                             i2l6054 1FF2  
                                           i2l6046 1FAA                                             i2l6038 1F6C  
                                           i2l6134 3936                                             i2l6126 2DE6  
                                           i2l6118 2D8C                                             i2l6150 1990  
                                           i2l6142 1948                                             i2l6206 28F0  
                                           i2l6214 29D8                                             i2l6302 39CC  
                                           i2l7030 2854                                             i2l7022 27E8  
                                           i2l1887 2396                                             i2l6400 2176  
                                           i2l6064 2066                                             i2l6056 2004  
                                           i2l6048 1FC8                                             i2l6080 2266  
                                           i2l6128 2DFA                                             i2l6160 19C8  
                                           i2l6152 19A2                                             i2l6144 1958  
                                           i2l6136 18E0                                             i2l6208 2952  
                                           i2l6304 39E0                                             i2l7032 286A  
                                           i2l7024 27FA                                             i2l7200 3A98  
                                           i2l6410 21D6                                             i2l6058 2032  
                                           i2l6066 206C                                             i2l6090 22BE  
                                           i2l6082 226A                                             i2l6074 2234  
                                           i2l6162 19CE                                             i2l6170 1AC0  
                                           i2l6154 19B0                                             i2l6146 195A  
                                           i2l6138 1900                                             i2l6250 1BF8  
                                           i2l6306 39E6                                             i2l7034 288E  
                                           i2l7026 281A                                             i2l7018 277E  
                                           i2l7130 3A02                                             i2l7202 3A9A  
                                           i2l6412 220A                                             i2l6404 2190  
                                           i2l6068 207C                                             i2l6092 22D2  
                                           i2l6084 2278                                             i2l6076 2238  
                                           i2l6172 1ADA                                             i2l6180 1B3C  
                                           i2l6164 1A50                                             i2l6156 19B6  
                                           i2l6148 1974                                             i2l6260 1CA2  
                                           i2l6252 1C0A                                             i2l6332 3540  
                                           i2l6420 3652                                             i2l6340 338E  
                                           i2l7028 2830                                             i2l7132 3A16  
                                           i2l7140 3B44                                             i2l6414 2216  
                                           i2l6406 21BC                                             i2l6094 22E0  
                                           i2l6086 2298                                             i2l6078 2246  
                                           i2l6190 1B82                                             i2l6182 1B4E  
                                           i2l6174 1AF8                                             i2l6166 1A56  
                                           i2l6158 19BE                                             i2l6270 1D22  
                                           i2l6254 1C0E                                             i2l6246 1BC4  
                                           i2l6334 3548                                             i2l6422 3662  
                                           i2l6342 338E                                             i2l7134 3B48  
                                           i2l7150 3B30                                             i2l7222 3A94  
                                           i2l7214 3A7E                                             i2l6416 221C  
                                           i2l6096 230E                                             i2l6088 22B6  
                                           i2l6192 1B8A                                             i2l6184 1B5E  
                                           i2l6176 1B12                                             i2l6168 1A5C  
                                           i2l6264 1CDA                                             i2l6256 1C34  
                                           i2l6248 1BEA                                             i2l6280 1D48  
                                           i2l6336 3556                                             i2l6424 366A  
                                           i2l6520 35C4                                             i2l6440 346E  
                                           i2l6432 3400                                             i2l6344 33A0  
                                           i2l7128 3A00                                             i2l7304 3B4E  
                                           i2l7160 3B38                                             i2l7208 3AAE  
                                           i2l7216 3A80                                             i2l6418 2220  
                                           i2l6098 232E                                             i2l6186 1B64  
                                           i2l6194 1B9A                                             i2l6178 1B2C  
                                           i2l6282 1D6E                                             i2l6266 1D00  
                                           i2l6274 1D2E                                             i2l6258 1C5A  
                                           i2l6338 357C                                             i2l6426 3672  
                                           i2l6522 35E0                                             i2l6514 35A6  
                                           i2l6530 380E                                             i2l6290 3472  
                                           i2l6434 3400                                             i2l6346 33A8  
                                           i2l6450 3056                                             i2l7154 3B3C  
                                           i2l7146 3B2C                                             i2l6620 2E40  
                                           i2l6612 2E14                                             i2l6700 165C  
                                           i2l6188 1B76                                             i2l6276 1D3C  
                                           i2l6268 1D0E                                             i2l6428 368E  
                                           i2l6524 35FA                                             i2l6516 35AA  
                                           i2l6540 3850                                             i2l6532 3820  
                                           i2l6292 3488                                             i2l6436 3412  
                                           i2l6348 33FC                                             i2l6452 306E  
                                           i2l6444 3034                                             i2l7180 3AE2  
                                           i2l7172 3ACC                                             i2l6630 2ED0  
                                           i2l6622 2E5A                                             i2l6614 2E14  
                                           i2l6710 16CA                                             i2l6702 1676  
                                           i2l6518 35BC                                             i2l6198 28B0  
                                           i2l6542 3854                                             i2l6534 3828  
                                           i2l6294 34A0                                             i2l6438 341A  
                                           i2l6454 3086                                             i2l6446 3038  
                                           i2l7166 3B34                                             i2l7174 3ACE  
                                           i2l7270 3B16                                             i2l6624 2E82  
                                           i2l6632 2ED4                                             i2l6616 2E26  
                                           i2l6720 1760                                             i2l6712 16F4  
                                           i2l6704 1686                                             i2l6640 14D0  
                                           i2l6800 2AA0                                             i2l6392 20DC  
                                           i2l6544 3866                                             i2l6536 384C  
                                           i2l6528 380A                                             i2l6560 3806  
                                           i2l6552 37C4                                             i2l6296 34BA  
                                           i2l6288 3472                                             i2l6448 303E  
                                           i2l6456 309E                                             i2l7272 3B18  
                                           i2l7280 3B0A                                             i2l6626 2E9C  
                                           i2l6618 2E38                                             i2l6730 17A0  
                                           i2l6722 176E                                             i2l6714 172A  
                                           i2l6706 16A2                                             i2l6650 1508  
                                           i2l6642 14D2                                             i2l6802 2AB0  
                                           i2l6810 1D84                                             i2l6394 20E8  
                                           i2l6546 386E                                             i2l6554 37C8  
                                           i2l6458 30D8                                             i2l7194 3AC8  
                                           i2l7186 3AB2                                             i2l7274 3B1E  
                                           i2l7282 3B10                                             i2l7290 3AFA  
                                           i2l6740 1812                                             i2l6732 17CE  
                                           i2l6724 1780                                             i2l6716 1738  
                                           i2l6708 16AE                                             i2l6660 1534  
                                           i2l6652 1518                                             i2l6644 14E2  
                                           i2l6636 14B6                                             i2l6804 2AC0  
                                           i2l6812 1D94                                             i2l6388 20BE  
                                           i2l6548 3892                                             i2l6556 37DA  
                                           i2l7188 3AB4                                             i2l7292 3AFC  
                                           i2l6750 1888                                             i2l6742 183C  
                                           i2l6726 178E                                             i2l6718 1756  
                                           i2l6670 158A                                             i2l6662 1544  
                                           i2l6654 151E                                             i2l6646 14F2  
                                           i2l6638 14C2                                             i2l6806 2AD0  
                                           i2l6830 1E5A                                             i2l6822 1E12  
                                           i2l6814 1DA2                                             i2l6398 211E  
                                           i2l6558 37E2                                             i2l7278 3B08  
                                           i2l7286 3B24                                             i2l7294 3B02  
                                           i2l6752 18A4                                             i2l6760 18CA  
                                           i2l6736 17F8                                             i2l6744 1840  
                                           i2l6728 1792                                             i2l6680 15C4  
                                           i2l6672 159A                                             i2l6664 1554  
                                           i2l6656 1524                                             i2l6648 1502  
                                           i2l6840 1EDA                                             i2l6832 1E66  
                                           i2l6824 1E1A                                             i2l6816 1DE8  
                                           i2l6762 18CE                                             i2l6754 18B4  
                                           i2l6746 185A                                             i2l6738 1804  
                                           i2l6690 1616                                             i2l6682 15DA  
                                           i2l6666 1564                                             i2l6658 1532  
                                           i2l6850 1F22                                             i2l6842 1EDC  
                                           i2l6834 1EA2                                             i2l6826 1E26  
                                           i2l6818 1DFE                                             i2l7298 3B40  
                                           i2l6756 18C2                                             i2l6748 186E  
                                           i2l6692 1624                                             i2l6684 15E6  
                                           i2l6676 15AE                                             i2l6668 156A  
                                           i2l6780 2A46                                             i2l6772 2A06  
                                           i2l6852 1F24                                             i2l6844 1EE0  
                                           i2l6836 1EAE                                             i2l6828 1E58  
                                           i2l6860 30EE                                             i2l6758 18C4  
                                           i2l6694 1630                                             i2l6686 15FE  
                                           i2l6678 15BA                                             i2l6790 2A76  
                                           i2l6782 2A54                                             i2l6774 2A30  
                                           i2l6766 29DC                                             i2l6846 1F04  
                                           i2l6838 1EBC                                             i2l6870 3178  
                                           i2l6862 30F6                                             i2l6696 1640  
                                           i2l6688 160A                                             i2l6792 2A80  
                                           i2l6776 2A32                                             i2l6768 29F2  
                                           i2l6848 1F14                                             i2l6864 3110  
                                           i2l6856 30DC                                             i2l6698 164C  
                                           i2l6778 2A42                                             i2l6866 3142  
                                           i2l6858 30DC                                             i2l6788 2A6C  
                                           i2l6868 3146                                             i2l9700 111E  
                                           i2l6798 2A94                                             i2l5998 2BBE  
                                           i2l9710 1164                                             i2l9702 112C  
                                           i2l9800 13F6                                             i2l9720 11AA  
                                           i2l9712 1172                                             i2l9704 113A  
                                           i2l9810 1448                                             i2l9802 1408  
                                           i2l9730 11F0                                             i2l9722 11B8  
                                           i2l9714 1180                                             i2l9706 114C  
                                           i2l9812 1456                                             i2l9804 1416  
                                           i2l9740 1236                                             i2l9732 11FE  
                                           i2l9724 11C6                                             i2l9716 1192  
                                           i2l9708 1150                                             i2l9814 1468  
                                           i2l9806 1428                                             i2l9750 127C  
                                           i2l9742 1244                                             i2l9734 120C  
                                           i2l9726 11D8                                             i2l9718 1196  
                                           i2l9816 1476                                             i2l9808 1436  
                                           i2l9760 12C2                                             i2l9752 128A  
                                           i2l9744 1252                                             i2l9736 121E  
                                           i2l9728 11DC                                             i2l9680 1086  
                                           i2l9770 1308                                             i2l9762 12D0  
                                           i2l9754 1298                                             i2l9746 1264  
                                           i2l9738 1222                                             i2l9690 10D8  
                                           i2l9682 1098                                             i2l9780 1356  
                                           i2l9772 1316                                             i2l9764 12DE  
                                           i2l9756 12AA                                             i2l9748 1268  
                                           i2l9692 10E6                                             i2l9684 10A6  
                                           i2l9676 106A                                             i2l9790 13A8  
                                           i2l9782 1368                                             i2l9774 1328  
                                           i2l9766 12F0                                             i2l9758 12AE  
                                           i2l9694 10F4                                             i2l9686 10B8  
                                           i2l9678 1078                                             i2l9792 13B6  
                                           i2l9784 1376                                             i2l9776 1336  
                                           i2l9768 12F4                                             i2l9696 1106  
                                           i2l9688 10C6                                             i2l9794 13C8  
                                           i2l9786 1388                                             i2l9778 1348  
                                           i2l9698 110A                                             i2l9796 13D6  
                                           i2l9788 1396                                             i2l9798 13E8  
                                           _SPBRGH 000FB0                                             _SSPADD 000FC8  
                                           _SSPBUF 000FC9                                   __end_of___xxtofl 1F36  
                 __end_of_lcd_4bit_send_string_pos 3034                        __end_of_dc_motor_move_right 3850  
                           ?_lcd_4bit_send_command 015B                           i2lcd_4bit_set_cursor@lcd 0013  
                                     vfprintf@cfmt 0056                           i2lcd_4bit_set_cursor@ret 0019  
                         i2lcd_4bit_set_cursor@row 0015                                          ??___aodiv 0011  
                                        ??___aomod 0011                                          ??___flmul 0017  
                                        ??___fltol 002C                                             _memset 20BE  
                                           clear_0 3520                                             clear_1 352C  
                                           isa$std 000001                       __end_of_adcInterruptHandeler 28B0  
                                           pad@buf 0013                                             dtoa@fp 001C  
                                           _strlen 3996            gpio_pin_direction_intialize@_pin_config 00EB  
                                ?i2_lcd_send_4bits 000B        _I2C_Report_Receive_Overflow_InterruptHandle 00B4  
                                           fputc@c 0001                                          ?_CCP1_ISR 0001  
                                           fputs@c 000E                                             fputs@i 000F  
                                        ?_CCP2_ISR 0001                                             fputs@s 000A  
                                        ?_ADC_Init 00EE                                       __mediumconst 0000  
                               ??i2_lcd_send_4bits 000E                                             tblptrh 000FF7  
                                           tblptrl 000FF6                                             tblptru 000FF8  
                                           putch@c 0001                                   __end_of_vfprintf 35A4  
                                        ??_sprintf 0060                       __end_of_select_result_format 37C4  
                                     ___xxtofl@arg 000B                                       ___xxtofl@exp 000A  
                                     ___xxtofl@val 0001                            _convert_uint8_to_string 35A4  
                                       __accesstop 0080                            __end_of__initialization 3536  
                                        ?_INT0_ISR 0001                                          ?_INT1_ISR 0001  
                                        ?_INT2_ISR 0001                                      ___rparam_used 000001  
                                       ___fltol@f1 0028                                   ??_lcd_send_4bits 00EF  
                      dc_motor_move_left@_dc_motor 000B                         convert_uint8_to_string@ret 0070  
                       convert_uint8_to_string@str 006D                         ?i2_lcd_4bit_send_char_data 000F  
                          _lcd_4bit_send_char_data 3296                            i2_lcd_4bit_send_command 338E  
                                RB5_ISR@RB5_Source 0001                             ??_gpio_pin_write_logic 0152  
                                   __pcstackCOMRAM 0001                         _I2C_DefaultInterruptHandle 00B6  
                                     __pidataBANK0 3AE4                                       __pidataBANK1 3A56  
                                        ?_TMR0_ISR 0001                                    ??_EUSART_RX_ISR 0001  
                                        ?_TMR1_ISR 0001                                          ?_TMR2_ISR 0001  
                                        ?_TMR3_ISR 0001                                    ??_EUSART_TX_ISR 0001  
                                    __end_of_fputc 2C88                                      __end_of_fputs 38DA  
                                    __end_of_putch 3B52                           lcd_4bit_send_command@lcd 015B  
                         lcd_4bit_send_command@ret 015E                       ??i2_lcd_4bit_send_string_pos 0020  
                          _ADC_GetConversionResult 2E14                                         ??_CCP1_ISR 0001  
                                       ??_CCP2_ISR 0001                                         ??_ADC_Init 00F0  
                                          ??_fputc 0005                                            ??_fputs 000E  
                                          ??_putch 0001                             ADC_StartConversion@ret 00ED  
                                       __pbssBANK0 0080                                         __pbssBANK1 0100  
                            _INT0_InterruptHandler 00B2                                         ??_INT0_ISR 0001  
                                       ??_INT1_ISR 0001                                         ??_INT2_ISR 0001  
                       ADC_GetConversionResult@ret 0008                      __end_of_application_intialize 377E  
                            i2_lcd_4bit_set_cursor 3034                           __end_of_WelcomingMessage 3652  
                __end_ofi2_lcd_4bit_send_char_data 3472                                         ??_TMR0_ISR 0001  
                                       ??_TMR1_ISR 0001                                         ??_TMR2_ISR 0001  
                                       ??_TMR3_ISR 0001                                  led_turn_off@F3023 00C5  
                                          _ADC_ISR 3A00                                            ?_memset 0001  
                                          ?_strlen 0001                                  RB7_ISR@RB7_Source 0001  
                                          i2l10034 30B2                                            i2l10036 29C2  
                                          _RB4_ISR 3ACA                                            _RB5_ISR 3AB0  
                                          _RB6_ISR 3A96                                            _RB7_ISR 3A7C  
                                        ?___xxtofl 0001                          ?_lcd_4bit_send_string_pos 0166  
                        _RB6_InterruptHandler_HIGH 00A4                                      ?_MSSP_I2C_ISR 0001  
                             led_turn_toggle@F3028 00C4                          ??_convert_uint8_to_string 006F  
                                       _btn_values 1001                                     _tris_registers 0141  
                         _RB6_InterruptHandler_LOW 00A2                          ??_lcd_4bit_send_char_data 00F1  
                             _adcInterruptHandeler 277E                          ??i2_lcd_4bit_send_command 0012  
                                    ?_MSSP_SPI_ISR 0001                      i2lcd_4bit_send_string_pos@lcd 001A  
                    i2lcd_4bit_send_string_pos@ret 0020                      i2lcd_4bit_send_string_pos@row 001C  
                    i2lcd_4bit_send_string_pos@str 001E                                  ??_MSSP_I2C_BC_ISR 0001  
                             _ADC_InterruptHandler 00BE                                            __Hparam 0000  
                                     ADC_Init@_adc 00EE                                            __Lparam 0000  
                            dc_motor_move_left@ret 000D                                            ___aodiv 1F36  
                                          ___aomod 2234                                            ___flmul 14B6  
                                          ___fltol 29DC                                          ?_vfprintf 0050  
                                     __psmallconst 1000                          ??_ADC_GetConversionResult 0005  
                       __end_of_gpio_pin_intialize 338E                                            __pcinit 34DA  
                             _select_result_format 377E                                            __ramtop 1000  
                                          __ptext0 38DA                                            __ptext1 3736  
                                          __ptext2 2398                                            __ptext3 36EC  
                                          __ptext4 3316                                            __ptext5 24EE  
                                          __ptext6 2C88                                            __ptext7 377E  
                                          __ptext8 36A0                                            __ptext9 2AE2  
                     i2lcd_4bit_send_char_data@lcd 000F                       i2lcd_4bit_send_char_data@ret 0012  
                                        _T0CONbits 000FD5                                          _T1CONbits 000FCD  
                                   ??_MSSP_I2C_ISR 0001                                          _T2CONbits 000FCA  
                                       ??___xxtofl 0005                                          _T3CONbits 000FB1  
                                          _motor_1 00DB                                            _motor_2 00D9  
                         ??i2_gpio_pin_write_logic 0004                                            _sprintf 3652  
            lcd_4bit_intialize@l_data_pins_counter 0163                                     __pintcode_body 1030  
                             end_of_initialization 3536                                  lcd_send_4bits@lcd 0158  
                                lcd_send_4bits@ret 00EF                           select_result_format@_adc 00EB  
                                          fputc@fp 0003                                            memset@c 0003  
                                          memset@k 0009                                            memset@n 0005  
                                          memset@s 000B                              ?_adcInterruptHandeler 0001  
                                          int_func 1030                                            fputs@fp 000C  
                                   ??_MSSP_SPI_ISR 0001                         __end_of_lcd_4bit_intialize 24EE  
                          ??_lcd_4bit_send_command 00F1                             ?i2_lcd_4bit_set_cursor 0013  
                            gpio_pin_intialize@ret 0159                                      _dc_motor_stop 37C4  
                                __end_of_vfpfcnvrt 1D82                                          _RCSTAbits 000FAB  
                  __end_of_convert_uint8_to_string 35FE                                            postdec1 000FE5  
                                          postdec2 000FDD                                            postinc0 000FEE  
                                          postinc1 000FE6                                            postinc2 000FDE  
                                       ??_vfprintf 0056                              ?_select_result_format 00EB  
                                          strlen@a 0003                                            strlen@s 0001  
               __end_ofi2_lcd_4bit_send_string_pos 317C                         i2_lcd_4bit_send_string_pos 30DC  
                  __end_of_lcd_4bit_send_char_data 3316                              _INT1_InterruptHandler 00B0  
                                        _PORTBbits 000F81                                   _InterruptManager 0008  
                    gpio_pin_intialize@_pin_config 00EF                         lcd_4bit_send_char_data@lcd 015B  
                       lcd_4bit_send_char_data@ret 015E               __end_of_gpio_pin_direction_intialize 2642  
                     _gpio_pin_direction_intialize 24EE                                      ___xxtofl@sign 0009  
                                        _TRISCbits 000F94                                _ADC_StartConversion 3A30  
                                      ___flmul@grs 001C                                        _CCP1CONbits 000FBD  
                                      _CCP2CONbits 000FBA                                          _TXSTAbits 000FAC  
                                   ?_dc_motor_stop 000B                        ??i2_lcd_4bit_send_char_data 0012  
                               relay_turn_on@F3012 00C2                                _lcd_4bit_set_cursor 2ED8  
                             ?_ADC_StartConversion 00EB                        lcd_4bit_send_string_pos@lcd 0166  
                      lcd_4bit_send_string_pos@ret 016C                        lcd_4bit_send_string_pos@row 0168  
                      lcd_4bit_send_string_pos@str 016A                      convert_uint16_to_string@F3163 0100  
                                      vfpfcnvrt@ap 0044                                        vfpfcnvrt@fp 0040  
                                      vfpfcnvrt@ll 0048                                        _BAUDCONbits 000FB8  
          adc_input_channel_port_configure@channel 00ED                                     _timer0_preload 009A  
                                   __end_of_memset 2234                                     _timer1_preload 0096  
                                   _timer2_preload 00C0                       ?_configure_voltage_reference 00EB  
                      i2lcd_4bit_set_cursor@coulmn 0016                                     __end_of_strlen 39CC  
                              start_initialization 34DA                                     _timer3_preload 0090  
                     ?_lcd_4bit_send_enable_signal 00EF                               ?_lcd_4bit_set_cursor 015F  
                                      __end_of_abs 395C   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3070 00C8  
MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3055 00CE   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3064 00CB  
MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3057 00CD   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3066 00CA  
MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3059 00CC   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3068 00C9  
                                      __end_of_pad 2E14                      ?_gpio_pin_direction_intialize 00EB  
         ADC_GetConversionResult@conversion_result 0003                             ??_adcInterruptHandeler 0071  
                           dc_motor_stop@_dc_motor 000B                          _EUSART_RxInterruptHandler 008C  
                             __end_of_MSSP_I2C_ISR 3B30                              ??_ADC_StartConversion 00ED  
                       __end_of_dc_motor_move_left 3896                                        vfprintf@fmt 0052  
                                ?_WelcomingMessage 0001                         _EUSART_FramingErrorHandler 008A  
                           ??_select_result_format 00ED                                 ??_WelcomingMessage 016D  
                                      __pdataBANK0 00C8                                        __pdataBANK1 012D  
                                         ?_ADC_ISR 0001                                           ??_memset 0007  
                            __end_of_EUSART_RX_ISR 3B50                              __end_of_EUSART_TX_ISR 3B44  
                                       memset@dest 0001                       lcd_4bit_send_command@command 015D  
                                 dc_motor_stop@ret 000D                            ADC_StartConversion@_adc 00EB  
                                         ??_strlen 0003                               __end_of_MSSP_SPI_ISR 3B4E  
                                         ?_RB4_ISR 0001                                           ?_RB5_ISR 0001  
                                         ?_RB6_ISR 0001                                           ?_RB7_ISR 0001  
                                        ___flmul@a 0013                                          ___flmul@b 000F  
                                      __pbssCOMRAM 0071                              ??_lcd_4bit_set_cursor 0163  
                        i2_lcd_4bit_send_char_data 3400        _I2C_Report_Write_Collision_InterruptHandler 00B8  
                                    __pcstackBANK0 00DD                                      __pcstackBANK1 0152  
                    ??_configure_voltage_reference 00ED                                   ___aodiv@dividend 0001  
                     convert_uint8_to_string@value 006F                                    _MSSP_I2C_BC_ISR 3B30  
                      ADC_GetConversionResult@_adc 0001                              _INT2_InterruptHandler 00AE  
                  gpio_pin_direction_intialize@ret 00ED                                    ??_dc_motor_stop 000D  
                            _TMR0_InterruptHandler 009C                                          __pnvBANK0 00F1  
                            _application_intialize 3736                                          _dtoa$4992 002E  
                                        __pintcode 0008           __end_of_adc_input_channel_port_configure 2BBE  
                ?_adc_input_channel_port_configure 0001                 ??_adc_input_channel_port_configure 00EB  
                 _adc_input_channel_port_configure 2AE2                                           ?___aodiv 0001  
                           i2_gpio_pin_write_logic 28B0                                           ?___aomod 0001  
                i2gpio_pin_write_logic@_pin_config 0001                    gpio_pin_write_logic@_pin_config 00EB  
                                 ___aodiv@quotient 0013                                           ?___flmul 000F  
                                         ?___fltol 0028                          gpio_pin_write_logic@logic 00ED  
                                      __smallconst 1000                          _RB4_InterruptHandler_HIGH 00AC  
                                         _CCP1_ISR 3B48                                           _CCP2_ISR 3B44  
                                         _ADC_Init 2C88                          _RB7_InterruptHandler_HIGH 00A0  
                                      ADC_Init@ret 0152                                           ?_sprintf 0058  
                               _gpio_pin_intialize 3316                            ??i2_lcd_4bit_set_cursor 0017  
                   ??_gpio_pin_direction_intialize 0152                           _RB5_InterruptHandler_LOW 00A6  
                                         _INT0_ISR 3B3C                                           _INT1_ISR 3B38  
                                         _INT2_ISR 3B34                                   i2_lcd_send_4bits 3472  
                                         _RB4_Flag 00D2                                           _RB5_Flag 00D1  
                                         _RB6_Flag 00D0                                           _RB7_Flag 00CF  
                                RB4_ISR@RB4_Source 0001                                ?_gpio_pin_intialize 00EF  
                         __end_of_InterruptManager 14B6                                           _PIE1bits 000F9D  
                                         _PIE2bits 000FA0                      __end_of_lcd_4bit_send_command 3296  
                                         i2u500_40 2232                                           i2u500_41 222E  
                                         i2u501_40 3412                                           i2u501_41 340E  
                                         i2u520_40 14F2                                           i2u440_40 38D8  
                                         i2u520_41 14EE                                           i2u440_41 38D4  
                                         i2u513_40 2E26                                           i2u521_40 1532  
                                         i2u441_40 39BE                                           i2u505_40 35BC  
                                         i2u513_41 2E22                                           i2u521_41 152E  
                                         i2u441_41 39BA                                           i2u505_41 35B8  
                                         _PIR1bits 000F9E                                           i2u514_40 2E38  
                                         i2u530_40 17CE                                           i2u522_40 1544  
                                         i2u442_40 1F48                                           i2u450_40 2278  
                                         i2u506_40 3820                                           i2u514_41 2E34  
                                         i2u530_41 17CA                                           i2u522_41 1540  
                                         i2u442_41 1F44                                           i2u450_41 2274  
                                         i2u506_41 381C                                           i2u515_40 2E5A  
                                         i2u531_40 17E4                                           i2u523_40 1554  
                                         i2u443_40 1F7A                                           i2u451_40 22B6  
                                         i2u507_40 3866                                           i2u515_41 2E56  
                                         i2u531_41 17E0                                           i2u523_41 1550  
                                         i2u443_41 1F76                                           i2u451_41 22B2  
                                         i2u507_41 3862                                           _PIR2bits 000FA1  
                                         i2u516_40 2E9C                                           i2u532_40 17F8  
                                         i2u524_40 158A                                           i2u540_40 2A68  
                                         i2u452_40 22E0                                           i2u436_40 2BD0  
                                         i2u460_40 1910                                           i2u508_40 37DA  
                                         i2u516_41 2E98                                           i2u532_41 17F4  
                                         i2u524_41 1586                                           i2u540_41 2A64  
                                         i2u444_41 1FA4                                           i2u452_41 22DC  
                                         i2u436_41 2BCC                                           i2u460_41 190A  
                                         i2u508_41 37D6                                           i2u533_40 1812  
                                         i2u525_40 159A                                           i2u541_40 2A90  
                                         i2u445_40 1FC8                                           i2u453_40 230E  
                                         i2u437_40 2BE2                                           i2u461_40 1912  
                                         i2u533_41 180E                                           i2u525_41 1596  
                                         i2u541_41 2A8C                                           i2u445_41 1FC4  
                                         i2u453_41 230A                                           i2u437_41 2BDE  
                                         i2u517_45 2EB4                                           i2u534_40 185A  
                                         i2u526_40 1714                                           i2u518_40 14D0  
                                         i2u542_40 2AB0                                           i2u550_40 1ECC  
                                         i2u446_40 1FF2                                           i2u454_40 2356  
                                         i2u438_40 2C0A                                           i2u470_40 1B2C  
                                         i2u462_40 1928                                           i2u534_41 1856  
                                         i2u518_41 14CC                                           i2u542_41 2AAC  
                                         i2u550_41 1EC8                                           i2u446_41 1FEE  
                                         i2u454_41 2352                                           i2u438_41 2C06  
                                         i2u470_41 1B28                                           i2u462_41 1924  
                  ??i2_lcd_4bit_send_enable_signal 000D                                           i2u526_45 170A  
                                         i2u535_40 1888                                           i2u527_40 176E  
                                         i2u519_40 14E2                                           i2u543_40 2AC0  
                                         i2u551_40 1EDA                                           i2u447_40 2032  
                                         i2u439_40 2C40                                           i2u455_40 2D5E  
                                         i2u471_40 1B3C                                           i2u463_40 1958  
                                         i2u535_41 1884                                           i2u527_41 176A  
                                         i2u519_41 14DE                                           i2u543_41 2ABC  
                                         i2u551_41 1ED6                                           i2u447_41 202E  
                                         i2u439_41 2C3C                                           i2u455_41 2D5A  
                                         i2u471_41 1B38                                           i2u463_41 1954  
                                         i2u536_40 18C2                                           i2u528_40 178E  
                                         i2u552_40 1F14                                           i2u544_40 1D94  
                                         i2u448_40 207C                                           i2u456_40 2D80  
                                         i2u472_40 1B4E                                           i2u464_40 1974  
                                         i2u536_41 18BE                                           i2u528_41 178A  
                                         i2u552_41 1F10                                           i2u544_41 1D90  
                                         i2u448_41 2078                                           i2u456_41 2D7C  
                                         i2u472_41 1B4A                                           i2u464_41 1970  
                                         i2u529_40 17A0                                           i2u537_40 29F2  
                                         i2u553_40 1F22                                           i2u545_40 1DA2  
                                         i2u449_40 2246                                           i2u457_40 2DD6  
                                         i2u473_40 1B5E                                           i2u465_40 19A2  
                                         i2u529_41 179C                                           i2u537_41 29EE  
                                         i2u553_41 1F1E                                           i2u545_41 1D9E  
                                         i2u449_41 2242                                           i2u457_41 2DD2  
                                         i2u473_41 1B5A                                           i2u465_41 199E  
                                         i2u538_40 2A26                                           i2u546_40 1DFE  
                                         i2u458_40 2DE6                                           i2u474_40 1B76  
                                         i2u466_40 19B0                                           i2u554_40 30EE  
                                         i2u570_40 286A                                           i2u546_41 1DFA  
                                         i2u458_41 2DE2                                           i2u474_41 1B72  
                                         i2u466_41 19AC                                           i2u554_41 30EA  
                                         i2u570_41 2866                                           i2u538_45 2A1C  
                                         i2u539_40 2A54                                           i2u547_40 1E54  
                                         i2u459_40 3936                                           i2u467_40 1ADA  
                                         i2u483_40 1BEA                                           i2u475_40 28C6  
                                         i2u555_40 313A                                           i2u539_41 2A50  
                                         i2u547_41 1E50                                           i2u459_41 3932  
                                         i2u467_41 1AD6                                           i2u483_41 1BE6  
                                         i2u475_41 28C2                                           i2u555_47 3130  
                                         i2u548_40 1E9E                                           i2u468_40 1AF8  
                                         i2u484_40 1C34                                           i2u476_40 28E8  
                                         i2u556_40 3168                                           i2u580_40 3A16  
                                         i2u900_40 121E                                           i2u548_41 1E9A  
                                         i2u468_41 1AF4                                           i2u484_41 1C30  
                                         i2u476_41 28E4                                           i2u580_41 3A12  
                                         i2u900_41 121A                                           i2u556_47 315E  
                                         i2u549_40 1EBC                                           i2u469_40 1B12  
                                         i2u485_40 1C5A                                           i2u557_40 3178  
                                         i2u901_40 1236                                           i2u549_41 1EB8  
                                         i2u469_41 1B0E                                           i2u485_41 1C56  
                                         i2u557_41 3174                                           i2u901_41 1232  
                                         i2u477_44 2910                                           i2u477_45 290C  
                                         i2u486_40 1D00                                           i2u581_48 3A1C  
                                         i2u582_40 3ADE                                           i2u910_40 12D0  
                                         i2u902_40 1244                                           i2u486_41 1CFC  
                                         i2u581_49 3A2E                                           i2u582_41 3ADA  
                                         i2u910_41 12CC                                           i2u902_41 1240  
                                         i2u478_44 2972                                           i2u478_45 296E  
                                         i2u487_40 359A                                           i2u583_40 3AC4  
                                         i2u911_40 12DE                                           i2u903_40 1252  
                                         i2u487_41 3596                                           i2u583_41 3AC0  
                                         i2u911_41 12DA                                           i2u903_41 124E  
                                         i2u496_40 20D8                                           i2u488_40 33A0  
                                         i2u584_40 3AAA                                           i2u920_40 1376  
                                         i2u912_40 12F0                                           i2u904_40 1264  
                                         i2u496_41 20D4                                           i2u488_41 339C  
                                         i2u584_41 3AA6                                           i2u920_41 1372  
                                         i2u912_41 12EC                                           i2u904_41 1260  
                                         i2u497_40 211A                                           i2u569_40 2830  
                                         i2u585_40 3A90                                           i2u921_40 1388  
                                         i2u913_40 1308                                           i2u905_40 127C  
                                         i2u497_41 2116                                           i2u569_41 282C  
                                         i2u585_41 3A8C                                           i2u921_41 1384  
                                         i2u913_41 1304                                           i2u905_41 1278  
                                         i2u498_40 218C                                           i2u930_40 1416  
                                         i2u922_40 1396                                           i2u914_40 1316  
                                         i2u906_40 128A                                           i2u498_41 2188  
                                         i2u930_41 1412                                           i2u922_41 1392  
                                         i2u914_41 1312                                           i2u906_41 1286  
                                         i2u499_40 21D2                                           i2u931_40 1428  
                                         i2u923_40 13A8                                           i2u915_40 1328  
                                         i2u907_40 1298                                           i2u499_41 21CE  
                                         i2u931_41 1424                                           i2u923_41 13A4  
                                         i2u915_41 1324                                           i2u907_41 1294  
                                         i2u932_40 1436                                           i2u924_40 13B6  
                                         i2u916_40 1336                                           i2u908_40 12AA  
                                         i2u932_41 1432                                           i2u924_41 13B2  
                                         i2u916_41 1332                                           i2u908_41 12A6  
                                         i2u933_40 1448                                           i2u925_40 13C8  
                                         i2u917_40 1348                                           i2u909_40 12C2  
                                         i2u933_41 1444                                           i2u925_41 13C4  
                                         i2u917_41 1344                                           i2u909_41 12BE  
                                         i2u934_40 1456                                           i2u926_40 13D6  
                                         i2u918_40 1356                                           i2u934_41 1452  
                                         i2u926_41 13D2                                           i2u918_41 1352  
                                         i2u935_40 1468                                           i2u927_40 13E8  
                                         i2u919_40 1368                                           i2u935_41 1464  
                                         i2u927_41 13E4                                           i2u919_41 1364  
                                         i2u936_40 1476                                           i2u928_40 13F6  
                                         i2u880_40 10C6                                           i2u936_41 1472  
                                         i2u928_41 13F2                                           i2u880_41 10C2  
                                         i2u929_40 1408                                           i2u881_40 10D8  
                                         i2u929_41 1404                                           i2u881_41 10D4  
                                         i2u890_40 1172                                           i2u882_40 10E6  
                                         i2u890_41 116E                                           i2u882_41 10E2  
                                         i2u891_40 1180                                           i2u883_40 10F4  
                                         i2u875_40 1078                                           i2u891_41 117C  
                                         i2u883_41 10F0                                           i2u875_41 1074  
                                         i2u892_40 1192                                           i2u884_40 1106  
                                         i2u876_40 1086                                           i2u892_41 118E  
                                         i2u884_41 1102                                           i2u876_41 1082  
                                         i2u893_40 11AA                                           i2u885_40 111E  
                                         i2u877_40 1098                                           i2u893_41 11A6  
                                         i2u885_41 111A                                           i2u877_41 1094  
                                         i2u894_40 11B8                                           i2u886_40 112C  
                                         i2u878_40 10A6                                           i2u894_41 11B4  
                                         i2u886_41 1128                                           i2u878_41 10A2  
                                         i2u895_40 11C6                                           i2u887_40 113A  
                                         i2u879_40 10B8                                           i2u895_41 11C2  
                                         i2u887_41 1136                                           i2u879_41 10B4  
                                         i2u896_40 11D8                                           i2u888_40 114C  
                                         i2u896_41 11D4                                           i2u888_41 1148  
                                         i2u897_40 11F0                                           i2u889_40 1164  
                                         i2u897_41 11EC                                           i2u889_41 1160  
                                         i2u898_40 11FE                                           i2u898_41 11FA  
                                         i2u899_40 120C                                           i2u899_41 1208  
                              _dc_motor_initialize 36EC                       dc_motor_initialize@_dc_motor 015A  
                                         _TMR0_ISR 3B16                                           _TMR1_ISR 3B08  
                                         _TMR2_ISR 3B24                                           _TMR3_ISR 3AFA  
                               _lcd_4bit_intialize 2398                                          _vfpfcnvrt 1BC4  
                      ?i2_lcd_4bit_send_string_pos 001A                           _lcd_4bit_send_string_pos 2F8A  
                                       _ADCON0bits 000FC2                                         _ADCON1bits 000FC1  
                                       _ADCON2bits 000FC0                            __end_of_MSSP_I2C_BC_ISR 3B34  
                             ??_gpio_pin_intialize 0158                           ?_convert_uint8_to_string 006D  
                              ?_lcd_4bit_intialize 015F                               ?_dc_motor_initialize 015A  
                          gpio_pin_write_logic@ret 00EE                                        _INTCON2bits 000FF1  
                                      _INTCON3bits 000FF0                           ?_lcd_4bit_send_char_data 015B  
                                        copy_data0 34EE                                          copy_data1 350E  
                         ?i2_lcd_4bit_send_command 000F                                _dc_motor_move_right 380A  
                                       _EECON1bits 000FA6                            fp__adcInterruptHandeler 0000  
                           ?_application_intialize 0001                               ??_lcd_4bit_intialize 0161  
                                         __Hrparam 0000                                         vfprintf@ap 0054  
                                         __Lrparam 0000                                         vfprintf@fp 0050  
                         ?_ADC_GetConversionResult 0001                                  RB6_ISR@RB6_Source 0001  
                                         _adcArray 0126                              _CCP1_InterruptHandler 00BC  
                           lcd_4bit_set_cursor@lcd 015F                             lcd_4bit_set_cursor@ret 0165  
                                       ?_vfpfcnvrt 0040                             lcd_4bit_set_cursor@row 0161  
                             ?_dc_motor_move_right 000B                                    ___aodiv@divisor 0009  
                               __end_of_btn_values 1011                                    ___aodiv@counter 0011  
                            _TMR1_InterruptHandler 0098                                         sprintf@fmt 005A  
                                         ___xxtofl 1D82                                       _MSSP_I2C_ISR 3B2C  
                            ??_dc_motor_initialize 00F1                                           __ptext10 35FE  
                                         __ptext11 2F8A                                           __ptext20 3AFA  
                                         __ptext12 2ED8                                           __ptext21 3B24  
                                         __ptext13 3216                                           __ptext30 3B30  
                                         __ptext22 3B08                                           __ptext14 3296  
                                         __ptext31 3B34                                           __ptext23 3B16  
                                         __ptext15 317C                                           __ptext40 30DC  
                                         __ptext32 3B38                                           __ptext24 3A7C  
                                         __ptext16 395C                                           __ptext41 3034  
                                         __ptext33 3B3C                                           __ptext25 3A96  
                                         __ptext17 2642                                           __ptext50 35A4  
                                         __ptext42 338E                                           __ptext34 3B40  
                                         __ptext26 3AB0                                           __ptext18 3A30  
                                         __ptext51 3652                                           __ptext43 3400  
                                         __ptext35 3B4E                                           __ptext27 3ACA  
                                         __ptext60 391C                                           __ptext52 3540  
                                         __ptext44 3472                                           __ptext36 3B44  
                                         __ptext28 3B4C                                           __ptext61 2234  
                                         __ptext53 1BC4                                           __ptext45 39CC  
                                         __ptext37 3B48                                           __ptext29 3B2C  
                                         __ptext62 1F36                                           __ptext54 18E0  
                                         __ptext46 37C4                                           __ptext38 3A00  
                                         __ptext63 20BE                                           __ptext55 2D4E  
                                         __ptext47 380A                                           __ptext39 277E  
                                         __ptext64 1D82                                           __ptext56 3996  
                                         __ptext48 3850                                           __ptext65 29DC  
                                         __ptext57 3896                                           __ptext49 28B0  
                                         __ptext66 14B6                                           __ptext58 2BBE  
                                         __ptext67 2E14                                           __ptext59 3B50  
                                         __ptext68 0000                    configure_voltage_reference@_adc 00EB  
                    i2lcd_4bit_send_char_data@data 0011                             dc_motor_move_right@ret 000D  
                                     _MSSP_SPI_ISR 3B4C                                           isa$xinst 000000  
                                         int$flags 0073                                           _vfprintf 3540  
            __end_ofi2_lcd_4bit_send_enable_signal 3A00                      i2_lcd_4bit_send_enable_signal 39CC  
                            ??_dc_motor_move_right 000D                                     _lcd_send_4bits 317C  
                    i2lcd_send_4bits@_data_command 000D                                   ___aomod@dividend 0001  
                                 ?_MSSP_I2C_BC_ISR 0001                                 _dc_motor_move_left 3850  
                                       _INTCONbits 000FF2                    __end_ofi2_lcd_4bit_send_command 3400  
                     __end_of_gpio_pin_write_logic 277E                                ?_dc_motor_move_left 000B  
                                         intlevel2 0000                                          sprintf@ap 0060  
                   i2lcd_4bit_send_command@command 0011                        __end_of_ADC_StartConversion 3A56  
                 i2lcd_4bit_send_enable_signal@lcd 000B                     lcd_4bit_send_enable_signal@lcd 00EF  
                 i2lcd_4bit_send_enable_signal@ret 000D                     lcd_4bit_send_enable_signal@ret 0158  
                        _EUSART_TxInterruptHandler 008E                    __end_of_ADC_GetConversionResult 2ED8  
                          ?i2_gpio_pin_write_logic 0001                               ??_dc_motor_move_left 000D  
                           __end_of_lcd_send_4bits 3216                                    ___aomod@divisor 0009  
                     dc_motor_move_right@_dc_motor 000B                                        ??_vfpfcnvrt 0046  
                                  ___aomod@counter 0011                        __end_of_lcd_4bit_set_cursor 2F8A  
                         __end_ofi2_lcd_send_4bits 34DA                                           sprintf@f 0062  
                                         sprintf@s 0058                                     _port_registers 012D  
                                      _SSPCON1bits 000FC6                                        _SSPCON2bits 000FC5  
                                     ___aodiv@sign 0012                              _CCP2_InterruptHandler 00BA  
                      lcd_4bit_send_char_data@data 015D                     __end_ofi2_gpio_pin_write_logic 29DC  
                    __end_ofi2_lcd_4bit_set_cursor 30DC                              _TMR2_InterruptHandler 0094  
                                ?_InterruptManager 0001                                       ___aomod@sign 0012  
                            __end_of_dc_motor_stop 380A                         ??_lcd_4bit_send_string_pos 00F1  
